

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Sat May 10 12:25:46 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F15313
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,space=0,delta=2,noexec
     6                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,space=0,delta=2
    26                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    30                           	dabs	1,0x7E,2
    31     0000                     
    32                           ; Generated 11/01/2024 GMT
    33                           ; 
    34                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution. Publication is not required when
    48                           ;        this file is used in an embedded application.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F15313 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66     0008                     bsr             equ	8
    67     0005                     fsr0h           equ	5
    68     0004                     fsr0l           equ	4
    69     0007                     fsr1h           equ	7
    70     0006                     fsr1l           equ	6
    71     0000                     indf            equ	0
    72     0000                     indf0           equ	0
    73     0001                     indf1           equ	1
    74     000B                     intcon          equ	11
    75     0002                     pc              equ	2
    76     0002                     pcl             equ	2
    77     000A                     pclath          equ	10
    78     0003                     status          equ	3
    79     0009                     wreg            equ	9
    80     0000                     INDF0           equ	0	;# 
    81     0001                     INDF1           equ	1	;# 
    82     0002                     PCL             equ	2	;# 
    83     0003                     STATUS          equ	3	;# 
    84     0004                     FSR0L           equ	4	;# 
    85     0005                     FSR0H           equ	5	;# 
    86     0006                     FSR1L           equ	6	;# 
    87     0007                     FSR1H           equ	7	;# 
    88     0008                     BSR             equ	8	;# 
    89     0009                     WREG            equ	9	;# 
    90     000A                     PCLATH          equ	10	;# 
    91     000B                     INTCON          equ	11	;# 
    92     000C                     PORTA           equ	12	;# 
    93     0012                     TRISA           equ	18	;# 
    94     0018                     LATA            equ	24	;# 
    95     009B                     ADRES           equ	155	;# 
    96     009B                     ADRESL          equ	155	;# 
    97     009C                     ADRESH          equ	156	;# 
    98     009D                     ADCON0          equ	157	;# 
    99     009E                     ADCON1          equ	158	;# 
   100     009F                     ADACT           equ	159	;# 
   101     0119                     RC1REG          equ	281	;# 
   102     0119                     RCREG           equ	281	;# 
   103     0119                     RCREG1          equ	281	;# 
   104     011A                     TX1REG          equ	282	;# 
   105     011A                     TXREG1          equ	282	;# 
   106     011A                     TXREG           equ	282	;# 
   107     011B                     SP1BRG          equ	283	;# 
   108     011B                     SPBRG           equ	283	;# 
   109     011B                     SP1BRGL         equ	283	;# 
   110     011B                     SPBRG1          equ	283	;# 
   111     011B                     SPBRGL          equ	283	;# 
   112     011C                     SP1BRGH         equ	284	;# 
   113     011C                     SPBRGH          equ	284	;# 
   114     011C                     SPBRGH1         equ	284	;# 
   115     011D                     RC1STA          equ	285	;# 
   116     011D                     RCSTA1          equ	285	;# 
   117     011D                     RCSTA           equ	285	;# 
   118     011E                     TX1STA          equ	286	;# 
   119     011E                     TXSTA1          equ	286	;# 
   120     011E                     TXSTA           equ	286	;# 
   121     011F                     BAUD1CON        equ	287	;# 
   122     011F                     BAUDCON1        equ	287	;# 
   123     011F                     BAUDCTL1        equ	287	;# 
   124     011F                     BAUDCON         equ	287	;# 
   125     011F                     BAUDCTL         equ	287	;# 
   126     018C                     SSP1BUF         equ	396	;# 
   127     018D                     SSP1ADD         equ	397	;# 
   128     018E                     SSP1MSK         equ	398	;# 
   129     018F                     SSP1STAT        equ	399	;# 
   130     0190                     SSP1CON1        equ	400	;# 
   131     0191                     SSP1CON2        equ	401	;# 
   132     0192                     SSP1CON3        equ	402	;# 
   133     020C                     TMR1            equ	524	;# 
   134     020C                     TMR1L           equ	524	;# 
   135     020D                     TMR1H           equ	525	;# 
   136     020E                     T1CON           equ	526	;# 
   137     020F                     T1GCON          equ	527	;# 
   138     020F                     PR1             equ	527	;# 
   139     0210                     T1GATE          equ	528	;# 
   140     0210                     TMR1GATE        equ	528	;# 
   141     0211                     T1CLK           equ	529	;# 
   142     0211                     TMR1CLK         equ	529	;# 
   143     028C                     T2TMR           equ	652	;# 
   144     028C                     TMR2            equ	652	;# 
   145     028D                     T2PR            equ	653	;# 
   146     028D                     PR2             equ	653	;# 
   147     028E                     T2CON           equ	654	;# 
   148     028F                     T2HLT           equ	655	;# 
   149     0290                     T2CLKCON        equ	656	;# 
   150     0291                     T2RST           equ	657	;# 
   151     030C                     CCPR1           equ	780	;# 
   152     030C                     CCPR1L          equ	780	;# 
   153     030D                     CCPR1H          equ	781	;# 
   154     030E                     CCP1CON         equ	782	;# 
   155     030F                     CCP1CAP         equ	783	;# 
   156     0310                     CCPR2           equ	784	;# 
   157     0310                     CCPR2L          equ	784	;# 
   158     0311                     CCPR2H          equ	785	;# 
   159     0312                     CCP2CON         equ	786	;# 
   160     0313                     CCP2CAP         equ	787	;# 
   161     0314                     PWM3DC          equ	788	;# 
   162     0314                     PWM3DCL         equ	788	;# 
   163     0315                     PWM3DCH         equ	789	;# 
   164     0316                     PWM3CON         equ	790	;# 
   165     0318                     PWM4DC          equ	792	;# 
   166     0318                     PWM4DCL         equ	792	;# 
   167     0319                     PWM4DCH         equ	793	;# 
   168     031A                     PWM4CON         equ	794	;# 
   169     031C                     PWM5DC          equ	796	;# 
   170     031C                     PWM5DCL         equ	796	;# 
   171     031D                     PWM5DCH         equ	797	;# 
   172     031E                     PWM5CON         equ	798	;# 
   173     038C                     PWM6DC          equ	908	;# 
   174     038C                     PWM6DCL         equ	908	;# 
   175     038D                     PWM6DCH         equ	909	;# 
   176     038E                     PWM6CON         equ	910	;# 
   177     058C                     NCO1ACC         equ	1420	;# 
   178     058C                     NCO1ACCL        equ	1420	;# 
   179     058D                     NCO1ACCH        equ	1421	;# 
   180     058E                     NCO1ACCU        equ	1422	;# 
   181     058F                     NCO1INC         equ	1423	;# 
   182     058F                     NCO1INCL        equ	1423	;# 
   183     0590                     NCO1INCH        equ	1424	;# 
   184     0591                     NCO1INCU        equ	1425	;# 
   185     0592                     NCO1CON         equ	1426	;# 
   186     0593                     NCO1CLK         equ	1427	;# 
   187     059C                     TMR0L           equ	1436	;# 
   188     059C                     TMR0            equ	1436	;# 
   189     059D                     TMR0H           equ	1437	;# 
   190     059D                     PR0             equ	1437	;# 
   191     059E                     T0CON0          equ	1438	;# 
   192     059F                     T0CON1          equ	1439	;# 
   193     060C                     CWG1CLKCON      equ	1548	;# 
   194     060D                     CWG1DAT         equ	1549	;# 
   195     060E                     CWG1DBR         equ	1550	;# 
   196     060F                     CWG1DBF         equ	1551	;# 
   197     0610                     CWG1CON0        equ	1552	;# 
   198     0611                     CWG1CON1        equ	1553	;# 
   199     0612                     CWG1AS0         equ	1554	;# 
   200     0613                     CWG1AS1         equ	1555	;# 
   201     0614                     CWG1STR         equ	1556	;# 
   202     070C                     PIR0            equ	1804	;# 
   203     070D                     PIR1            equ	1805	;# 
   204     070E                     PIR2            equ	1806	;# 
   205     070F                     PIR3            equ	1807	;# 
   206     0710                     PIR4            equ	1808	;# 
   207     0711                     PIR5            equ	1809	;# 
   208     0712                     PIR6            equ	1810	;# 
   209     0713                     PIR7            equ	1811	;# 
   210     0716                     PIE0            equ	1814	;# 
   211     0717                     PIE1            equ	1815	;# 
   212     0718                     PIE2            equ	1816	;# 
   213     0719                     PIE3            equ	1817	;# 
   214     071A                     PIE4            equ	1818	;# 
   215     071B                     PIE5            equ	1819	;# 
   216     071C                     PIE6            equ	1820	;# 
   217     071D                     PIE7            equ	1821	;# 
   218     0796                     PMD0            equ	1942	;# 
   219     0797                     PMD1            equ	1943	;# 
   220     0798                     PMD2            equ	1944	;# 
   221     0799                     PMD3            equ	1945	;# 
   222     079A                     PMD4            equ	1946	;# 
   223     079B                     PMD5            equ	1947	;# 
   224     080C                     WDTCON0         equ	2060	;# 
   225     080D                     WDTCON1         equ	2061	;# 
   226     080E                     WDTPSL          equ	2062	;# 
   227     080F                     WDTPSH          equ	2063	;# 
   228     0810                     WDTTMR          equ	2064	;# 
   229     0811                     BORCON          equ	2065	;# 
   230     0812                     VREGCON         equ	2066	;# 
   231     0813                     PCON0           equ	2067	;# 
   232     0814                     PCON1           equ	2068	;# 
   233     081A                     NVMADR          equ	2074	;# 
   234     081A                     NVMADRL         equ	2074	;# 
   235     081B                     NVMADRH         equ	2075	;# 
   236     081C                     NVMDAT          equ	2076	;# 
   237     081C                     NVMDATL         equ	2076	;# 
   238     081D                     NVMDATH         equ	2077	;# 
   239     081E                     NVMCON1         equ	2078	;# 
   240     081F                     NVMCON2         equ	2079	;# 
   241     088C                     CPUDOZE         equ	2188	;# 
   242     088D                     OSCCON1         equ	2189	;# 
   243     088E                     OSCCON2         equ	2190	;# 
   244     088F                     OSCCON3         equ	2191	;# 
   245     0890                     OSCSTAT         equ	2192	;# 
   246     0891                     OSCEN           equ	2193	;# 
   247     0892                     OSCTUNE         equ	2194	;# 
   248     0893                     OSCFRQ          equ	2195	;# 
   249     0895                     CLKRCON         equ	2197	;# 
   250     0896                     CLKRCLK         equ	2198	;# 
   251     090C                     FVRCON          equ	2316	;# 
   252     090E                     DAC1CON0        equ	2318	;# 
   253     090F                     DAC1CON1        equ	2319	;# 
   254     091F                     ZCDCON          equ	2335	;# 
   255     098F                     CMOUT           equ	2447	;# 
   256     098F                     CMSTAT          equ	2447	;# 
   257     0990                     CM1CON0         equ	2448	;# 
   258     0991                     CM1CON1         equ	2449	;# 
   259     0992                     CM1NCH          equ	2450	;# 
   260     0993                     CM1PCH          equ	2451	;# 
   261     1E0F                     CLCDATA         equ	7695	;# 
   262     1E10                     CLC1CON         equ	7696	;# 
   263     1E11                     CLC1POL         equ	7697	;# 
   264     1E12                     CLC1SEL0        equ	7698	;# 
   265     1E13                     CLC1SEL1        equ	7699	;# 
   266     1E14                     CLC1SEL2        equ	7700	;# 
   267     1E15                     CLC1SEL3        equ	7701	;# 
   268     1E16                     CLC1GLS0        equ	7702	;# 
   269     1E17                     CLC1GLS1        equ	7703	;# 
   270     1E18                     CLC1GLS2        equ	7704	;# 
   271     1E19                     CLC1GLS3        equ	7705	;# 
   272     1E1A                     CLC2CON         equ	7706	;# 
   273     1E1B                     CLC2POL         equ	7707	;# 
   274     1E1C                     CLC2SEL0        equ	7708	;# 
   275     1E1D                     CLC2SEL1        equ	7709	;# 
   276     1E1E                     CLC2SEL2        equ	7710	;# 
   277     1E1F                     CLC2SEL3        equ	7711	;# 
   278     1E20                     CLC2GLS0        equ	7712	;# 
   279     1E21                     CLC2GLS1        equ	7713	;# 
   280     1E22                     CLC2GLS2        equ	7714	;# 
   281     1E23                     CLC2GLS3        equ	7715	;# 
   282     1E24                     CLC3CON         equ	7716	;# 
   283     1E25                     CLC3POL         equ	7717	;# 
   284     1E26                     CLC3SEL0        equ	7718	;# 
   285     1E27                     CLC3SEL1        equ	7719	;# 
   286     1E28                     CLC3SEL2        equ	7720	;# 
   287     1E29                     CLC3SEL3        equ	7721	;# 
   288     1E2A                     CLC3GLS0        equ	7722	;# 
   289     1E2B                     CLC3GLS1        equ	7723	;# 
   290     1E2C                     CLC3GLS2        equ	7724	;# 
   291     1E2D                     CLC3GLS3        equ	7725	;# 
   292     1E2E                     CLC4CON         equ	7726	;# 
   293     1E2F                     CLC4POL         equ	7727	;# 
   294     1E30                     CLC4SEL0        equ	7728	;# 
   295     1E31                     CLC4SEL1        equ	7729	;# 
   296     1E32                     CLC4SEL2        equ	7730	;# 
   297     1E33                     CLC4SEL3        equ	7731	;# 
   298     1E34                     CLC4GLS0        equ	7732	;# 
   299     1E35                     CLC4GLS1        equ	7733	;# 
   300     1E36                     CLC4GLS2        equ	7734	;# 
   301     1E37                     CLC4GLS3        equ	7735	;# 
   302     1E8F                     PPSLOCK         equ	7823	;# 
   303     1E90                     INTPPS          equ	7824	;# 
   304     1E91                     T0CKIPPS        equ	7825	;# 
   305     1E92                     T1CKIPPS        equ	7826	;# 
   306     1E93                     T1GPPS          equ	7827	;# 
   307     1E9C                     T2INPPS         equ	7836	;# 
   308     1EA1                     CCP1PPS         equ	7841	;# 
   309     1EA2                     CCP2PPS         equ	7842	;# 
   310     1EB1                     CWG1PPS         equ	7857	;# 
   311     1EBB                     CLCIN0PPS       equ	7867	;# 
   312     1EBC                     CLCIN1PPS       equ	7868	;# 
   313     1EBD                     CLCIN2PPS       equ	7869	;# 
   314     1EBE                     CLCIN3PPS       equ	7870	;# 
   315     1EC3                     ADACTPPS        equ	7875	;# 
   316     1EC5                     SSP1CLKPPS      equ	7877	;# 
   317     1EC6                     SSP1DATPPS      equ	7878	;# 
   318     1EC7                     SSP1SSPPS       equ	7879	;# 
   319     1ECB                     RX1DTPPS        equ	7883	;# 
   320     1ECC                     TX1CKPPS        equ	7884	;# 
   321     1F10                     RA0PPS          equ	7952	;# 
   322     1F11                     RA1PPS          equ	7953	;# 
   323     1F12                     RA2PPS          equ	7954	;# 
   324     1F13                     RA3PPS          equ	7955	;# 
   325     1F14                     RA4PPS          equ	7956	;# 
   326     1F15                     RA5PPS          equ	7957	;# 
   327     1F38                     ANSELA          equ	7992	;# 
   328     1F39                     WPUA            equ	7993	;# 
   329     1F3A                     ODCONA          equ	7994	;# 
   330     1F3B                     SLRCONA         equ	7995	;# 
   331     1F3C                     INLVLA          equ	7996	;# 
   332     1F3D                     IOCAP           equ	7997	;# 
   333     1F3E                     IOCAN           equ	7998	;# 
   334     1F3F                     IOCAF           equ	7999	;# 
   335     1FE4                     STATUS_SHAD     equ	8164	;# 
   336     1FE5                     WREG_SHAD       equ	8165	;# 
   337     1FE6                     BSR_SHAD        equ	8166	;# 
   338     1FE7                     PCLATH_SHAD     equ	8167	;# 
   339     1FE8                     FSR0_SHAD       equ	8168	;# 
   340     1FE8                     FSR0L_SHAD      equ	8168	;# 
   341     1FE9                     FSR0H_SHAD      equ	8169	;# 
   342     1FEA                     FSR1_SHAD       equ	8170	;# 
   343     1FEA                     FSR1L_SHAD      equ	8170	;# 
   344     1FEB                     FSR1H_SHAD      equ	8171	;# 
   345     1FED                     STKPTR          equ	8173	;# 
   346     1FEE                     TOSL            equ	8174	;# 
   347     1FEF                     TOSH            equ	8175	;# 
   348     0000                     INDF0           equ	0	;# 
   349     0001                     INDF1           equ	1	;# 
   350     0002                     PCL             equ	2	;# 
   351     0003                     STATUS          equ	3	;# 
   352     0004                     FSR0L           equ	4	;# 
   353     0005                     FSR0H           equ	5	;# 
   354     0006                     FSR1L           equ	6	;# 
   355     0007                     FSR1H           equ	7	;# 
   356     0008                     BSR             equ	8	;# 
   357     0009                     WREG            equ	9	;# 
   358     000A                     PCLATH          equ	10	;# 
   359     000B                     INTCON          equ	11	;# 
   360     000C                     PORTA           equ	12	;# 
   361     0012                     TRISA           equ	18	;# 
   362     0018                     LATA            equ	24	;# 
   363     009B                     ADRES           equ	155	;# 
   364     009B                     ADRESL          equ	155	;# 
   365     009C                     ADRESH          equ	156	;# 
   366     009D                     ADCON0          equ	157	;# 
   367     009E                     ADCON1          equ	158	;# 
   368     009F                     ADACT           equ	159	;# 
   369     0119                     RC1REG          equ	281	;# 
   370     0119                     RCREG           equ	281	;# 
   371     0119                     RCREG1          equ	281	;# 
   372     011A                     TX1REG          equ	282	;# 
   373     011A                     TXREG1          equ	282	;# 
   374     011A                     TXREG           equ	282	;# 
   375     011B                     SP1BRG          equ	283	;# 
   376     011B                     SPBRG           equ	283	;# 
   377     011B                     SP1BRGL         equ	283	;# 
   378     011B                     SPBRG1          equ	283	;# 
   379     011B                     SPBRGL          equ	283	;# 
   380     011C                     SP1BRGH         equ	284	;# 
   381     011C                     SPBRGH          equ	284	;# 
   382     011C                     SPBRGH1         equ	284	;# 
   383     011D                     RC1STA          equ	285	;# 
   384     011D                     RCSTA1          equ	285	;# 
   385     011D                     RCSTA           equ	285	;# 
   386     011E                     TX1STA          equ	286	;# 
   387     011E                     TXSTA1          equ	286	;# 
   388     011E                     TXSTA           equ	286	;# 
   389     011F                     BAUD1CON        equ	287	;# 
   390     011F                     BAUDCON1        equ	287	;# 
   391     011F                     BAUDCTL1        equ	287	;# 
   392     011F                     BAUDCON         equ	287	;# 
   393     011F                     BAUDCTL         equ	287	;# 
   394     018C                     SSP1BUF         equ	396	;# 
   395     018D                     SSP1ADD         equ	397	;# 
   396     018E                     SSP1MSK         equ	398	;# 
   397     018F                     SSP1STAT        equ	399	;# 
   398     0190                     SSP1CON1        equ	400	;# 
   399     0191                     SSP1CON2        equ	401	;# 
   400     0192                     SSP1CON3        equ	402	;# 
   401     020C                     TMR1            equ	524	;# 
   402     020C                     TMR1L           equ	524	;# 
   403     020D                     TMR1H           equ	525	;# 
   404     020E                     T1CON           equ	526	;# 
   405     020F                     T1GCON          equ	527	;# 
   406     020F                     PR1             equ	527	;# 
   407     0210                     T1GATE          equ	528	;# 
   408     0210                     TMR1GATE        equ	528	;# 
   409     0211                     T1CLK           equ	529	;# 
   410     0211                     TMR1CLK         equ	529	;# 
   411     028C                     T2TMR           equ	652	;# 
   412     028C                     TMR2            equ	652	;# 
   413     028D                     T2PR            equ	653	;# 
   414     028D                     PR2             equ	653	;# 
   415     028E                     T2CON           equ	654	;# 
   416     028F                     T2HLT           equ	655	;# 
   417     0290                     T2CLKCON        equ	656	;# 
   418     0291                     T2RST           equ	657	;# 
   419     030C                     CCPR1           equ	780	;# 
   420     030C                     CCPR1L          equ	780	;# 
   421     030D                     CCPR1H          equ	781	;# 
   422     030E                     CCP1CON         equ	782	;# 
   423     030F                     CCP1CAP         equ	783	;# 
   424     0310                     CCPR2           equ	784	;# 
   425     0310                     CCPR2L          equ	784	;# 
   426     0311                     CCPR2H          equ	785	;# 
   427     0312                     CCP2CON         equ	786	;# 
   428     0313                     CCP2CAP         equ	787	;# 
   429     0314                     PWM3DC          equ	788	;# 
   430     0314                     PWM3DCL         equ	788	;# 
   431     0315                     PWM3DCH         equ	789	;# 
   432     0316                     PWM3CON         equ	790	;# 
   433     0318                     PWM4DC          equ	792	;# 
   434     0318                     PWM4DCL         equ	792	;# 
   435     0319                     PWM4DCH         equ	793	;# 
   436     031A                     PWM4CON         equ	794	;# 
   437     031C                     PWM5DC          equ	796	;# 
   438     031C                     PWM5DCL         equ	796	;# 
   439     031D                     PWM5DCH         equ	797	;# 
   440     031E                     PWM5CON         equ	798	;# 
   441     038C                     PWM6DC          equ	908	;# 
   442     038C                     PWM6DCL         equ	908	;# 
   443     038D                     PWM6DCH         equ	909	;# 
   444     038E                     PWM6CON         equ	910	;# 
   445     058C                     NCO1ACC         equ	1420	;# 
   446     058C                     NCO1ACCL        equ	1420	;# 
   447     058D                     NCO1ACCH        equ	1421	;# 
   448     058E                     NCO1ACCU        equ	1422	;# 
   449     058F                     NCO1INC         equ	1423	;# 
   450     058F                     NCO1INCL        equ	1423	;# 
   451     0590                     NCO1INCH        equ	1424	;# 
   452     0591                     NCO1INCU        equ	1425	;# 
   453     0592                     NCO1CON         equ	1426	;# 
   454     0593                     NCO1CLK         equ	1427	;# 
   455     059C                     TMR0L           equ	1436	;# 
   456     059C                     TMR0            equ	1436	;# 
   457     059D                     TMR0H           equ	1437	;# 
   458     059D                     PR0             equ	1437	;# 
   459     059E                     T0CON0          equ	1438	;# 
   460     059F                     T0CON1          equ	1439	;# 
   461     060C                     CWG1CLKCON      equ	1548	;# 
   462     060D                     CWG1DAT         equ	1549	;# 
   463     060E                     CWG1DBR         equ	1550	;# 
   464     060F                     CWG1DBF         equ	1551	;# 
   465     0610                     CWG1CON0        equ	1552	;# 
   466     0611                     CWG1CON1        equ	1553	;# 
   467     0612                     CWG1AS0         equ	1554	;# 
   468     0613                     CWG1AS1         equ	1555	;# 
   469     0614                     CWG1STR         equ	1556	;# 
   470     070C                     PIR0            equ	1804	;# 
   471     070D                     PIR1            equ	1805	;# 
   472     070E                     PIR2            equ	1806	;# 
   473     070F                     PIR3            equ	1807	;# 
   474     0710                     PIR4            equ	1808	;# 
   475     0711                     PIR5            equ	1809	;# 
   476     0712                     PIR6            equ	1810	;# 
   477     0713                     PIR7            equ	1811	;# 
   478     0716                     PIE0            equ	1814	;# 
   479     0717                     PIE1            equ	1815	;# 
   480     0718                     PIE2            equ	1816	;# 
   481     0719                     PIE3            equ	1817	;# 
   482     071A                     PIE4            equ	1818	;# 
   483     071B                     PIE5            equ	1819	;# 
   484     071C                     PIE6            equ	1820	;# 
   485     071D                     PIE7            equ	1821	;# 
   486     0796                     PMD0            equ	1942	;# 
   487     0797                     PMD1            equ	1943	;# 
   488     0798                     PMD2            equ	1944	;# 
   489     0799                     PMD3            equ	1945	;# 
   490     079A                     PMD4            equ	1946	;# 
   491     079B                     PMD5            equ	1947	;# 
   492     080C                     WDTCON0         equ	2060	;# 
   493     080D                     WDTCON1         equ	2061	;# 
   494     080E                     WDTPSL          equ	2062	;# 
   495     080F                     WDTPSH          equ	2063	;# 
   496     0810                     WDTTMR          equ	2064	;# 
   497     0811                     BORCON          equ	2065	;# 
   498     0812                     VREGCON         equ	2066	;# 
   499     0813                     PCON0           equ	2067	;# 
   500     0814                     PCON1           equ	2068	;# 
   501     081A                     NVMADR          equ	2074	;# 
   502     081A                     NVMADRL         equ	2074	;# 
   503     081B                     NVMADRH         equ	2075	;# 
   504     081C                     NVMDAT          equ	2076	;# 
   505     081C                     NVMDATL         equ	2076	;# 
   506     081D                     NVMDATH         equ	2077	;# 
   507     081E                     NVMCON1         equ	2078	;# 
   508     081F                     NVMCON2         equ	2079	;# 
   509     088C                     CPUDOZE         equ	2188	;# 
   510     088D                     OSCCON1         equ	2189	;# 
   511     088E                     OSCCON2         equ	2190	;# 
   512     088F                     OSCCON3         equ	2191	;# 
   513     0890                     OSCSTAT         equ	2192	;# 
   514     0891                     OSCEN           equ	2193	;# 
   515     0892                     OSCTUNE         equ	2194	;# 
   516     0893                     OSCFRQ          equ	2195	;# 
   517     0895                     CLKRCON         equ	2197	;# 
   518     0896                     CLKRCLK         equ	2198	;# 
   519     090C                     FVRCON          equ	2316	;# 
   520     090E                     DAC1CON0        equ	2318	;# 
   521     090F                     DAC1CON1        equ	2319	;# 
   522     091F                     ZCDCON          equ	2335	;# 
   523     098F                     CMOUT           equ	2447	;# 
   524     098F                     CMSTAT          equ	2447	;# 
   525     0990                     CM1CON0         equ	2448	;# 
   526     0991                     CM1CON1         equ	2449	;# 
   527     0992                     CM1NCH          equ	2450	;# 
   528     0993                     CM1PCH          equ	2451	;# 
   529     1E0F                     CLCDATA         equ	7695	;# 
   530     1E10                     CLC1CON         equ	7696	;# 
   531     1E11                     CLC1POL         equ	7697	;# 
   532     1E12                     CLC1SEL0        equ	7698	;# 
   533     1E13                     CLC1SEL1        equ	7699	;# 
   534     1E14                     CLC1SEL2        equ	7700	;# 
   535     1E15                     CLC1SEL3        equ	7701	;# 
   536     1E16                     CLC1GLS0        equ	7702	;# 
   537     1E17                     CLC1GLS1        equ	7703	;# 
   538     1E18                     CLC1GLS2        equ	7704	;# 
   539     1E19                     CLC1GLS3        equ	7705	;# 
   540     1E1A                     CLC2CON         equ	7706	;# 
   541     1E1B                     CLC2POL         equ	7707	;# 
   542     1E1C                     CLC2SEL0        equ	7708	;# 
   543     1E1D                     CLC2SEL1        equ	7709	;# 
   544     1E1E                     CLC2SEL2        equ	7710	;# 
   545     1E1F                     CLC2SEL3        equ	7711	;# 
   546     1E20                     CLC2GLS0        equ	7712	;# 
   547     1E21                     CLC2GLS1        equ	7713	;# 
   548     1E22                     CLC2GLS2        equ	7714	;# 
   549     1E23                     CLC2GLS3        equ	7715	;# 
   550     1E24                     CLC3CON         equ	7716	;# 
   551     1E25                     CLC3POL         equ	7717	;# 
   552     1E26                     CLC3SEL0        equ	7718	;# 
   553     1E27                     CLC3SEL1        equ	7719	;# 
   554     1E28                     CLC3SEL2        equ	7720	;# 
   555     1E29                     CLC3SEL3        equ	7721	;# 
   556     1E2A                     CLC3GLS0        equ	7722	;# 
   557     1E2B                     CLC3GLS1        equ	7723	;# 
   558     1E2C                     CLC3GLS2        equ	7724	;# 
   559     1E2D                     CLC3GLS3        equ	7725	;# 
   560     1E2E                     CLC4CON         equ	7726	;# 
   561     1E2F                     CLC4POL         equ	7727	;# 
   562     1E30                     CLC4SEL0        equ	7728	;# 
   563     1E31                     CLC4SEL1        equ	7729	;# 
   564     1E32                     CLC4SEL2        equ	7730	;# 
   565     1E33                     CLC4SEL3        equ	7731	;# 
   566     1E34                     CLC4GLS0        equ	7732	;# 
   567     1E35                     CLC4GLS1        equ	7733	;# 
   568     1E36                     CLC4GLS2        equ	7734	;# 
   569     1E37                     CLC4GLS3        equ	7735	;# 
   570     1E8F                     PPSLOCK         equ	7823	;# 
   571     1E90                     INTPPS          equ	7824	;# 
   572     1E91                     T0CKIPPS        equ	7825	;# 
   573     1E92                     T1CKIPPS        equ	7826	;# 
   574     1E93                     T1GPPS          equ	7827	;# 
   575     1E9C                     T2INPPS         equ	7836	;# 
   576     1EA1                     CCP1PPS         equ	7841	;# 
   577     1EA2                     CCP2PPS         equ	7842	;# 
   578     1EB1                     CWG1PPS         equ	7857	;# 
   579     1EBB                     CLCIN0PPS       equ	7867	;# 
   580     1EBC                     CLCIN1PPS       equ	7868	;# 
   581     1EBD                     CLCIN2PPS       equ	7869	;# 
   582     1EBE                     CLCIN3PPS       equ	7870	;# 
   583     1EC3                     ADACTPPS        equ	7875	;# 
   584     1EC5                     SSP1CLKPPS      equ	7877	;# 
   585     1EC6                     SSP1DATPPS      equ	7878	;# 
   586     1EC7                     SSP1SSPPS       equ	7879	;# 
   587     1ECB                     RX1DTPPS        equ	7883	;# 
   588     1ECC                     TX1CKPPS        equ	7884	;# 
   589     1F10                     RA0PPS          equ	7952	;# 
   590     1F11                     RA1PPS          equ	7953	;# 
   591     1F12                     RA2PPS          equ	7954	;# 
   592     1F13                     RA3PPS          equ	7955	;# 
   593     1F14                     RA4PPS          equ	7956	;# 
   594     1F15                     RA5PPS          equ	7957	;# 
   595     1F38                     ANSELA          equ	7992	;# 
   596     1F39                     WPUA            equ	7993	;# 
   597     1F3A                     ODCONA          equ	7994	;# 
   598     1F3B                     SLRCONA         equ	7995	;# 
   599     1F3C                     INLVLA          equ	7996	;# 
   600     1F3D                     IOCAP           equ	7997	;# 
   601     1F3E                     IOCAN           equ	7998	;# 
   602     1F3F                     IOCAF           equ	7999	;# 
   603     1FE4                     STATUS_SHAD     equ	8164	;# 
   604     1FE5                     WREG_SHAD       equ	8165	;# 
   605     1FE6                     BSR_SHAD        equ	8166	;# 
   606     1FE7                     PCLATH_SHAD     equ	8167	;# 
   607     1FE8                     FSR0_SHAD       equ	8168	;# 
   608     1FE8                     FSR0L_SHAD      equ	8168	;# 
   609     1FE9                     FSR0H_SHAD      equ	8169	;# 
   610     1FEA                     FSR1_SHAD       equ	8170	;# 
   611     1FEA                     FSR1L_SHAD      equ	8170	;# 
   612     1FEB                     FSR1H_SHAD      equ	8171	;# 
   613     1FED                     STKPTR          equ	8173	;# 
   614     1FEE                     TOSL            equ	8174	;# 
   615     1FEF                     TOSH            equ	8175	;# 
   616     0000                     INDF0           equ	0	;# 
   617     0001                     INDF1           equ	1	;# 
   618     0002                     PCL             equ	2	;# 
   619     0003                     STATUS          equ	3	;# 
   620     0004                     FSR0L           equ	4	;# 
   621     0005                     FSR0H           equ	5	;# 
   622     0006                     FSR1L           equ	6	;# 
   623     0007                     FSR1H           equ	7	;# 
   624     0008                     BSR             equ	8	;# 
   625     0009                     WREG            equ	9	;# 
   626     000A                     PCLATH          equ	10	;# 
   627     000B                     INTCON          equ	11	;# 
   628     000C                     PORTA           equ	12	;# 
   629     0012                     TRISA           equ	18	;# 
   630     0018                     LATA            equ	24	;# 
   631     009B                     ADRES           equ	155	;# 
   632     009B                     ADRESL          equ	155	;# 
   633     009C                     ADRESH          equ	156	;# 
   634     009D                     ADCON0          equ	157	;# 
   635     009E                     ADCON1          equ	158	;# 
   636     009F                     ADACT           equ	159	;# 
   637     0119                     RC1REG          equ	281	;# 
   638     0119                     RCREG           equ	281	;# 
   639     0119                     RCREG1          equ	281	;# 
   640     011A                     TX1REG          equ	282	;# 
   641     011A                     TXREG1          equ	282	;# 
   642     011A                     TXREG           equ	282	;# 
   643     011B                     SP1BRG          equ	283	;# 
   644     011B                     SPBRG           equ	283	;# 
   645     011B                     SP1BRGL         equ	283	;# 
   646     011B                     SPBRG1          equ	283	;# 
   647     011B                     SPBRGL          equ	283	;# 
   648     011C                     SP1BRGH         equ	284	;# 
   649     011C                     SPBRGH          equ	284	;# 
   650     011C                     SPBRGH1         equ	284	;# 
   651     011D                     RC1STA          equ	285	;# 
   652     011D                     RCSTA1          equ	285	;# 
   653     011D                     RCSTA           equ	285	;# 
   654     011E                     TX1STA          equ	286	;# 
   655     011E                     TXSTA1          equ	286	;# 
   656     011E                     TXSTA           equ	286	;# 
   657     011F                     BAUD1CON        equ	287	;# 
   658     011F                     BAUDCON1        equ	287	;# 
   659     011F                     BAUDCTL1        equ	287	;# 
   660     011F                     BAUDCON         equ	287	;# 
   661     011F                     BAUDCTL         equ	287	;# 
   662     018C                     SSP1BUF         equ	396	;# 
   663     018D                     SSP1ADD         equ	397	;# 
   664     018E                     SSP1MSK         equ	398	;# 
   665     018F                     SSP1STAT        equ	399	;# 
   666     0190                     SSP1CON1        equ	400	;# 
   667     0191                     SSP1CON2        equ	401	;# 
   668     0192                     SSP1CON3        equ	402	;# 
   669     020C                     TMR1            equ	524	;# 
   670     020C                     TMR1L           equ	524	;# 
   671     020D                     TMR1H           equ	525	;# 
   672     020E                     T1CON           equ	526	;# 
   673     020F                     T1GCON          equ	527	;# 
   674     020F                     PR1             equ	527	;# 
   675     0210                     T1GATE          equ	528	;# 
   676     0210                     TMR1GATE        equ	528	;# 
   677     0211                     T1CLK           equ	529	;# 
   678     0211                     TMR1CLK         equ	529	;# 
   679     028C                     T2TMR           equ	652	;# 
   680     028C                     TMR2            equ	652	;# 
   681     028D                     T2PR            equ	653	;# 
   682     028D                     PR2             equ	653	;# 
   683     028E                     T2CON           equ	654	;# 
   684     028F                     T2HLT           equ	655	;# 
   685     0290                     T2CLKCON        equ	656	;# 
   686     0291                     T2RST           equ	657	;# 
   687     030C                     CCPR1           equ	780	;# 
   688     030C                     CCPR1L          equ	780	;# 
   689     030D                     CCPR1H          equ	781	;# 
   690     030E                     CCP1CON         equ	782	;# 
   691     030F                     CCP1CAP         equ	783	;# 
   692     0310                     CCPR2           equ	784	;# 
   693     0310                     CCPR2L          equ	784	;# 
   694     0311                     CCPR2H          equ	785	;# 
   695     0312                     CCP2CON         equ	786	;# 
   696     0313                     CCP2CAP         equ	787	;# 
   697     0314                     PWM3DC          equ	788	;# 
   698     0314                     PWM3DCL         equ	788	;# 
   699     0315                     PWM3DCH         equ	789	;# 
   700     0316                     PWM3CON         equ	790	;# 
   701     0318                     PWM4DC          equ	792	;# 
   702     0318                     PWM4DCL         equ	792	;# 
   703     0319                     PWM4DCH         equ	793	;# 
   704     031A                     PWM4CON         equ	794	;# 
   705     031C                     PWM5DC          equ	796	;# 
   706     031C                     PWM5DCL         equ	796	;# 
   707     031D                     PWM5DCH         equ	797	;# 
   708     031E                     PWM5CON         equ	798	;# 
   709     038C                     PWM6DC          equ	908	;# 
   710     038C                     PWM6DCL         equ	908	;# 
   711     038D                     PWM6DCH         equ	909	;# 
   712     038E                     PWM6CON         equ	910	;# 
   713     058C                     NCO1ACC         equ	1420	;# 
   714     058C                     NCO1ACCL        equ	1420	;# 
   715     058D                     NCO1ACCH        equ	1421	;# 
   716     058E                     NCO1ACCU        equ	1422	;# 
   717     058F                     NCO1INC         equ	1423	;# 
   718     058F                     NCO1INCL        equ	1423	;# 
   719     0590                     NCO1INCH        equ	1424	;# 
   720     0591                     NCO1INCU        equ	1425	;# 
   721     0592                     NCO1CON         equ	1426	;# 
   722     0593                     NCO1CLK         equ	1427	;# 
   723     059C                     TMR0L           equ	1436	;# 
   724     059C                     TMR0            equ	1436	;# 
   725     059D                     TMR0H           equ	1437	;# 
   726     059D                     PR0             equ	1437	;# 
   727     059E                     T0CON0          equ	1438	;# 
   728     059F                     T0CON1          equ	1439	;# 
   729     060C                     CWG1CLKCON      equ	1548	;# 
   730     060D                     CWG1DAT         equ	1549	;# 
   731     060E                     CWG1DBR         equ	1550	;# 
   732     060F                     CWG1DBF         equ	1551	;# 
   733     0610                     CWG1CON0        equ	1552	;# 
   734     0611                     CWG1CON1        equ	1553	;# 
   735     0612                     CWG1AS0         equ	1554	;# 
   736     0613                     CWG1AS1         equ	1555	;# 
   737     0614                     CWG1STR         equ	1556	;# 
   738     070C                     PIR0            equ	1804	;# 
   739     070D                     PIR1            equ	1805	;# 
   740     070E                     PIR2            equ	1806	;# 
   741     070F                     PIR3            equ	1807	;# 
   742     0710                     PIR4            equ	1808	;# 
   743     0711                     PIR5            equ	1809	;# 
   744     0712                     PIR6            equ	1810	;# 
   745     0713                     PIR7            equ	1811	;# 
   746     0716                     PIE0            equ	1814	;# 
   747     0717                     PIE1            equ	1815	;# 
   748     0718                     PIE2            equ	1816	;# 
   749     0719                     PIE3            equ	1817	;# 
   750     071A                     PIE4            equ	1818	;# 
   751     071B                     PIE5            equ	1819	;# 
   752     071C                     PIE6            equ	1820	;# 
   753     071D                     PIE7            equ	1821	;# 
   754     0796                     PMD0            equ	1942	;# 
   755     0797                     PMD1            equ	1943	;# 
   756     0798                     PMD2            equ	1944	;# 
   757     0799                     PMD3            equ	1945	;# 
   758     079A                     PMD4            equ	1946	;# 
   759     079B                     PMD5            equ	1947	;# 
   760     080C                     WDTCON0         equ	2060	;# 
   761     080D                     WDTCON1         equ	2061	;# 
   762     080E                     WDTPSL          equ	2062	;# 
   763     080F                     WDTPSH          equ	2063	;# 
   764     0810                     WDTTMR          equ	2064	;# 
   765     0811                     BORCON          equ	2065	;# 
   766     0812                     VREGCON         equ	2066	;# 
   767     0813                     PCON0           equ	2067	;# 
   768     0814                     PCON1           equ	2068	;# 
   769     081A                     NVMADR          equ	2074	;# 
   770     081A                     NVMADRL         equ	2074	;# 
   771     081B                     NVMADRH         equ	2075	;# 
   772     081C                     NVMDAT          equ	2076	;# 
   773     081C                     NVMDATL         equ	2076	;# 
   774     081D                     NVMDATH         equ	2077	;# 
   775     081E                     NVMCON1         equ	2078	;# 
   776     081F                     NVMCON2         equ	2079	;# 
   777     088C                     CPUDOZE         equ	2188	;# 
   778     088D                     OSCCON1         equ	2189	;# 
   779     088E                     OSCCON2         equ	2190	;# 
   780     088F                     OSCCON3         equ	2191	;# 
   781     0890                     OSCSTAT         equ	2192	;# 
   782     0891                     OSCEN           equ	2193	;# 
   783     0892                     OSCTUNE         equ	2194	;# 
   784     0893                     OSCFRQ          equ	2195	;# 
   785     0895                     CLKRCON         equ	2197	;# 
   786     0896                     CLKRCLK         equ	2198	;# 
   787     090C                     FVRCON          equ	2316	;# 
   788     090E                     DAC1CON0        equ	2318	;# 
   789     090F                     DAC1CON1        equ	2319	;# 
   790     091F                     ZCDCON          equ	2335	;# 
   791     098F                     CMOUT           equ	2447	;# 
   792     098F                     CMSTAT          equ	2447	;# 
   793     0990                     CM1CON0         equ	2448	;# 
   794     0991                     CM1CON1         equ	2449	;# 
   795     0992                     CM1NCH          equ	2450	;# 
   796     0993                     CM1PCH          equ	2451	;# 
   797     1E0F                     CLCDATA         equ	7695	;# 
   798     1E10                     CLC1CON         equ	7696	;# 
   799     1E11                     CLC1POL         equ	7697	;# 
   800     1E12                     CLC1SEL0        equ	7698	;# 
   801     1E13                     CLC1SEL1        equ	7699	;# 
   802     1E14                     CLC1SEL2        equ	7700	;# 
   803     1E15                     CLC1SEL3        equ	7701	;# 
   804     1E16                     CLC1GLS0        equ	7702	;# 
   805     1E17                     CLC1GLS1        equ	7703	;# 
   806     1E18                     CLC1GLS2        equ	7704	;# 
   807     1E19                     CLC1GLS3        equ	7705	;# 
   808     1E1A                     CLC2CON         equ	7706	;# 
   809     1E1B                     CLC2POL         equ	7707	;# 
   810     1E1C                     CLC2SEL0        equ	7708	;# 
   811     1E1D                     CLC2SEL1        equ	7709	;# 
   812     1E1E                     CLC2SEL2        equ	7710	;# 
   813     1E1F                     CLC2SEL3        equ	7711	;# 
   814     1E20                     CLC2GLS0        equ	7712	;# 
   815     1E21                     CLC2GLS1        equ	7713	;# 
   816     1E22                     CLC2GLS2        equ	7714	;# 
   817     1E23                     CLC2GLS3        equ	7715	;# 
   818     1E24                     CLC3CON         equ	7716	;# 
   819     1E25                     CLC3POL         equ	7717	;# 
   820     1E26                     CLC3SEL0        equ	7718	;# 
   821     1E27                     CLC3SEL1        equ	7719	;# 
   822     1E28                     CLC3SEL2        equ	7720	;# 
   823     1E29                     CLC3SEL3        equ	7721	;# 
   824     1E2A                     CLC3GLS0        equ	7722	;# 
   825     1E2B                     CLC3GLS1        equ	7723	;# 
   826     1E2C                     CLC3GLS2        equ	7724	;# 
   827     1E2D                     CLC3GLS3        equ	7725	;# 
   828     1E2E                     CLC4CON         equ	7726	;# 
   829     1E2F                     CLC4POL         equ	7727	;# 
   830     1E30                     CLC4SEL0        equ	7728	;# 
   831     1E31                     CLC4SEL1        equ	7729	;# 
   832     1E32                     CLC4SEL2        equ	7730	;# 
   833     1E33                     CLC4SEL3        equ	7731	;# 
   834     1E34                     CLC4GLS0        equ	7732	;# 
   835     1E35                     CLC4GLS1        equ	7733	;# 
   836     1E36                     CLC4GLS2        equ	7734	;# 
   837     1E37                     CLC4GLS3        equ	7735	;# 
   838     1E8F                     PPSLOCK         equ	7823	;# 
   839     1E90                     INTPPS          equ	7824	;# 
   840     1E91                     T0CKIPPS        equ	7825	;# 
   841     1E92                     T1CKIPPS        equ	7826	;# 
   842     1E93                     T1GPPS          equ	7827	;# 
   843     1E9C                     T2INPPS         equ	7836	;# 
   844     1EA1                     CCP1PPS         equ	7841	;# 
   845     1EA2                     CCP2PPS         equ	7842	;# 
   846     1EB1                     CWG1PPS         equ	7857	;# 
   847     1EBB                     CLCIN0PPS       equ	7867	;# 
   848     1EBC                     CLCIN1PPS       equ	7868	;# 
   849     1EBD                     CLCIN2PPS       equ	7869	;# 
   850     1EBE                     CLCIN3PPS       equ	7870	;# 
   851     1EC3                     ADACTPPS        equ	7875	;# 
   852     1EC5                     SSP1CLKPPS      equ	7877	;# 
   853     1EC6                     SSP1DATPPS      equ	7878	;# 
   854     1EC7                     SSP1SSPPS       equ	7879	;# 
   855     1ECB                     RX1DTPPS        equ	7883	;# 
   856     1ECC                     TX1CKPPS        equ	7884	;# 
   857     1F10                     RA0PPS          equ	7952	;# 
   858     1F11                     RA1PPS          equ	7953	;# 
   859     1F12                     RA2PPS          equ	7954	;# 
   860     1F13                     RA3PPS          equ	7955	;# 
   861     1F14                     RA4PPS          equ	7956	;# 
   862     1F15                     RA5PPS          equ	7957	;# 
   863     1F38                     ANSELA          equ	7992	;# 
   864     1F39                     WPUA            equ	7993	;# 
   865     1F3A                     ODCONA          equ	7994	;# 
   866     1F3B                     SLRCONA         equ	7995	;# 
   867     1F3C                     INLVLA          equ	7996	;# 
   868     1F3D                     IOCAP           equ	7997	;# 
   869     1F3E                     IOCAN           equ	7998	;# 
   870     1F3F                     IOCAF           equ	7999	;# 
   871     1FE4                     STATUS_SHAD     equ	8164	;# 
   872     1FE5                     WREG_SHAD       equ	8165	;# 
   873     1FE6                     BSR_SHAD        equ	8166	;# 
   874     1FE7                     PCLATH_SHAD     equ	8167	;# 
   875     1FE8                     FSR0_SHAD       equ	8168	;# 
   876     1FE8                     FSR0L_SHAD      equ	8168	;# 
   877     1FE9                     FSR0H_SHAD      equ	8169	;# 
   878     1FEA                     FSR1_SHAD       equ	8170	;# 
   879     1FEA                     FSR1L_SHAD      equ	8170	;# 
   880     1FEB                     FSR1H_SHAD      equ	8171	;# 
   881     1FED                     STKPTR          equ	8173	;# 
   882     1FEE                     TOSL            equ	8174	;# 
   883     1FEF                     TOSH            equ	8175	;# 
   884     0000                     INDF0           equ	0	;# 
   885     0001                     INDF1           equ	1	;# 
   886     0002                     PCL             equ	2	;# 
   887     0003                     STATUS          equ	3	;# 
   888     0004                     FSR0L           equ	4	;# 
   889     0005                     FSR0H           equ	5	;# 
   890     0006                     FSR1L           equ	6	;# 
   891     0007                     FSR1H           equ	7	;# 
   892     0008                     BSR             equ	8	;# 
   893     0009                     WREG            equ	9	;# 
   894     000A                     PCLATH          equ	10	;# 
   895     000B                     INTCON          equ	11	;# 
   896     000C                     PORTA           equ	12	;# 
   897     0012                     TRISA           equ	18	;# 
   898     0018                     LATA            equ	24	;# 
   899     009B                     ADRES           equ	155	;# 
   900     009B                     ADRESL          equ	155	;# 
   901     009C                     ADRESH          equ	156	;# 
   902     009D                     ADCON0          equ	157	;# 
   903     009E                     ADCON1          equ	158	;# 
   904     009F                     ADACT           equ	159	;# 
   905     0119                     RC1REG          equ	281	;# 
   906     0119                     RCREG           equ	281	;# 
   907     0119                     RCREG1          equ	281	;# 
   908     011A                     TX1REG          equ	282	;# 
   909     011A                     TXREG1          equ	282	;# 
   910     011A                     TXREG           equ	282	;# 
   911     011B                     SP1BRG          equ	283	;# 
   912     011B                     SPBRG           equ	283	;# 
   913     011B                     SP1BRGL         equ	283	;# 
   914     011B                     SPBRG1          equ	283	;# 
   915     011B                     SPBRGL          equ	283	;# 
   916     011C                     SP1BRGH         equ	284	;# 
   917     011C                     SPBRGH          equ	284	;# 
   918     011C                     SPBRGH1         equ	284	;# 
   919     011D                     RC1STA          equ	285	;# 
   920     011D                     RCSTA1          equ	285	;# 
   921     011D                     RCSTA           equ	285	;# 
   922     011E                     TX1STA          equ	286	;# 
   923     011E                     TXSTA1          equ	286	;# 
   924     011E                     TXSTA           equ	286	;# 
   925     011F                     BAUD1CON        equ	287	;# 
   926     011F                     BAUDCON1        equ	287	;# 
   927     011F                     BAUDCTL1        equ	287	;# 
   928     011F                     BAUDCON         equ	287	;# 
   929     011F                     BAUDCTL         equ	287	;# 
   930     018C                     SSP1BUF         equ	396	;# 
   931     018D                     SSP1ADD         equ	397	;# 
   932     018E                     SSP1MSK         equ	398	;# 
   933     018F                     SSP1STAT        equ	399	;# 
   934     0190                     SSP1CON1        equ	400	;# 
   935     0191                     SSP1CON2        equ	401	;# 
   936     0192                     SSP1CON3        equ	402	;# 
   937     020C                     TMR1            equ	524	;# 
   938     020C                     TMR1L           equ	524	;# 
   939     020D                     TMR1H           equ	525	;# 
   940     020E                     T1CON           equ	526	;# 
   941     020F                     T1GCON          equ	527	;# 
   942     020F                     PR1             equ	527	;# 
   943     0210                     T1GATE          equ	528	;# 
   944     0210                     TMR1GATE        equ	528	;# 
   945     0211                     T1CLK           equ	529	;# 
   946     0211                     TMR1CLK         equ	529	;# 
   947     028C                     T2TMR           equ	652	;# 
   948     028C                     TMR2            equ	652	;# 
   949     028D                     T2PR            equ	653	;# 
   950     028D                     PR2             equ	653	;# 
   951     028E                     T2CON           equ	654	;# 
   952     028F                     T2HLT           equ	655	;# 
   953     0290                     T2CLKCON        equ	656	;# 
   954     0291                     T2RST           equ	657	;# 
   955     030C                     CCPR1           equ	780	;# 
   956     030C                     CCPR1L          equ	780	;# 
   957     030D                     CCPR1H          equ	781	;# 
   958     030E                     CCP1CON         equ	782	;# 
   959     030F                     CCP1CAP         equ	783	;# 
   960     0310                     CCPR2           equ	784	;# 
   961     0310                     CCPR2L          equ	784	;# 
   962     0311                     CCPR2H          equ	785	;# 
   963     0312                     CCP2CON         equ	786	;# 
   964     0313                     CCP2CAP         equ	787	;# 
   965     0314                     PWM3DC          equ	788	;# 
   966     0314                     PWM3DCL         equ	788	;# 
   967     0315                     PWM3DCH         equ	789	;# 
   968     0316                     PWM3CON         equ	790	;# 
   969     0318                     PWM4DC          equ	792	;# 
   970     0318                     PWM4DCL         equ	792	;# 
   971     0319                     PWM4DCH         equ	793	;# 
   972     031A                     PWM4CON         equ	794	;# 
   973     031C                     PWM5DC          equ	796	;# 
   974     031C                     PWM5DCL         equ	796	;# 
   975     031D                     PWM5DCH         equ	797	;# 
   976     031E                     PWM5CON         equ	798	;# 
   977     038C                     PWM6DC          equ	908	;# 
   978     038C                     PWM6DCL         equ	908	;# 
   979     038D                     PWM6DCH         equ	909	;# 
   980     038E                     PWM6CON         equ	910	;# 
   981     058C                     NCO1ACC         equ	1420	;# 
   982     058C                     NCO1ACCL        equ	1420	;# 
   983     058D                     NCO1ACCH        equ	1421	;# 
   984     058E                     NCO1ACCU        equ	1422	;# 
   985     058F                     NCO1INC         equ	1423	;# 
   986     058F                     NCO1INCL        equ	1423	;# 
   987     0590                     NCO1INCH        equ	1424	;# 
   988     0591                     NCO1INCU        equ	1425	;# 
   989     0592                     NCO1CON         equ	1426	;# 
   990     0593                     NCO1CLK         equ	1427	;# 
   991     059C                     TMR0L           equ	1436	;# 
   992     059C                     TMR0            equ	1436	;# 
   993     059D                     TMR0H           equ	1437	;# 
   994     059D                     PR0             equ	1437	;# 
   995     059E                     T0CON0          equ	1438	;# 
   996     059F                     T0CON1          equ	1439	;# 
   997     060C                     CWG1CLKCON      equ	1548	;# 
   998     060D                     CWG1DAT         equ	1549	;# 
   999     060E                     CWG1DBR         equ	1550	;# 
  1000     060F                     CWG1DBF         equ	1551	;# 
  1001     0610                     CWG1CON0        equ	1552	;# 
  1002     0611                     CWG1CON1        equ	1553	;# 
  1003     0612                     CWG1AS0         equ	1554	;# 
  1004     0613                     CWG1AS1         equ	1555	;# 
  1005     0614                     CWG1STR         equ	1556	;# 
  1006     070C                     PIR0            equ	1804	;# 
  1007     070D                     PIR1            equ	1805	;# 
  1008     070E                     PIR2            equ	1806	;# 
  1009     070F                     PIR3            equ	1807	;# 
  1010     0710                     PIR4            equ	1808	;# 
  1011     0711                     PIR5            equ	1809	;# 
  1012     0712                     PIR6            equ	1810	;# 
  1013     0713                     PIR7            equ	1811	;# 
  1014     0716                     PIE0            equ	1814	;# 
  1015     0717                     PIE1            equ	1815	;# 
  1016     0718                     PIE2            equ	1816	;# 
  1017     0719                     PIE3            equ	1817	;# 
  1018     071A                     PIE4            equ	1818	;# 
  1019     071B                     PIE5            equ	1819	;# 
  1020     071C                     PIE6            equ	1820	;# 
  1021     071D                     PIE7            equ	1821	;# 
  1022     0796                     PMD0            equ	1942	;# 
  1023     0797                     PMD1            equ	1943	;# 
  1024     0798                     PMD2            equ	1944	;# 
  1025     0799                     PMD3            equ	1945	;# 
  1026     079A                     PMD4            equ	1946	;# 
  1027     079B                     PMD5            equ	1947	;# 
  1028     080C                     WDTCON0         equ	2060	;# 
  1029     080D                     WDTCON1         equ	2061	;# 
  1030     080E                     WDTPSL          equ	2062	;# 
  1031     080F                     WDTPSH          equ	2063	;# 
  1032     0810                     WDTTMR          equ	2064	;# 
  1033     0811                     BORCON          equ	2065	;# 
  1034     0812                     VREGCON         equ	2066	;# 
  1035     0813                     PCON0           equ	2067	;# 
  1036     0814                     PCON1           equ	2068	;# 
  1037     081A                     NVMADR          equ	2074	;# 
  1038     081A                     NVMADRL         equ	2074	;# 
  1039     081B                     NVMADRH         equ	2075	;# 
  1040     081C                     NVMDAT          equ	2076	;# 
  1041     081C                     NVMDATL         equ	2076	;# 
  1042     081D                     NVMDATH         equ	2077	;# 
  1043     081E                     NVMCON1         equ	2078	;# 
  1044     081F                     NVMCON2         equ	2079	;# 
  1045     088C                     CPUDOZE         equ	2188	;# 
  1046     088D                     OSCCON1         equ	2189	;# 
  1047     088E                     OSCCON2         equ	2190	;# 
  1048     088F                     OSCCON3         equ	2191	;# 
  1049     0890                     OSCSTAT         equ	2192	;# 
  1050     0891                     OSCEN           equ	2193	;# 
  1051     0892                     OSCTUNE         equ	2194	;# 
  1052     0893                     OSCFRQ          equ	2195	;# 
  1053     0895                     CLKRCON         equ	2197	;# 
  1054     0896                     CLKRCLK         equ	2198	;# 
  1055     090C                     FVRCON          equ	2316	;# 
  1056     090E                     DAC1CON0        equ	2318	;# 
  1057     090F                     DAC1CON1        equ	2319	;# 
  1058     091F                     ZCDCON          equ	2335	;# 
  1059     098F                     CMOUT           equ	2447	;# 
  1060     098F                     CMSTAT          equ	2447	;# 
  1061     0990                     CM1CON0         equ	2448	;# 
  1062     0991                     CM1CON1         equ	2449	;# 
  1063     0992                     CM1NCH          equ	2450	;# 
  1064     0993                     CM1PCH          equ	2451	;# 
  1065     1E0F                     CLCDATA         equ	7695	;# 
  1066     1E10                     CLC1CON         equ	7696	;# 
  1067     1E11                     CLC1POL         equ	7697	;# 
  1068     1E12                     CLC1SEL0        equ	7698	;# 
  1069     1E13                     CLC1SEL1        equ	7699	;# 
  1070     1E14                     CLC1SEL2        equ	7700	;# 
  1071     1E15                     CLC1SEL3        equ	7701	;# 
  1072     1E16                     CLC1GLS0        equ	7702	;# 
  1073     1E17                     CLC1GLS1        equ	7703	;# 
  1074     1E18                     CLC1GLS2        equ	7704	;# 
  1075     1E19                     CLC1GLS3        equ	7705	;# 
  1076     1E1A                     CLC2CON         equ	7706	;# 
  1077     1E1B                     CLC2POL         equ	7707	;# 
  1078     1E1C                     CLC2SEL0        equ	7708	;# 
  1079     1E1D                     CLC2SEL1        equ	7709	;# 
  1080     1E1E                     CLC2SEL2        equ	7710	;# 
  1081     1E1F                     CLC2SEL3        equ	7711	;# 
  1082     1E20                     CLC2GLS0        equ	7712	;# 
  1083     1E21                     CLC2GLS1        equ	7713	;# 
  1084     1E22                     CLC2GLS2        equ	7714	;# 
  1085     1E23                     CLC2GLS3        equ	7715	;# 
  1086     1E24                     CLC3CON         equ	7716	;# 
  1087     1E25                     CLC3POL         equ	7717	;# 
  1088     1E26                     CLC3SEL0        equ	7718	;# 
  1089     1E27                     CLC3SEL1        equ	7719	;# 
  1090     1E28                     CLC3SEL2        equ	7720	;# 
  1091     1E29                     CLC3SEL3        equ	7721	;# 
  1092     1E2A                     CLC3GLS0        equ	7722	;# 
  1093     1E2B                     CLC3GLS1        equ	7723	;# 
  1094     1E2C                     CLC3GLS2        equ	7724	;# 
  1095     1E2D                     CLC3GLS3        equ	7725	;# 
  1096     1E2E                     CLC4CON         equ	7726	;# 
  1097     1E2F                     CLC4POL         equ	7727	;# 
  1098     1E30                     CLC4SEL0        equ	7728	;# 
  1099     1E31                     CLC4SEL1        equ	7729	;# 
  1100     1E32                     CLC4SEL2        equ	7730	;# 
  1101     1E33                     CLC4SEL3        equ	7731	;# 
  1102     1E34                     CLC4GLS0        equ	7732	;# 
  1103     1E35                     CLC4GLS1        equ	7733	;# 
  1104     1E36                     CLC4GLS2        equ	7734	;# 
  1105     1E37                     CLC4GLS3        equ	7735	;# 
  1106     1E8F                     PPSLOCK         equ	7823	;# 
  1107     1E90                     INTPPS          equ	7824	;# 
  1108     1E91                     T0CKIPPS        equ	7825	;# 
  1109     1E92                     T1CKIPPS        equ	7826	;# 
  1110     1E93                     T1GPPS          equ	7827	;# 
  1111     1E9C                     T2INPPS         equ	7836	;# 
  1112     1EA1                     CCP1PPS         equ	7841	;# 
  1113     1EA2                     CCP2PPS         equ	7842	;# 
  1114     1EB1                     CWG1PPS         equ	7857	;# 
  1115     1EBB                     CLCIN0PPS       equ	7867	;# 
  1116     1EBC                     CLCIN1PPS       equ	7868	;# 
  1117     1EBD                     CLCIN2PPS       equ	7869	;# 
  1118     1EBE                     CLCIN3PPS       equ	7870	;# 
  1119     1EC3                     ADACTPPS        equ	7875	;# 
  1120     1EC5                     SSP1CLKPPS      equ	7877	;# 
  1121     1EC6                     SSP1DATPPS      equ	7878	;# 
  1122     1EC7                     SSP1SSPPS       equ	7879	;# 
  1123     1ECB                     RX1DTPPS        equ	7883	;# 
  1124     1ECC                     TX1CKPPS        equ	7884	;# 
  1125     1F10                     RA0PPS          equ	7952	;# 
  1126     1F11                     RA1PPS          equ	7953	;# 
  1127     1F12                     RA2PPS          equ	7954	;# 
  1128     1F13                     RA3PPS          equ	7955	;# 
  1129     1F14                     RA4PPS          equ	7956	;# 
  1130     1F15                     RA5PPS          equ	7957	;# 
  1131     1F38                     ANSELA          equ	7992	;# 
  1132     1F39                     WPUA            equ	7993	;# 
  1133     1F3A                     ODCONA          equ	7994	;# 
  1134     1F3B                     SLRCONA         equ	7995	;# 
  1135     1F3C                     INLVLA          equ	7996	;# 
  1136     1F3D                     IOCAP           equ	7997	;# 
  1137     1F3E                     IOCAN           equ	7998	;# 
  1138     1F3F                     IOCAF           equ	7999	;# 
  1139     1FE4                     STATUS_SHAD     equ	8164	;# 
  1140     1FE5                     WREG_SHAD       equ	8165	;# 
  1141     1FE6                     BSR_SHAD        equ	8166	;# 
  1142     1FE7                     PCLATH_SHAD     equ	8167	;# 
  1143     1FE8                     FSR0_SHAD       equ	8168	;# 
  1144     1FE8                     FSR0L_SHAD      equ	8168	;# 
  1145     1FE9                     FSR0H_SHAD      equ	8169	;# 
  1146     1FEA                     FSR1_SHAD       equ	8170	;# 
  1147     1FEA                     FSR1L_SHAD      equ	8170	;# 
  1148     1FEB                     FSR1H_SHAD      equ	8171	;# 
  1149     1FED                     STKPTR          equ	8173	;# 
  1150     1FEE                     TOSL            equ	8174	;# 
  1151     1FEF                     TOSH            equ	8175	;# 
  1152     0000                     INDF0           equ	0	;# 
  1153     0001                     INDF1           equ	1	;# 
  1154     0002                     PCL             equ	2	;# 
  1155     0003                     STATUS          equ	3	;# 
  1156     0004                     FSR0L           equ	4	;# 
  1157     0005                     FSR0H           equ	5	;# 
  1158     0006                     FSR1L           equ	6	;# 
  1159     0007                     FSR1H           equ	7	;# 
  1160     0008                     BSR             equ	8	;# 
  1161     0009                     WREG            equ	9	;# 
  1162     000A                     PCLATH          equ	10	;# 
  1163     000B                     INTCON          equ	11	;# 
  1164     000C                     PORTA           equ	12	;# 
  1165     0012                     TRISA           equ	18	;# 
  1166     0018                     LATA            equ	24	;# 
  1167     009B                     ADRES           equ	155	;# 
  1168     009B                     ADRESL          equ	155	;# 
  1169     009C                     ADRESH          equ	156	;# 
  1170     009D                     ADCON0          equ	157	;# 
  1171     009E                     ADCON1          equ	158	;# 
  1172     009F                     ADACT           equ	159	;# 
  1173     0119                     RC1REG          equ	281	;# 
  1174     0119                     RCREG           equ	281	;# 
  1175     0119                     RCREG1          equ	281	;# 
  1176     011A                     TX1REG          equ	282	;# 
  1177     011A                     TXREG1          equ	282	;# 
  1178     011A                     TXREG           equ	282	;# 
  1179     011B                     SP1BRG          equ	283	;# 
  1180     011B                     SPBRG           equ	283	;# 
  1181     011B                     SP1BRGL         equ	283	;# 
  1182     011B                     SPBRG1          equ	283	;# 
  1183     011B                     SPBRGL          equ	283	;# 
  1184     011C                     SP1BRGH         equ	284	;# 
  1185     011C                     SPBRGH          equ	284	;# 
  1186     011C                     SPBRGH1         equ	284	;# 
  1187     011D                     RC1STA          equ	285	;# 
  1188     011D                     RCSTA1          equ	285	;# 
  1189     011D                     RCSTA           equ	285	;# 
  1190     011E                     TX1STA          equ	286	;# 
  1191     011E                     TXSTA1          equ	286	;# 
  1192     011E                     TXSTA           equ	286	;# 
  1193     011F                     BAUD1CON        equ	287	;# 
  1194     011F                     BAUDCON1        equ	287	;# 
  1195     011F                     BAUDCTL1        equ	287	;# 
  1196     011F                     BAUDCON         equ	287	;# 
  1197     011F                     BAUDCTL         equ	287	;# 
  1198     018C                     SSP1BUF         equ	396	;# 
  1199     018D                     SSP1ADD         equ	397	;# 
  1200     018E                     SSP1MSK         equ	398	;# 
  1201     018F                     SSP1STAT        equ	399	;# 
  1202     0190                     SSP1CON1        equ	400	;# 
  1203     0191                     SSP1CON2        equ	401	;# 
  1204     0192                     SSP1CON3        equ	402	;# 
  1205     020C                     TMR1            equ	524	;# 
  1206     020C                     TMR1L           equ	524	;# 
  1207     020D                     TMR1H           equ	525	;# 
  1208     020E                     T1CON           equ	526	;# 
  1209     020F                     T1GCON          equ	527	;# 
  1210     020F                     PR1             equ	527	;# 
  1211     0210                     T1GATE          equ	528	;# 
  1212     0210                     TMR1GATE        equ	528	;# 
  1213     0211                     T1CLK           equ	529	;# 
  1214     0211                     TMR1CLK         equ	529	;# 
  1215     028C                     T2TMR           equ	652	;# 
  1216     028C                     TMR2            equ	652	;# 
  1217     028D                     T2PR            equ	653	;# 
  1218     028D                     PR2             equ	653	;# 
  1219     028E                     T2CON           equ	654	;# 
  1220     028F                     T2HLT           equ	655	;# 
  1221     0290                     T2CLKCON        equ	656	;# 
  1222     0291                     T2RST           equ	657	;# 
  1223     030C                     CCPR1           equ	780	;# 
  1224     030C                     CCPR1L          equ	780	;# 
  1225     030D                     CCPR1H          equ	781	;# 
  1226     030E                     CCP1CON         equ	782	;# 
  1227     030F                     CCP1CAP         equ	783	;# 
  1228     0310                     CCPR2           equ	784	;# 
  1229     0310                     CCPR2L          equ	784	;# 
  1230     0311                     CCPR2H          equ	785	;# 
  1231     0312                     CCP2CON         equ	786	;# 
  1232     0313                     CCP2CAP         equ	787	;# 
  1233     0314                     PWM3DC          equ	788	;# 
  1234     0314                     PWM3DCL         equ	788	;# 
  1235     0315                     PWM3DCH         equ	789	;# 
  1236     0316                     PWM3CON         equ	790	;# 
  1237     0318                     PWM4DC          equ	792	;# 
  1238     0318                     PWM4DCL         equ	792	;# 
  1239     0319                     PWM4DCH         equ	793	;# 
  1240     031A                     PWM4CON         equ	794	;# 
  1241     031C                     PWM5DC          equ	796	;# 
  1242     031C                     PWM5DCL         equ	796	;# 
  1243     031D                     PWM5DCH         equ	797	;# 
  1244     031E                     PWM5CON         equ	798	;# 
  1245     038C                     PWM6DC          equ	908	;# 
  1246     038C                     PWM6DCL         equ	908	;# 
  1247     038D                     PWM6DCH         equ	909	;# 
  1248     038E                     PWM6CON         equ	910	;# 
  1249     058C                     NCO1ACC         equ	1420	;# 
  1250     058C                     NCO1ACCL        equ	1420	;# 
  1251     058D                     NCO1ACCH        equ	1421	;# 
  1252     058E                     NCO1ACCU        equ	1422	;# 
  1253     058F                     NCO1INC         equ	1423	;# 
  1254     058F                     NCO1INCL        equ	1423	;# 
  1255     0590                     NCO1INCH        equ	1424	;# 
  1256     0591                     NCO1INCU        equ	1425	;# 
  1257     0592                     NCO1CON         equ	1426	;# 
  1258     0593                     NCO1CLK         equ	1427	;# 
  1259     059C                     TMR0L           equ	1436	;# 
  1260     059C                     TMR0            equ	1436	;# 
  1261     059D                     TMR0H           equ	1437	;# 
  1262     059D                     PR0             equ	1437	;# 
  1263     059E                     T0CON0          equ	1438	;# 
  1264     059F                     T0CON1          equ	1439	;# 
  1265     060C                     CWG1CLKCON      equ	1548	;# 
  1266     060D                     CWG1DAT         equ	1549	;# 
  1267     060E                     CWG1DBR         equ	1550	;# 
  1268     060F                     CWG1DBF         equ	1551	;# 
  1269     0610                     CWG1CON0        equ	1552	;# 
  1270     0611                     CWG1CON1        equ	1553	;# 
  1271     0612                     CWG1AS0         equ	1554	;# 
  1272     0613                     CWG1AS1         equ	1555	;# 
  1273     0614                     CWG1STR         equ	1556	;# 
  1274     070C                     PIR0            equ	1804	;# 
  1275     070D                     PIR1            equ	1805	;# 
  1276     070E                     PIR2            equ	1806	;# 
  1277     070F                     PIR3            equ	1807	;# 
  1278     0710                     PIR4            equ	1808	;# 
  1279     0711                     PIR5            equ	1809	;# 
  1280     0712                     PIR6            equ	1810	;# 
  1281     0713                     PIR7            equ	1811	;# 
  1282     0716                     PIE0            equ	1814	;# 
  1283     0717                     PIE1            equ	1815	;# 
  1284     0718                     PIE2            equ	1816	;# 
  1285     0719                     PIE3            equ	1817	;# 
  1286     071A                     PIE4            equ	1818	;# 
  1287     071B                     PIE5            equ	1819	;# 
  1288     071C                     PIE6            equ	1820	;# 
  1289     071D                     PIE7            equ	1821	;# 
  1290     0796                     PMD0            equ	1942	;# 
  1291     0797                     PMD1            equ	1943	;# 
  1292     0798                     PMD2            equ	1944	;# 
  1293     0799                     PMD3            equ	1945	;# 
  1294     079A                     PMD4            equ	1946	;# 
  1295     079B                     PMD5            equ	1947	;# 
  1296     080C                     WDTCON0         equ	2060	;# 
  1297     080D                     WDTCON1         equ	2061	;# 
  1298     080E                     WDTPSL          equ	2062	;# 
  1299     080F                     WDTPSH          equ	2063	;# 
  1300     0810                     WDTTMR          equ	2064	;# 
  1301     0811                     BORCON          equ	2065	;# 
  1302     0812                     VREGCON         equ	2066	;# 
  1303     0813                     PCON0           equ	2067	;# 
  1304     0814                     PCON1           equ	2068	;# 
  1305     081A                     NVMADR          equ	2074	;# 
  1306     081A                     NVMADRL         equ	2074	;# 
  1307     081B                     NVMADRH         equ	2075	;# 
  1308     081C                     NVMDAT          equ	2076	;# 
  1309     081C                     NVMDATL         equ	2076	;# 
  1310     081D                     NVMDATH         equ	2077	;# 
  1311     081E                     NVMCON1         equ	2078	;# 
  1312     081F                     NVMCON2         equ	2079	;# 
  1313     088C                     CPUDOZE         equ	2188	;# 
  1314     088D                     OSCCON1         equ	2189	;# 
  1315     088E                     OSCCON2         equ	2190	;# 
  1316     088F                     OSCCON3         equ	2191	;# 
  1317     0890                     OSCSTAT         equ	2192	;# 
  1318     0891                     OSCEN           equ	2193	;# 
  1319     0892                     OSCTUNE         equ	2194	;# 
  1320     0893                     OSCFRQ          equ	2195	;# 
  1321     0895                     CLKRCON         equ	2197	;# 
  1322     0896                     CLKRCLK         equ	2198	;# 
  1323     090C                     FVRCON          equ	2316	;# 
  1324     090E                     DAC1CON0        equ	2318	;# 
  1325     090F                     DAC1CON1        equ	2319	;# 
  1326     091F                     ZCDCON          equ	2335	;# 
  1327     098F                     CMOUT           equ	2447	;# 
  1328     098F                     CMSTAT          equ	2447	;# 
  1329     0990                     CM1CON0         equ	2448	;# 
  1330     0991                     CM1CON1         equ	2449	;# 
  1331     0992                     CM1NCH          equ	2450	;# 
  1332     0993                     CM1PCH          equ	2451	;# 
  1333     1E0F                     CLCDATA         equ	7695	;# 
  1334     1E10                     CLC1CON         equ	7696	;# 
  1335     1E11                     CLC1POL         equ	7697	;# 
  1336     1E12                     CLC1SEL0        equ	7698	;# 
  1337     1E13                     CLC1SEL1        equ	7699	;# 
  1338     1E14                     CLC1SEL2        equ	7700	;# 
  1339     1E15                     CLC1SEL3        equ	7701	;# 
  1340     1E16                     CLC1GLS0        equ	7702	;# 
  1341     1E17                     CLC1GLS1        equ	7703	;# 
  1342     1E18                     CLC1GLS2        equ	7704	;# 
  1343     1E19                     CLC1GLS3        equ	7705	;# 
  1344     1E1A                     CLC2CON         equ	7706	;# 
  1345     1E1B                     CLC2POL         equ	7707	;# 
  1346     1E1C                     CLC2SEL0        equ	7708	;# 
  1347     1E1D                     CLC2SEL1        equ	7709	;# 
  1348     1E1E                     CLC2SEL2        equ	7710	;# 
  1349     1E1F                     CLC2SEL3        equ	7711	;# 
  1350     1E20                     CLC2GLS0        equ	7712	;# 
  1351     1E21                     CLC2GLS1        equ	7713	;# 
  1352     1E22                     CLC2GLS2        equ	7714	;# 
  1353     1E23                     CLC2GLS3        equ	7715	;# 
  1354     1E24                     CLC3CON         equ	7716	;# 
  1355     1E25                     CLC3POL         equ	7717	;# 
  1356     1E26                     CLC3SEL0        equ	7718	;# 
  1357     1E27                     CLC3SEL1        equ	7719	;# 
  1358     1E28                     CLC3SEL2        equ	7720	;# 
  1359     1E29                     CLC3SEL3        equ	7721	;# 
  1360     1E2A                     CLC3GLS0        equ	7722	;# 
  1361     1E2B                     CLC3GLS1        equ	7723	;# 
  1362     1E2C                     CLC3GLS2        equ	7724	;# 
  1363     1E2D                     CLC3GLS3        equ	7725	;# 
  1364     1E2E                     CLC4CON         equ	7726	;# 
  1365     1E2F                     CLC4POL         equ	7727	;# 
  1366     1E30                     CLC4SEL0        equ	7728	;# 
  1367     1E31                     CLC4SEL1        equ	7729	;# 
  1368     1E32                     CLC4SEL2        equ	7730	;# 
  1369     1E33                     CLC4SEL3        equ	7731	;# 
  1370     1E34                     CLC4GLS0        equ	7732	;# 
  1371     1E35                     CLC4GLS1        equ	7733	;# 
  1372     1E36                     CLC4GLS2        equ	7734	;# 
  1373     1E37                     CLC4GLS3        equ	7735	;# 
  1374     1E8F                     PPSLOCK         equ	7823	;# 
  1375     1E90                     INTPPS          equ	7824	;# 
  1376     1E91                     T0CKIPPS        equ	7825	;# 
  1377     1E92                     T1CKIPPS        equ	7826	;# 
  1378     1E93                     T1GPPS          equ	7827	;# 
  1379     1E9C                     T2INPPS         equ	7836	;# 
  1380     1EA1                     CCP1PPS         equ	7841	;# 
  1381     1EA2                     CCP2PPS         equ	7842	;# 
  1382     1EB1                     CWG1PPS         equ	7857	;# 
  1383     1EBB                     CLCIN0PPS       equ	7867	;# 
  1384     1EBC                     CLCIN1PPS       equ	7868	;# 
  1385     1EBD                     CLCIN2PPS       equ	7869	;# 
  1386     1EBE                     CLCIN3PPS       equ	7870	;# 
  1387     1EC3                     ADACTPPS        equ	7875	;# 
  1388     1EC5                     SSP1CLKPPS      equ	7877	;# 
  1389     1EC6                     SSP1DATPPS      equ	7878	;# 
  1390     1EC7                     SSP1SSPPS       equ	7879	;# 
  1391     1ECB                     RX1DTPPS        equ	7883	;# 
  1392     1ECC                     TX1CKPPS        equ	7884	;# 
  1393     1F10                     RA0PPS          equ	7952	;# 
  1394     1F11                     RA1PPS          equ	7953	;# 
  1395     1F12                     RA2PPS          equ	7954	;# 
  1396     1F13                     RA3PPS          equ	7955	;# 
  1397     1F14                     RA4PPS          equ	7956	;# 
  1398     1F15                     RA5PPS          equ	7957	;# 
  1399     1F38                     ANSELA          equ	7992	;# 
  1400     1F39                     WPUA            equ	7993	;# 
  1401     1F3A                     ODCONA          equ	7994	;# 
  1402     1F3B                     SLRCONA         equ	7995	;# 
  1403     1F3C                     INLVLA          equ	7996	;# 
  1404     1F3D                     IOCAP           equ	7997	;# 
  1405     1F3E                     IOCAN           equ	7998	;# 
  1406     1F3F                     IOCAF           equ	7999	;# 
  1407     1FE4                     STATUS_SHAD     equ	8164	;# 
  1408     1FE5                     WREG_SHAD       equ	8165	;# 
  1409     1FE6                     BSR_SHAD        equ	8166	;# 
  1410     1FE7                     PCLATH_SHAD     equ	8167	;# 
  1411     1FE8                     FSR0_SHAD       equ	8168	;# 
  1412     1FE8                     FSR0L_SHAD      equ	8168	;# 
  1413     1FE9                     FSR0H_SHAD      equ	8169	;# 
  1414     1FEA                     FSR1_SHAD       equ	8170	;# 
  1415     1FEA                     FSR1L_SHAD      equ	8170	;# 
  1416     1FEB                     FSR1H_SHAD      equ	8171	;# 
  1417     1FED                     STKPTR          equ	8173	;# 
  1418     1FEE                     TOSL            equ	8174	;# 
  1419     1FEF                     TOSH            equ	8175	;# 
  1420     0000                     INDF0           equ	0	;# 
  1421     0001                     INDF1           equ	1	;# 
  1422     0002                     PCL             equ	2	;# 
  1423     0003                     STATUS          equ	3	;# 
  1424     0004                     FSR0L           equ	4	;# 
  1425     0005                     FSR0H           equ	5	;# 
  1426     0006                     FSR1L           equ	6	;# 
  1427     0007                     FSR1H           equ	7	;# 
  1428     0008                     BSR             equ	8	;# 
  1429     0009                     WREG            equ	9	;# 
  1430     000A                     PCLATH          equ	10	;# 
  1431     000B                     INTCON          equ	11	;# 
  1432     000C                     PORTA           equ	12	;# 
  1433     0012                     TRISA           equ	18	;# 
  1434     0018                     LATA            equ	24	;# 
  1435     009B                     ADRES           equ	155	;# 
  1436     009B                     ADRESL          equ	155	;# 
  1437     009C                     ADRESH          equ	156	;# 
  1438     009D                     ADCON0          equ	157	;# 
  1439     009E                     ADCON1          equ	158	;# 
  1440     009F                     ADACT           equ	159	;# 
  1441     0119                     RC1REG          equ	281	;# 
  1442     0119                     RCREG           equ	281	;# 
  1443     0119                     RCREG1          equ	281	;# 
  1444     011A                     TX1REG          equ	282	;# 
  1445     011A                     TXREG1          equ	282	;# 
  1446     011A                     TXREG           equ	282	;# 
  1447     011B                     SP1BRG          equ	283	;# 
  1448     011B                     SPBRG           equ	283	;# 
  1449     011B                     SP1BRGL         equ	283	;# 
  1450     011B                     SPBRG1          equ	283	;# 
  1451     011B                     SPBRGL          equ	283	;# 
  1452     011C                     SP1BRGH         equ	284	;# 
  1453     011C                     SPBRGH          equ	284	;# 
  1454     011C                     SPBRGH1         equ	284	;# 
  1455     011D                     RC1STA          equ	285	;# 
  1456     011D                     RCSTA1          equ	285	;# 
  1457     011D                     RCSTA           equ	285	;# 
  1458     011E                     TX1STA          equ	286	;# 
  1459     011E                     TXSTA1          equ	286	;# 
  1460     011E                     TXSTA           equ	286	;# 
  1461     011F                     BAUD1CON        equ	287	;# 
  1462     011F                     BAUDCON1        equ	287	;# 
  1463     011F                     BAUDCTL1        equ	287	;# 
  1464     011F                     BAUDCON         equ	287	;# 
  1465     011F                     BAUDCTL         equ	287	;# 
  1466     018C                     SSP1BUF         equ	396	;# 
  1467     018D                     SSP1ADD         equ	397	;# 
  1468     018E                     SSP1MSK         equ	398	;# 
  1469     018F                     SSP1STAT        equ	399	;# 
  1470     0190                     SSP1CON1        equ	400	;# 
  1471     0191                     SSP1CON2        equ	401	;# 
  1472     0192                     SSP1CON3        equ	402	;# 
  1473     020C                     TMR1            equ	524	;# 
  1474     020C                     TMR1L           equ	524	;# 
  1475     020D                     TMR1H           equ	525	;# 
  1476     020E                     T1CON           equ	526	;# 
  1477     020F                     T1GCON          equ	527	;# 
  1478     020F                     PR1             equ	527	;# 
  1479     0210                     T1GATE          equ	528	;# 
  1480     0210                     TMR1GATE        equ	528	;# 
  1481     0211                     T1CLK           equ	529	;# 
  1482     0211                     TMR1CLK         equ	529	;# 
  1483     028C                     T2TMR           equ	652	;# 
  1484     028C                     TMR2            equ	652	;# 
  1485     028D                     T2PR            equ	653	;# 
  1486     028D                     PR2             equ	653	;# 
  1487     028E                     T2CON           equ	654	;# 
  1488     028F                     T2HLT           equ	655	;# 
  1489     0290                     T2CLKCON        equ	656	;# 
  1490     0291                     T2RST           equ	657	;# 
  1491     030C                     CCPR1           equ	780	;# 
  1492     030C                     CCPR1L          equ	780	;# 
  1493     030D                     CCPR1H          equ	781	;# 
  1494     030E                     CCP1CON         equ	782	;# 
  1495     030F                     CCP1CAP         equ	783	;# 
  1496     0310                     CCPR2           equ	784	;# 
  1497     0310                     CCPR2L          equ	784	;# 
  1498     0311                     CCPR2H          equ	785	;# 
  1499     0312                     CCP2CON         equ	786	;# 
  1500     0313                     CCP2CAP         equ	787	;# 
  1501     0314                     PWM3DC          equ	788	;# 
  1502     0314                     PWM3DCL         equ	788	;# 
  1503     0315                     PWM3DCH         equ	789	;# 
  1504     0316                     PWM3CON         equ	790	;# 
  1505     0318                     PWM4DC          equ	792	;# 
  1506     0318                     PWM4DCL         equ	792	;# 
  1507     0319                     PWM4DCH         equ	793	;# 
  1508     031A                     PWM4CON         equ	794	;# 
  1509     031C                     PWM5DC          equ	796	;# 
  1510     031C                     PWM5DCL         equ	796	;# 
  1511     031D                     PWM5DCH         equ	797	;# 
  1512     031E                     PWM5CON         equ	798	;# 
  1513     038C                     PWM6DC          equ	908	;# 
  1514     038C                     PWM6DCL         equ	908	;# 
  1515     038D                     PWM6DCH         equ	909	;# 
  1516     038E                     PWM6CON         equ	910	;# 
  1517     058C                     NCO1ACC         equ	1420	;# 
  1518     058C                     NCO1ACCL        equ	1420	;# 
  1519     058D                     NCO1ACCH        equ	1421	;# 
  1520     058E                     NCO1ACCU        equ	1422	;# 
  1521     058F                     NCO1INC         equ	1423	;# 
  1522     058F                     NCO1INCL        equ	1423	;# 
  1523     0590                     NCO1INCH        equ	1424	;# 
  1524     0591                     NCO1INCU        equ	1425	;# 
  1525     0592                     NCO1CON         equ	1426	;# 
  1526     0593                     NCO1CLK         equ	1427	;# 
  1527     059C                     TMR0L           equ	1436	;# 
  1528     059C                     TMR0            equ	1436	;# 
  1529     059D                     TMR0H           equ	1437	;# 
  1530     059D                     PR0             equ	1437	;# 
  1531     059E                     T0CON0          equ	1438	;# 
  1532     059F                     T0CON1          equ	1439	;# 
  1533     060C                     CWG1CLKCON      equ	1548	;# 
  1534     060D                     CWG1DAT         equ	1549	;# 
  1535     060E                     CWG1DBR         equ	1550	;# 
  1536     060F                     CWG1DBF         equ	1551	;# 
  1537     0610                     CWG1CON0        equ	1552	;# 
  1538     0611                     CWG1CON1        equ	1553	;# 
  1539     0612                     CWG1AS0         equ	1554	;# 
  1540     0613                     CWG1AS1         equ	1555	;# 
  1541     0614                     CWG1STR         equ	1556	;# 
  1542     070C                     PIR0            equ	1804	;# 
  1543     070D                     PIR1            equ	1805	;# 
  1544     070E                     PIR2            equ	1806	;# 
  1545     070F                     PIR3            equ	1807	;# 
  1546     0710                     PIR4            equ	1808	;# 
  1547     0711                     PIR5            equ	1809	;# 
  1548     0712                     PIR6            equ	1810	;# 
  1549     0713                     PIR7            equ	1811	;# 
  1550     0716                     PIE0            equ	1814	;# 
  1551     0717                     PIE1            equ	1815	;# 
  1552     0718                     PIE2            equ	1816	;# 
  1553     0719                     PIE3            equ	1817	;# 
  1554     071A                     PIE4            equ	1818	;# 
  1555     071B                     PIE5            equ	1819	;# 
  1556     071C                     PIE6            equ	1820	;# 
  1557     071D                     PIE7            equ	1821	;# 
  1558     0796                     PMD0            equ	1942	;# 
  1559     0797                     PMD1            equ	1943	;# 
  1560     0798                     PMD2            equ	1944	;# 
  1561     0799                     PMD3            equ	1945	;# 
  1562     079A                     PMD4            equ	1946	;# 
  1563     079B                     PMD5            equ	1947	;# 
  1564     080C                     WDTCON0         equ	2060	;# 
  1565     080D                     WDTCON1         equ	2061	;# 
  1566     080E                     WDTPSL          equ	2062	;# 
  1567     080F                     WDTPSH          equ	2063	;# 
  1568     0810                     WDTTMR          equ	2064	;# 
  1569     0811                     BORCON          equ	2065	;# 
  1570     0812                     VREGCON         equ	2066	;# 
  1571     0813                     PCON0           equ	2067	;# 
  1572     0814                     PCON1           equ	2068	;# 
  1573     081A                     NVMADR          equ	2074	;# 
  1574     081A                     NVMADRL         equ	2074	;# 
  1575     081B                     NVMADRH         equ	2075	;# 
  1576     081C                     NVMDAT          equ	2076	;# 
  1577     081C                     NVMDATL         equ	2076	;# 
  1578     081D                     NVMDATH         equ	2077	;# 
  1579     081E                     NVMCON1         equ	2078	;# 
  1580     081F                     NVMCON2         equ	2079	;# 
  1581     088C                     CPUDOZE         equ	2188	;# 
  1582     088D                     OSCCON1         equ	2189	;# 
  1583     088E                     OSCCON2         equ	2190	;# 
  1584     088F                     OSCCON3         equ	2191	;# 
  1585     0890                     OSCSTAT         equ	2192	;# 
  1586     0891                     OSCEN           equ	2193	;# 
  1587     0892                     OSCTUNE         equ	2194	;# 
  1588     0893                     OSCFRQ          equ	2195	;# 
  1589     0895                     CLKRCON         equ	2197	;# 
  1590     0896                     CLKRCLK         equ	2198	;# 
  1591     090C                     FVRCON          equ	2316	;# 
  1592     090E                     DAC1CON0        equ	2318	;# 
  1593     090F                     DAC1CON1        equ	2319	;# 
  1594     091F                     ZCDCON          equ	2335	;# 
  1595     098F                     CMOUT           equ	2447	;# 
  1596     098F                     CMSTAT          equ	2447	;# 
  1597     0990                     CM1CON0         equ	2448	;# 
  1598     0991                     CM1CON1         equ	2449	;# 
  1599     0992                     CM1NCH          equ	2450	;# 
  1600     0993                     CM1PCH          equ	2451	;# 
  1601     1E0F                     CLCDATA         equ	7695	;# 
  1602     1E10                     CLC1CON         equ	7696	;# 
  1603     1E11                     CLC1POL         equ	7697	;# 
  1604     1E12                     CLC1SEL0        equ	7698	;# 
  1605     1E13                     CLC1SEL1        equ	7699	;# 
  1606     1E14                     CLC1SEL2        equ	7700	;# 
  1607     1E15                     CLC1SEL3        equ	7701	;# 
  1608     1E16                     CLC1GLS0        equ	7702	;# 
  1609     1E17                     CLC1GLS1        equ	7703	;# 
  1610     1E18                     CLC1GLS2        equ	7704	;# 
  1611     1E19                     CLC1GLS3        equ	7705	;# 
  1612     1E1A                     CLC2CON         equ	7706	;# 
  1613     1E1B                     CLC2POL         equ	7707	;# 
  1614     1E1C                     CLC2SEL0        equ	7708	;# 
  1615     1E1D                     CLC2SEL1        equ	7709	;# 
  1616     1E1E                     CLC2SEL2        equ	7710	;# 
  1617     1E1F                     CLC2SEL3        equ	7711	;# 
  1618     1E20                     CLC2GLS0        equ	7712	;# 
  1619     1E21                     CLC2GLS1        equ	7713	;# 
  1620     1E22                     CLC2GLS2        equ	7714	;# 
  1621     1E23                     CLC2GLS3        equ	7715	;# 
  1622     1E24                     CLC3CON         equ	7716	;# 
  1623     1E25                     CLC3POL         equ	7717	;# 
  1624     1E26                     CLC3SEL0        equ	7718	;# 
  1625     1E27                     CLC3SEL1        equ	7719	;# 
  1626     1E28                     CLC3SEL2        equ	7720	;# 
  1627     1E29                     CLC3SEL3        equ	7721	;# 
  1628     1E2A                     CLC3GLS0        equ	7722	;# 
  1629     1E2B                     CLC3GLS1        equ	7723	;# 
  1630     1E2C                     CLC3GLS2        equ	7724	;# 
  1631     1E2D                     CLC3GLS3        equ	7725	;# 
  1632     1E2E                     CLC4CON         equ	7726	;# 
  1633     1E2F                     CLC4POL         equ	7727	;# 
  1634     1E30                     CLC4SEL0        equ	7728	;# 
  1635     1E31                     CLC4SEL1        equ	7729	;# 
  1636     1E32                     CLC4SEL2        equ	7730	;# 
  1637     1E33                     CLC4SEL3        equ	7731	;# 
  1638     1E34                     CLC4GLS0        equ	7732	;# 
  1639     1E35                     CLC4GLS1        equ	7733	;# 
  1640     1E36                     CLC4GLS2        equ	7734	;# 
  1641     1E37                     CLC4GLS3        equ	7735	;# 
  1642     1E8F                     PPSLOCK         equ	7823	;# 
  1643     1E90                     INTPPS          equ	7824	;# 
  1644     1E91                     T0CKIPPS        equ	7825	;# 
  1645     1E92                     T1CKIPPS        equ	7826	;# 
  1646     1E93                     T1GPPS          equ	7827	;# 
  1647     1E9C                     T2INPPS         equ	7836	;# 
  1648     1EA1                     CCP1PPS         equ	7841	;# 
  1649     1EA2                     CCP2PPS         equ	7842	;# 
  1650     1EB1                     CWG1PPS         equ	7857	;# 
  1651     1EBB                     CLCIN0PPS       equ	7867	;# 
  1652     1EBC                     CLCIN1PPS       equ	7868	;# 
  1653     1EBD                     CLCIN2PPS       equ	7869	;# 
  1654     1EBE                     CLCIN3PPS       equ	7870	;# 
  1655     1EC3                     ADACTPPS        equ	7875	;# 
  1656     1EC5                     SSP1CLKPPS      equ	7877	;# 
  1657     1EC6                     SSP1DATPPS      equ	7878	;# 
  1658     1EC7                     SSP1SSPPS       equ	7879	;# 
  1659     1ECB                     RX1DTPPS        equ	7883	;# 
  1660     1ECC                     TX1CKPPS        equ	7884	;# 
  1661     1F10                     RA0PPS          equ	7952	;# 
  1662     1F11                     RA1PPS          equ	7953	;# 
  1663     1F12                     RA2PPS          equ	7954	;# 
  1664     1F13                     RA3PPS          equ	7955	;# 
  1665     1F14                     RA4PPS          equ	7956	;# 
  1666     1F15                     RA5PPS          equ	7957	;# 
  1667     1F38                     ANSELA          equ	7992	;# 
  1668     1F39                     WPUA            equ	7993	;# 
  1669     1F3A                     ODCONA          equ	7994	;# 
  1670     1F3B                     SLRCONA         equ	7995	;# 
  1671     1F3C                     INLVLA          equ	7996	;# 
  1672     1F3D                     IOCAP           equ	7997	;# 
  1673     1F3E                     IOCAN           equ	7998	;# 
  1674     1F3F                     IOCAF           equ	7999	;# 
  1675     1FE4                     STATUS_SHAD     equ	8164	;# 
  1676     1FE5                     WREG_SHAD       equ	8165	;# 
  1677     1FE6                     BSR_SHAD        equ	8166	;# 
  1678     1FE7                     PCLATH_SHAD     equ	8167	;# 
  1679     1FE8                     FSR0_SHAD       equ	8168	;# 
  1680     1FE8                     FSR0L_SHAD      equ	8168	;# 
  1681     1FE9                     FSR0H_SHAD      equ	8169	;# 
  1682     1FEA                     FSR1_SHAD       equ	8170	;# 
  1683     1FEA                     FSR1L_SHAD      equ	8170	;# 
  1684     1FEB                     FSR1H_SHAD      equ	8171	;# 
  1685     1FED                     STKPTR          equ	8173	;# 
  1686     1FEE                     TOSL            equ	8174	;# 
  1687     1FEF                     TOSH            equ	8175	;# 
  1688                           
  1689 ;; Function _INT_DefaultInterruptHandler is unused but had its address taken
  1690     0000                     _INT_DefaultInterruptHandler equ	0
  1691                           
  1692 ;; Function _TMR0_Deinitialize is unused but had its address taken
  1693     0000                     _TMR0_Deinitialize equ	0
  1694                           
  1695 ;; Function _TMR0_CounterGet is unused but had its address taken
  1696     0000                     _TMR0_CounterGet equ	0
  1697                           
  1698 ;; Function _TMR0_CounterSet is unused but had its address taken
  1699     0000                     _TMR0_CounterSet equ	0
  1700                           
  1701 ;; Function _TMR0_PeriodSet is unused but had its address taken
  1702     0000                     _TMR0_PeriodSet equ	0
  1703                           
  1704 ;; Function _TMR0_PeriodGet is unused but had its address taken
  1705     0000                     _TMR0_PeriodGet equ	0
  1706                           
  1707 ;; Function _TMR0_MaxCountGet is unused but had its address taken
  1708     0000                     _TMR0_MaxCountGet equ	0
  1709                           
  1710                           	psect	idataCOMMON
  1711     0167                     __pidataCOMMON:
  1712                           
  1713                           ;initializer for _MinOnCycles_u08
  1714     0167  3403               	retlw	3
  1715                           
  1716                           	psect	stringtext1
  1717     00CC                     __pstringtext1:
  1718     00CC                     _MainTimer:
  1719     00CC  34E2               	retlw	low _TMR0_Initialize
  1720     00CD  3400               	retlw	high _TMR0_Initialize
  1721     00CE  3400               	retlw	0
  1722     00CF  3400               	retlw	0
  1723     00D0  3461               	retlw	low _TMR0_Start
  1724     00D1  3401               	retlw	high _TMR0_Start
  1725     00D2  345E               	retlw	low _TMR0_Stop
  1726     00D3  3401               	retlw	high _TMR0_Stop
  1727     00D4  3400               	retlw	0
  1728     00D5  3400               	retlw	0
  1729     00D6  3400               	retlw	0
  1730     00D7  3400               	retlw	0
  1731     00D8  3400               	retlw	0
  1732     00D9  3400               	retlw	0
  1733     00DA  3400               	retlw	0
  1734     00DB  3400               	retlw	0
  1735     00DC  3400               	retlw	0
  1736     00DD  3400               	retlw	0
  1737     00DE  3453               	retlw	low _TMR0_OverflowCallbackRegister
  1738     00DF  3401               	retlw	high _TMR0_OverflowCallbackRegister
  1739     00E0  3400               	retlw	0
  1740     00E1  3400               	retlw	0
  1741     00E2                     __end_of_MainTimer:
  1742                           
  1743                           	psect	nvCOMMON
  1744     0078                     __pnvCOMMON:
  1745     0078                     _INT_InterruptHandler:
  1746     0078                     	ds	2
  1747                           
  1748                           	psect	nvBANK0
  1749     0020                     __pnvBANK0:
  1750     0020                     _TMR0_OverflowCallback:
  1751     0020                     	ds	2
  1752     0018                     _LATAbits       set	24
  1753     000C                     _PORTA          set	12
  1754     000C                     _PORTAbits      set	12
  1755     0012                     _TRISA          set	18
  1756     0018                     _LATA           set	24
  1757     000B                     _INTCONbits     set	11
  1758     005F                     _GIE            set	95
  1759     059E                     _T0CON0bits     set	1438
  1760     059E                     _T0CON0         set	1438
  1761     059F                     _T0CON1         set	1439
  1762     059C                     _TMR0L          set	1436
  1763     059D                     _TMR0H          set	1437
  1764     0716                     _PIE0bits       set	1814
  1765     070C                     _PIR0bits       set	1804
  1766     38B4                     _IOCIE          set	14516
  1767     0892                     _OSCTUNE        set	2194
  1768     0893                     _OSCFRQ         set	2195
  1769     0891                     _OSCEN          set	2193
  1770     088F                     _OSCCON3        set	2191
  1771     088D                     _OSCCON1        set	2189
  1772     1F3F                     _IOCAF          set	7999
  1773     1F3E                     _IOCAN          set	7998
  1774     1F3D                     _IOCAP          set	7997
  1775     1F3C                     _INLVLA         set	7996
  1776     1F3B                     _SLRCONA        set	7995
  1777     1F3A                     _ODCONA         set	7994
  1778     1F39                     _WPUA           set	7993
  1779     1F38                     _ANSELA         set	7992
  1780     F9F2                     _IOCAN2         set	63986
  1781                           
  1782                           	psect	cinit
  1783     0019                     start_initialization:	
  1784                           ; #config settings
  1785                           
  1786     0019                     __initialization:
  1787                           
  1788                           ; Initialize objects allocated to COMMON
  1789     0019  3181  2167  3180   	fcall	__pidataCOMMON	;fetch initializer
  1790     001C  00FC               	movwf	__pdataCOMMON& (0+127)
  1791                           
  1792                           ; Clear objects allocated to COMMON
  1793     001D  01F0               	clrf	__pbssCOMMON& (0+127)
  1794     001E  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  1795     001F  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  1796     0020  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  1797     0021  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  1798     0022  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  1799     0023  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
  1800     0024  01F7               	clrf	(__pbssCOMMON+7)& (0+127)
  1801     0025                     end_of_initialization:	
  1802                           ;End of C runtime variable initialization code
  1803                           
  1804     0025                     __end_of__initialization:
  1805     0025  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1806     0026  0140               	movlb	0
  1807     0027  28AF               	ljmp	_main	;jump to C main() function
  1808                           
  1809                           	psect	bssCOMMON
  1810     0070                     __pbssCOMMON:
  1811     0070                     _SwTimer2_u16:
  1812     0070                     	ds	2
  1813     0072                     _SwTimer1_u16:
  1814     0072                     	ds	2
  1815     0074                     _tmr0PeriodCount:
  1816     0074                     	ds	2
  1817     0076                     _MainFSM:
  1818     0076                     	ds	1
  1819     0077                     _TimerFlag_u08:
  1820     0077                     	ds	1
  1821                           
  1822                           	psect	dataCOMMON
  1823     007C                     __pdataCOMMON:
  1824     007C                     _MinOnCycles_u08:
  1825     007C                     	ds	1
  1826                           
  1827                           	psect	cstackCOMMON
  1828     007A                     __pcstackCOMMON:
  1829     007A                     ?_INT_SetInterruptHandler:
  1830     007A                     ?_TMR0_ISR:	
  1831                           ; 1 bytes @ 0x0
  1832                           
  1833     007A                     ?_PIN_MANAGER_Initialize:	
  1834                           ; 1 bytes @ 0x0
  1835                           
  1836     007A                     ?_TMR0_Initialize:	
  1837                           ; 1 bytes @ 0x0
  1838                           
  1839     007A                     ?_TMR0_Start:	
  1840                           ; 1 bytes @ 0x0
  1841                           
  1842     007A                     ?_TMR0_Stop:	
  1843                           ; 1 bytes @ 0x0
  1844                           
  1845     007A                     ?_TMR0_OverflowCallbackRegister:	
  1846                           ; 1 bytes @ 0x0
  1847                           
  1848     007A                     ?_TMR0_DefaultOverflowCallback:	
  1849                           ; 1 bytes @ 0x0
  1850                           
  1851     007A                     ?_CLOCK_Initialize:	
  1852                           ; 1 bytes @ 0x0
  1853                           
  1854     007A                     ?_INTERRUPT_Initialize:	
  1855                           ; 1 bytes @ 0x0
  1856                           
  1857     007A                     ?_INTERRUPT_InterruptManager:	
  1858                           ; 1 bytes @ 0x0
  1859                           
  1860     007A                     ?_SYSTEM_Initialize:	
  1861                           ; 1 bytes @ 0x0
  1862                           
  1863     007A                     ?_MyTmr0:	
  1864                           ; 1 bytes @ 0x0
  1865                           
  1866     007A                     ?_PerformSWTimer:	
  1867                           ; 1 bytes @ 0x0
  1868                           
  1869     007A                     ?_HandlePowerOff:	
  1870                           ; 1 bytes @ 0x0
  1871                           
  1872     007A                     ?_PerformMainFSM:	
  1873                           ; 1 bytes @ 0x0
  1874                           
  1875     007A                     ?_main:	
  1876                           ; 1 bytes @ 0x0
  1877                           
  1878     007A                     INT_SetInterruptHandler@InterruptHandler:	
  1879                           ; 2 bytes @ 0x0
  1880                           
  1881     007A                     TMR0_OverflowCallbackRegister@callbackHandler:	
  1882                           ; 2 bytes @ 0x0
  1883                           
  1884     007A                     ??_TMR0_ISR:	
  1885                           ; 2 bytes @ 0x0
  1886                           
  1887     007A                     ??_PIN_MANAGER_Initialize:	
  1888                           ; 1 bytes @ 0x0
  1889                           
  1890     007A                     ??_TMR0_Initialize:	
  1891                           ; 1 bytes @ 0x0
  1892                           
  1893     007A                     ??_TMR0_Start:	
  1894                           ; 1 bytes @ 0x0
  1895                           
  1896     007A                     ??_TMR0_Stop:	
  1897                           ; 1 bytes @ 0x0
  1898                           
  1899     007A                     ??_TMR0_DefaultOverflowCallback:	
  1900                           ; 1 bytes @ 0x0
  1901                           
  1902     007A                     ??_CLOCK_Initialize:	
  1903                           ; 1 bytes @ 0x0
  1904                           
  1905     007A                     ??_INTERRUPT_InterruptManager:	
  1906                           ; 1 bytes @ 0x0
  1907                           
  1908     007A                     ??_MyTmr0:	
  1909                           ; 1 bytes @ 0x0
  1910                           
  1911     007A                     ??_PerformSWTimer:	
  1912                           ; 1 bytes @ 0x0
  1913                           
  1914     007A                     ??_HandlePowerOff:	
  1915                           ; 1 bytes @ 0x0
  1916                           
  1917     007A                     ??_PerformMainFSM:	
  1918                           ; 1 bytes @ 0x0
  1919                           
  1920                           
  1921                           ; 1 bytes @ 0x0
  1922     007A                     	ds	2
  1923     007C                     ??_INT_SetInterruptHandler:
  1924     007C                     ??_TMR0_OverflowCallbackRegister:	
  1925                           ; 1 bytes @ 0x2
  1926                           
  1927     007C                     ??_INTERRUPT_Initialize:	
  1928                           ; 1 bytes @ 0x2
  1929                           
  1930     007C                     ??_SYSTEM_Initialize:	
  1931                           ; 1 bytes @ 0x2
  1932                           
  1933     007C                     ??_main:	
  1934                           ; 1 bytes @ 0x2
  1935                           
  1936                           
  1937                           	psect	maintext
  1938     00AF                     __pmaintext:	
  1939                           ; 1 bytes @ 0x2
  1940 ;;
  1941 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1942 ;;
  1943 ;; *************** function _main *****************
  1944 ;; Defined at:
  1945 ;;		line 132 in file "main.c"
  1946 ;; Parameters:    Size  Location     Type
  1947 ;;		None
  1948 ;; Auto vars:     Size  Location     Type
  1949 ;;		None
  1950 ;; Return value:  Size  Location     Type
  1951 ;;                  2  246[None  ] int 
  1952 ;; Registers used:
  1953 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1954 ;; Tracked objects:
  1955 ;;		On entry : B3F/0
  1956 ;;		On exit  : 0/0
  1957 ;;		Unchanged: 0/0
  1958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1959 ;;      Params:         0       0       0       0
  1960 ;;      Locals:         0       0       0       0
  1961 ;;      Temps:          0       0       0       0
  1962 ;;      Totals:         0       0       0       0
  1963 ;;Total ram usage:        0 bytes
  1964 ;; Hardware stack levels required when called: 6
  1965 ;; This function calls:
  1966 ;;		_PerformMainFSM
  1967 ;;		_PerformSWTimer
  1968 ;;		_SYSTEM_Initialize
  1969 ;;		_TMR0_OverflowCallbackRegister
  1970 ;;		_TMR0_Start
  1971 ;; This function is called by:
  1972 ;;		Startup code after reset
  1973 ;; This function uses a non-reentrant model
  1974 ;;
  1975                           
  1976     00AF                     _main:	
  1977                           ;psect for function _main
  1978                           
  1979     00AF                     l1049:	
  1980                           ;incstack = 0
  1981                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1982                           
  1983                           
  1984                           ;main.c: 134:    SYSTEM_Initialize();
  1985     00AF  3181  2133  3180   	fcall	_SYSTEM_Initialize
  1986                           
  1987                           ;main.c: 135:     TMR0_OverflowCallbackRegister(MyTmr0);
  1988     00B2  3064               	movlw	low _MyTmr0
  1989     00B3  00FA               	movwf	TMR0_OverflowCallbackRegister@callbackHandler
  1990     00B4  3001               	movlw	high _MyTmr0
  1991     00B5  00FB               	movwf	TMR0_OverflowCallbackRegister@callbackHandler+1
  1992     00B6  3181  2153  3180   	fcall	_TMR0_OverflowCallbackRegister
  1993     00B9                     l1051:
  1994                           
  1995                           ;main.c: 136:     (INTCONbits.GIE = 1);
  1996     00B9  178B               	bsf	11,7	;volatile
  1997     00BA                     l1053:
  1998                           
  1999                           ;main.c: 137:     (INTCONbits.PEIE = 1);
  2000     00BA  170B               	bsf	11,6	;volatile
  2001     00BB                     l1055:
  2002                           
  2003                           ;main.c: 138:     TMR0_Start();
  2004     00BB  3181  2161  3180   	fcall	_TMR0_Start
  2005     00BE                     l1057:
  2006                           
  2007                           ;main.c: 141:     {;main.c: 142:       if (0 != TimerFlag_u08)
  2008     00BE  0877               	movf	_TimerFlag_u08,w
  2009     00BF  1903               	btfsc	3,2
  2010     00C0  28C2               	goto	u211
  2011     00C1  28C3               	goto	u210
  2012     00C2                     u211:
  2013     00C2  28BE               	goto	l1057
  2014     00C3                     u210:
  2015     00C3                     l1059:
  2016                           
  2017                           ;main.c: 143:       {;main.c: 147:         TimerFlag_u08 = 0;
  2018     00C3  01F7               	clrf	_TimerFlag_u08
  2019     00C4                     l1061:
  2020                           
  2021                           ;main.c: 148:         PerformSWTimer();
  2022     00C4  3180  20F8  3180   	fcall	_PerformSWTimer
  2023     00C7                     l1063:
  2024                           
  2025                           ;main.c: 149:         PerformMainFSM();
  2026     00C7  3180  2028  3180   	fcall	_PerformMainFSM
  2027     00CA  28BE               	goto	l1057
  2028     00CB  2818               	ljmp	start
  2029     00CC                     __end_of_main:
  2030                           
  2031                           	psect	text1
  2032     0153                     __ptext1:	
  2033 ;; *************** function _TMR0_OverflowCallbackRegister *****************
  2034 ;; Defined at:
  2035 ;;		line 153 in file "mcc_generated_files/timer/src/tmr0.c"
  2036 ;; Parameters:    Size  Location     Type
  2037 ;;  callbackHand    2    0[COMMON] PTR FTN()void 
  2038 ;;		 -> MyTmr0(1), 
  2039 ;; Auto vars:     Size  Location     Type
  2040 ;;		None
  2041 ;; Return value:  Size  Location     Type
  2042 ;;                  1    wreg      void 
  2043 ;; Registers used:
  2044 ;;		wreg
  2045 ;; Tracked objects:
  2046 ;;		On entry : 0/0
  2047 ;;		On exit  : 0/0
  2048 ;;		Unchanged: 0/0
  2049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2050 ;;      Params:         2       0       0       0
  2051 ;;      Locals:         0       0       0       0
  2052 ;;      Temps:          0       0       0       0
  2053 ;;      Totals:         2       0       0       0
  2054 ;;Total ram usage:        2 bytes
  2055 ;; Hardware stack levels used: 1
  2056 ;; Hardware stack levels required when called: 3
  2057 ;; This function calls:
  2058 ;;		Nothing
  2059 ;; This function is called by:
  2060 ;;		_main
  2061 ;; This function uses a non-reentrant model
  2062 ;;
  2063                           
  2064     0153                     _TMR0_OverflowCallbackRegister:	
  2065                           ;psect for function _TMR0_OverflowCallbackRegister
  2066                           
  2067     0153                     l1039:	
  2068                           ;incstack = 0
  2069                           ; Regs used in _TMR0_OverflowCallbackRegister: [wreg]
  2070                           
  2071                           
  2072                           ;mcc_generated_files/timer/src/tmr0.c: 153: void TMR0_OverflowCallbackRegister(void (* c
      +                          allbackHandler)(void));mcc_generated_files/timer/src/tmr0.c: 154: {;mcc_generated_files/
      +                          timer/src/tmr0.c: 155:     TMR0_OverflowCallback = callbackHandler;
  2073     0153  087B               	movf	TMR0_OverflowCallbackRegister@callbackHandler+1,w
  2074     0154  0140               	movlb	0	; select bank0
  2075     0155  00A1               	movwf	_TMR0_OverflowCallback+1
  2076     0156  087A               	movf	TMR0_OverflowCallbackRegister@callbackHandler,w
  2077     0157  00A0               	movwf	_TMR0_OverflowCallback
  2078     0158                     l167:
  2079     0158  0008               	return
  2080     0159                     __end_of_TMR0_OverflowCallbackRegister:
  2081                           
  2082                           	psect	text2
  2083     0133                     __ptext2:	
  2084 ;; *************** function _SYSTEM_Initialize *****************
  2085 ;; Defined at:
  2086 ;;		line 39 in file "mcc_generated_files/system/src/system.c"
  2087 ;; Parameters:    Size  Location     Type
  2088 ;;		None
  2089 ;; Auto vars:     Size  Location     Type
  2090 ;;		None
  2091 ;; Return value:  Size  Location     Type
  2092 ;;                  1    wreg      void 
  2093 ;; Registers used:
  2094 ;;		wreg, status,2, status,0, pclath, cstack
  2095 ;; Tracked objects:
  2096 ;;		On entry : 0/0
  2097 ;;		On exit  : 0/0
  2098 ;;		Unchanged: 0/0
  2099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2100 ;;      Params:         0       0       0       0
  2101 ;;      Locals:         0       0       0       0
  2102 ;;      Temps:          0       0       0       0
  2103 ;;      Totals:         0       0       0       0
  2104 ;;Total ram usage:        0 bytes
  2105 ;; Hardware stack levels used: 1
  2106 ;; Hardware stack levels required when called: 5
  2107 ;; This function calls:
  2108 ;;		_CLOCK_Initialize
  2109 ;;		_INTERRUPT_Initialize
  2110 ;;		_PIN_MANAGER_Initialize
  2111 ;;		_TMR0_Initialize
  2112 ;; This function is called by:
  2113 ;;		_main
  2114 ;; This function uses a non-reentrant model
  2115 ;;
  2116                           
  2117     0133                     _SYSTEM_Initialize:	
  2118                           ;psect for function _SYSTEM_Initialize
  2119                           
  2120     0133                     l1033:	
  2121                           ;incstack = 0
  2122                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2123                           
  2124                           
  2125                           ;mcc_generated_files/system/src/system.c: 41:     CLOCK_Initialize();
  2126     0133  3181  214A  3181   	fcall	_CLOCK_Initialize
  2127                           
  2128                           ;mcc_generated_files/system/src/system.c: 42:     PIN_MANAGER_Initialize();
  2129     0136  3181  2121  3181   	fcall	_PIN_MANAGER_Initialize
  2130     0139                     l1035:
  2131                           
  2132                           ;mcc_generated_files/system/src/system.c: 43:     TMR0_Initialize();
  2133     0139  3180  20E2  3181   	fcall	_TMR0_Initialize
  2134     013C                     l1037:
  2135                           
  2136                           ;mcc_generated_files/system/src/system.c: 44:     INTERRUPT_Initialize();
  2137     013C  3181  2140  3181   	fcall	_INTERRUPT_Initialize
  2138     013F                     l65:
  2139     013F  0008               	return
  2140     0140                     __end_of_SYSTEM_Initialize:
  2141                           
  2142                           	psect	text3
  2143     00E2                     __ptext3:	
  2144 ;; *************** function _TMR0_Initialize *****************
  2145 ;; Defined at:
  2146 ;;		line 60 in file "mcc_generated_files/timer/src/tmr0.c"
  2147 ;; Parameters:    Size  Location     Type
  2148 ;;		None
  2149 ;; Auto vars:     Size  Location     Type
  2150 ;;		None
  2151 ;; Return value:  Size  Location     Type
  2152 ;;                  1    wreg      void 
  2153 ;; Registers used:
  2154 ;;		wreg, status,2
  2155 ;; Tracked objects:
  2156 ;;		On entry : 0/0
  2157 ;;		On exit  : 0/0
  2158 ;;		Unchanged: 0/0
  2159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2160 ;;      Params:         0       0       0       0
  2161 ;;      Locals:         0       0       0       0
  2162 ;;      Temps:          0       0       0       0
  2163 ;;      Totals:         0       0       0       0
  2164 ;;Total ram usage:        0 bytes
  2165 ;; Hardware stack levels used: 1
  2166 ;; Hardware stack levels required when called: 3
  2167 ;; This function calls:
  2168 ;;		Nothing
  2169 ;; This function is called by:
  2170 ;;		_SYSTEM_Initialize
  2171 ;; This function uses a non-reentrant model
  2172 ;;
  2173                           
  2174     00E2                     _TMR0_Initialize:	
  2175                           ;psect for function _TMR0_Initialize
  2176                           
  2177     00E2                     l1005:	
  2178                           ;incstack = 0
  2179                           ; Regs used in _TMR0_Initialize: [wreg+status,2]
  2180                           
  2181                           
  2182                           ;mcc_generated_files/timer/src/tmr0.c: 62:     TMR0H = 0x83;
  2183     00E2  3083               	movlw	131
  2184     00E3  014B               	movlb	11	; select bank11
  2185     00E4  009D               	movwf	29	;volatile
  2186     00E5                     l1007:
  2187                           
  2188                           ;mcc_generated_files/timer/src/tmr0.c: 63:     TMR0L = 0x0;
  2189     00E5  019C               	clrf	28	;volatile
  2190     00E6                     l1009:
  2191                           
  2192                           ;mcc_generated_files/timer/src/tmr0.c: 65:     T0CON1 = (3 << 0x5)
  2193     00E6  3070               	movlw	112
  2194     00E7  009F               	movwf	31	;volatile
  2195     00E8                     l1011:
  2196                           
  2197                           ;mcc_generated_files/timer/src/tmr0.c: 69:     tmr0PeriodCount = ((uint16_t)TMR0H << 8) 
      +                          | TMR0L;
  2198     00E8  081D               	movf	29,w	;volatile
  2199     00E9  00F5               	movwf	_tmr0PeriodCount+1	;volatile
  2200     00EA  081C               	movf	28,w	;volatile
  2201     00EB  00F4               	movwf	_tmr0PeriodCount	;volatile
  2202     00EC                     l1013:
  2203                           
  2204                           ;mcc_generated_files/timer/src/tmr0.c: 71:     TMR0_OverflowCallback = TMR0_DefaultOverf
      +                          lowCallback;
  2205     00EC  3068               	movlw	low _TMR0_DefaultOverflowCallback
  2206     00ED  0140               	movlb	0	; select bank0
  2207     00EE  00A0               	movwf	_TMR0_OverflowCallback
  2208     00EF  3001               	movlw	high _TMR0_DefaultOverflowCallback
  2209     00F0  00A1               	movwf	_TMR0_OverflowCallback+1
  2210     00F1                     l1015:
  2211                           
  2212                           ;mcc_generated_files/timer/src/tmr0.c: 73:     PIR0bits.TMR0IF = 0;
  2213     00F1  014E               	movlb	14	; select bank14
  2214     00F2  128C               	bcf	12,5	;volatile
  2215     00F3                     l1017:
  2216                           
  2217                           ;mcc_generated_files/timer/src/tmr0.c: 74:     PIE0bits.TMR0IE = 1;
  2218     00F3  1696               	bsf	22,5	;volatile
  2219     00F4                     l1019:
  2220                           
  2221                           ;mcc_generated_files/timer/src/tmr0.c: 76:     T0CON0 = (0 << 0x0)
  2222     00F4  3090               	movlw	144
  2223     00F5  014B               	movlb	11	; select bank11
  2224     00F6  009E               	movwf	30	;volatile
  2225     00F7                     l136:
  2226     00F7  0008               	return
  2227     00F8                     __end_of_TMR0_Initialize:
  2228                           
  2229                           	psect	text4
  2230     0121                     __ptext4:	
  2231 ;; *************** function _PIN_MANAGER_Initialize *****************
  2232 ;; Defined at:
  2233 ;;		line 38 in file "mcc_generated_files/system/src/pins.c"
  2234 ;; Parameters:    Size  Location     Type
  2235 ;;		None
  2236 ;; Auto vars:     Size  Location     Type
  2237 ;;		None
  2238 ;; Return value:  Size  Location     Type
  2239 ;;                  1    wreg      void 
  2240 ;; Registers used:
  2241 ;;		status,2
  2242 ;; Tracked objects:
  2243 ;;		On entry : 0/0
  2244 ;;		On exit  : 0/0
  2245 ;;		Unchanged: 0/0
  2246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2247 ;;      Params:         0       0       0       0
  2248 ;;      Locals:         0       0       0       0
  2249 ;;      Temps:          0       0       0       0
  2250 ;;      Totals:         0       0       0       0
  2251 ;;Total ram usage:        0 bytes
  2252 ;; Hardware stack levels used: 1
  2253 ;; Hardware stack levels required when called: 3
  2254 ;; This function calls:
  2255 ;;		Nothing
  2256 ;; This function is called by:
  2257 ;;		_SYSTEM_Initialize
  2258 ;; This function uses a non-reentrant model
  2259 ;;
  2260                           
  2261     0121                     _PIN_MANAGER_Initialize:	
  2262                           ;psect for function _PIN_MANAGER_Initialize
  2263                           
  2264     0121                     l793:	
  2265                           ;incstack = 0
  2266                           ; Regs used in _PIN_MANAGER_Initialize: [status,2]
  2267                           
  2268                           
  2269                           ;mcc_generated_files/system/src/pins.c: 43:     LATA = 0x0;
  2270     0121  0140               	movlb	0	; select bank0
  2271     0122  0198               	clrf	24	;volatile
  2272     0123                     l795:
  2273                           
  2274                           ;mcc_generated_files/system/src/pins.c: 48:     TRISA = 0x5;
  2275     0123  3005               	movlw	5
  2276     0124  0092               	movwf	18	;volatile
  2277     0125                     l797:
  2278                           
  2279                           ;mcc_generated_files/system/src/pins.c: 53:     ANSELA = 0x1;
  2280     0125  3001               	movlw	1
  2281     0126  017E               	movlb	62	; select bank62
  2282     0127  00B8               	movwf	56	;volatile
  2283     0128                     l799:
  2284                           
  2285                           ;mcc_generated_files/system/src/pins.c: 58:     WPUA = 0x4;
  2286     0128  3004               	movlw	4
  2287     0129  00B9               	movwf	57	;volatile
  2288                           
  2289                           ;mcc_generated_files/system/src/pins.c: 64:     ODCONA = 0x0;
  2290     012A  01BA               	clrf	58	;volatile
  2291     012B                     l801:
  2292                           
  2293                           ;mcc_generated_files/system/src/pins.c: 68:     SLRCONA = 0x37;
  2294     012B  3037               	movlw	55
  2295     012C  00BB               	movwf	59	;volatile
  2296     012D                     l803:
  2297                           
  2298                           ;mcc_generated_files/system/src/pins.c: 72:     INLVLA = 0x3F;
  2299     012D  303F               	movlw	63
  2300     012E  00BC               	movwf	60	;volatile
  2301                           
  2302                           ;mcc_generated_files/system/src/pins.c: 85:     IOCAP = 0x0;
  2303     012F  01BD               	clrf	61	;volatile
  2304                           
  2305                           ;mcc_generated_files/system/src/pins.c: 86:     IOCAN = 0x0;
  2306     0130  01BE               	clrf	62	;volatile
  2307                           
  2308                           ;mcc_generated_files/system/src/pins.c: 87:     IOCAF = 0x0;
  2309     0131  01BF               	clrf	63	;volatile
  2310     0132                     l88:
  2311     0132  0008               	return
  2312     0133                     __end_of_PIN_MANAGER_Initialize:
  2313                           
  2314                           	psect	text5
  2315     0140                     __ptext5:	
  2316 ;; *************** function _INTERRUPT_Initialize *****************
  2317 ;; Defined at:
  2318 ;;		line 40 in file "mcc_generated_files/system/src/interrupt.c"
  2319 ;; Parameters:    Size  Location     Type
  2320 ;;		None
  2321 ;; Auto vars:     Size  Location     Type
  2322 ;;		None
  2323 ;; Return value:  Size  Location     Type
  2324 ;;                  1    wreg      void 
  2325 ;; Registers used:
  2326 ;;		wreg, status,2, status,0, pclath, cstack
  2327 ;; Tracked objects:
  2328 ;;		On entry : 0/0
  2329 ;;		On exit  : 0/0
  2330 ;;		Unchanged: 0/0
  2331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2332 ;;      Params:         0       0       0       0
  2333 ;;      Locals:         0       0       0       0
  2334 ;;      Temps:          0       0       0       0
  2335 ;;      Totals:         0       0       0       0
  2336 ;;Total ram usage:        0 bytes
  2337 ;; Hardware stack levels used: 1
  2338 ;; Hardware stack levels required when called: 4
  2339 ;; This function calls:
  2340 ;;		_INT_SetInterruptHandler
  2341 ;; This function is called by:
  2342 ;;		_SYSTEM_Initialize
  2343 ;; This function uses a non-reentrant model
  2344 ;;
  2345                           
  2346     0140                     _INTERRUPT_Initialize:	
  2347                           ;psect for function _INTERRUPT_Initialize
  2348                           
  2349     0140                     l1001:	
  2350                           ;incstack = 0
  2351                           ; Regs used in _INTERRUPT_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2352                           
  2353                           
  2354                           ;mcc_generated_files/system/src/interrupt.c: 43:     (PIR0bits.INTF = 0);
  2355     0140  014E               	movlb	14	; select bank14
  2356     0141  100C               	bcf	12,0	;volatile
  2357     0142                     l1003:
  2358                           
  2359                           ;mcc_generated_files/system/src/interrupt.c: 45:     INT_SetInterruptHandler(INT_Default
      +                          InterruptHandler);
  2360     0142  3000               	movlw	0
  2361     0143  00FA               	movwf	INT_SetInterruptHandler@InterruptHandler
  2362     0144  3000               	movlw	0
  2363     0145  00FB               	movwf	INT_SetInterruptHandler@InterruptHandler+1
  2364     0146  3181  2159  3181   	fcall	_INT_SetInterruptHandler
  2365     0149                     l32:
  2366     0149  0008               	return
  2367     014A                     __end_of_INTERRUPT_Initialize:
  2368                           
  2369                           	psect	text6
  2370     0159                     __ptext6:	
  2371 ;; *************** function _INT_SetInterruptHandler *****************
  2372 ;; Defined at:
  2373 ;;		line 95 in file "mcc_generated_files/system/src/interrupt.c"
  2374 ;; Parameters:    Size  Location     Type
  2375 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
  2376 ;;		 -> INT_DefaultInterruptHandler(1), 
  2377 ;; Auto vars:     Size  Location     Type
  2378 ;;		None
  2379 ;; Return value:  Size  Location     Type
  2380 ;;                  1    wreg      void 
  2381 ;; Registers used:
  2382 ;;		wreg
  2383 ;; Tracked objects:
  2384 ;;		On entry : 0/0
  2385 ;;		On exit  : 0/0
  2386 ;;		Unchanged: 0/0
  2387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2388 ;;      Params:         2       0       0       0
  2389 ;;      Locals:         0       0       0       0
  2390 ;;      Temps:          0       0       0       0
  2391 ;;      Totals:         2       0       0       0
  2392 ;;Total ram usage:        2 bytes
  2393 ;; Hardware stack levels used: 1
  2394 ;; Hardware stack levels required when called: 3
  2395 ;; This function calls:
  2396 ;;		Nothing
  2397 ;; This function is called by:
  2398 ;;		_INTERRUPT_Initialize
  2399 ;; This function uses a non-reentrant model
  2400 ;;
  2401                           
  2402     0159                     _INT_SetInterruptHandler:	
  2403                           ;psect for function _INT_SetInterruptHandler
  2404                           
  2405     0159                     l999:	
  2406                           ;incstack = 0
  2407                           ; Regs used in _INT_SetInterruptHandler: [wreg]
  2408                           
  2409                           
  2410                           ;mcc_generated_files/system/src/interrupt.c: 96:     INT_InterruptHandler = InterruptHan
      +                          dler;
  2411     0159  087B               	movf	INT_SetInterruptHandler@InterruptHandler+1,w
  2412     015A  00F9               	movwf	_INT_InterruptHandler+1
  2413     015B  087A               	movf	INT_SetInterruptHandler@InterruptHandler,w
  2414     015C  00F8               	movwf	_INT_InterruptHandler
  2415     015D                     l51:
  2416     015D  0008               	return
  2417     015E                     __end_of_INT_SetInterruptHandler:
  2418                           
  2419                           	psect	text7
  2420     014A                     __ptext7:	
  2421 ;; *************** function _CLOCK_Initialize *****************
  2422 ;; Defined at:
  2423 ;;		line 39 in file "mcc_generated_files/system/src/clock.c"
  2424 ;; Parameters:    Size  Location     Type
  2425 ;;		None
  2426 ;; Auto vars:     Size  Location     Type
  2427 ;;		None
  2428 ;; Return value:  Size  Location     Type
  2429 ;;                  1    wreg      void 
  2430 ;; Registers used:
  2431 ;;		status,2
  2432 ;; Tracked objects:
  2433 ;;		On entry : 0/0
  2434 ;;		On exit  : 0/0
  2435 ;;		Unchanged: 0/0
  2436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2437 ;;      Params:         0       0       0       0
  2438 ;;      Locals:         0       0       0       0
  2439 ;;      Temps:          0       0       0       0
  2440 ;;      Totals:         0       0       0       0
  2441 ;;Total ram usage:        0 bytes
  2442 ;; Hardware stack levels used: 1
  2443 ;; Hardware stack levels required when called: 3
  2444 ;; This function calls:
  2445 ;;		Nothing
  2446 ;; This function is called by:
  2447 ;;		_SYSTEM_Initialize
  2448 ;; This function uses a non-reentrant model
  2449 ;;
  2450                           
  2451     014A                     _CLOCK_Initialize:	
  2452                           ;psect for function _CLOCK_Initialize
  2453                           
  2454     014A                     l783:	
  2455                           ;incstack = 0
  2456                           ; Regs used in _CLOCK_Initialize: [status,2]
  2457                           
  2458                           
  2459                           ;mcc_generated_files/system/src/clock.c: 42:     OSCCON1 = (0 << 0x0)
  2460     014A  3060               	movlw	96
  2461     014B  0151               	movlb	17	; select bank17
  2462     014C  008D               	movwf	13	;volatile
  2463     014D                     l785:
  2464                           
  2465                           ;mcc_generated_files/system/src/clock.c: 44:     OSCCON3 = (0 << 0x7);
  2466     014D  018F               	clrf	15	;volatile
  2467                           
  2468                           ;mcc_generated_files/system/src/clock.c: 45:     OSCEN = (0 << 0x7)
  2469     014E  0191               	clrf	17	;volatile
  2470     014F                     l787:
  2471                           
  2472                           ;mcc_generated_files/system/src/clock.c: 50:     OSCFRQ = (6 << 0x0);
  2473     014F  3006               	movlw	6
  2474     0150  0093               	movwf	19	;volatile
  2475                           
  2476                           ;mcc_generated_files/system/src/clock.c: 51:     OSCTUNE = (0 << 0x0);
  2477     0151  0192               	clrf	18	;volatile
  2478     0152                     l13:
  2479     0152  0008               	return
  2480     0153                     __end_of_CLOCK_Initialize:
  2481                           
  2482                           	psect	text8
  2483     00F8                     __ptext8:	
  2484 ;; *************** function _PerformSWTimer *****************
  2485 ;; Defined at:
  2486 ;;		line 47 in file "main.c"
  2487 ;; Parameters:    Size  Location     Type
  2488 ;;		None
  2489 ;; Auto vars:     Size  Location     Type
  2490 ;;		None
  2491 ;; Return value:  Size  Location     Type
  2492 ;;                  1    wreg      void 
  2493 ;; Registers used:
  2494 ;;		wreg, status,2, status,0
  2495 ;; Tracked objects:
  2496 ;;		On entry : 0/0
  2497 ;;		On exit  : 0/0
  2498 ;;		Unchanged: 0/0
  2499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2500 ;;      Params:         0       0       0       0
  2501 ;;      Locals:         0       0       0       0
  2502 ;;      Temps:          0       0       0       0
  2503 ;;      Totals:         0       0       0       0
  2504 ;;Total ram usage:        0 bytes
  2505 ;; Hardware stack levels used: 1
  2506 ;; Hardware stack levels required when called: 3
  2507 ;; This function calls:
  2508 ;;		Nothing
  2509 ;; This function is called by:
  2510 ;;		_main
  2511 ;; This function uses a non-reentrant model
  2512 ;;
  2513                           
  2514     00F8                     _PerformSWTimer:	
  2515                           ;psect for function _PerformSWTimer
  2516                           
  2517     00F8                     l871:	
  2518                           ;incstack = 0
  2519                           ; Regs used in _PerformSWTimer: [wreg+status,2+status,0]
  2520                           
  2521                           
  2522                           ;main.c: 49:   if (0 != SwTimer1_u16) SwTimer1_u16--;
  2523     00F8  0872               	movf	_SwTimer1_u16,w
  2524     00F9  0473               	iorwf	_SwTimer1_u16+1,w
  2525     00FA  1903               	btfsc	3,2
  2526     00FB  28FD               	goto	u41
  2527     00FC  28FE               	goto	u40
  2528     00FD                     u41:
  2529     00FD  2902               	goto	l875
  2530     00FE                     u40:
  2531     00FE                     l873:
  2532     00FE  3001               	movlw	1
  2533     00FF  02F2               	subwf	_SwTimer1_u16,f
  2534     0100  3000               	movlw	0
  2535     0101  3BF3               	subwfb	_SwTimer1_u16+1,f
  2536     0102                     l875:
  2537                           
  2538                           ;main.c: 50:   if (0 != SwTimer2_u16) SwTimer2_u16--;
  2539     0102  0870               	movf	_SwTimer2_u16,w
  2540     0103  0471               	iorwf	_SwTimer2_u16+1,w
  2541     0104  1903               	btfsc	3,2
  2542     0105  2907               	goto	u51
  2543     0106  2908               	goto	u50
  2544     0107                     u51:
  2545     0107  290C               	goto	l214
  2546     0108                     u50:
  2547     0108                     l877:
  2548     0108  3001               	movlw	1
  2549     0109  02F0               	subwf	_SwTimer2_u16,f
  2550     010A  3000               	movlw	0
  2551     010B  3BF1               	subwfb	_SwTimer2_u16+1,f
  2552     010C                     l214:
  2553     010C  0008               	return
  2554     010D                     __end_of_PerformSWTimer:
  2555                           
  2556                           	psect	text9
  2557     0028                     __ptext9:	
  2558 ;; *************** function _PerformMainFSM *****************
  2559 ;; Defined at:
  2560 ;;		line 80 in file "main.c"
  2561 ;; Parameters:    Size  Location     Type
  2562 ;;		None
  2563 ;; Auto vars:     Size  Location     Type
  2564 ;;		None
  2565 ;; Return value:  Size  Location     Type
  2566 ;;                  1    wreg      void 
  2567 ;; Registers used:
  2568 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2569 ;; Tracked objects:
  2570 ;;		On entry : 0/0
  2571 ;;		On exit  : 0/0
  2572 ;;		Unchanged: 0/0
  2573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2574 ;;      Params:         0       0       0       0
  2575 ;;      Locals:         0       0       0       0
  2576 ;;      Temps:          2       0       0       0
  2577 ;;      Totals:         2       0       0       0
  2578 ;;Total ram usage:        2 bytes
  2579 ;; Hardware stack levels used: 1
  2580 ;; Hardware stack levels required when called: 5
  2581 ;; This function calls:
  2582 ;;		_HandlePowerOff
  2583 ;; This function is called by:
  2584 ;;		_main
  2585 ;; This function uses a non-reentrant model
  2586 ;;
  2587                           
  2588     0028                     _PerformMainFSM:	
  2589                           ;psect for function _PerformMainFSM
  2590                           
  2591     0028                     l879:	
  2592                           ;incstack = 0
  2593                           ; Regs used in _PerformMainFSM: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2594                           
  2595                           
  2596                           ;main.c: 82:   switch (MainFSM)
  2597     0028  2871               	goto	l915
  2598     0029                     l881:
  2599                           
  2600                           ;main.c: 85:       if (0!= MinOnCycles_u08)
  2601     0029  087C               	movf	_MinOnCycles_u08,w
  2602     002A  1903               	btfsc	3,2
  2603     002B  282D               	goto	u61
  2604     002C  282E               	goto	u60
  2605     002D                     u61:
  2606     002D  2830               	goto	l885
  2607     002E                     u60:
  2608     002E                     l883:
  2609                           
  2610                           ;main.c: 86:         MinOnCycles_u08--;
  2611     002E  3001               	movlw	1
  2612     002F  02FC               	subwf	_MinOnCycles_u08,f
  2613     0030                     l885:
  2614                           
  2615                           ;main.c: 87:       {SwTimer1_u16=2000u;};
  2616     0030  30D0               	movlw	208
  2617     0031  00F2               	movwf	_SwTimer1_u16
  2618     0032  3007               	movlw	7
  2619     0033  00F3               	movwf	_SwTimer1_u16+1
  2620     0034                     l887:
  2621                           
  2622                           ;main.c: 88:       MainFSM = Main_WaitOffTime;
  2623     0034  3001               	movlw	1
  2624     0035  00F6               	movwf	_MainFSM
  2625                           
  2626                           ;main.c: 89:       break;
  2627     0036  288A               	goto	l242
  2628     0037                     l889:
  2629                           
  2630                           ;main.c: 92:       HandlePowerOff();
  2631     0037  3180  208B  3180   	fcall	_HandlePowerOff
  2632     003A                     l891:
  2633                           
  2634                           ;main.c: 93:       if (0==SwTimer1_u16)
  2635     003A  0872               	movf	_SwTimer1_u16,w
  2636     003B  0473               	iorwf	_SwTimer1_u16+1,w
  2637     003C  1D03               	btfss	3,2
  2638     003D  283F               	goto	u71
  2639     003E  2840               	goto	u70
  2640     003F                     u71:
  2641     003F  288A               	goto	l242
  2642     0040                     u70:
  2643     0040                     l227:	
  2644                           ;main.c: 94:       {;main.c: 95:         do { LATAbits.LATA4 = 1; } while(0);
  2645                           
  2646     0040  0140               	movlb	0	; select bank0
  2647     0041  1618               	bsf	24,4	;volatile
  2648     0042                     l893:
  2649                           
  2650                           ;main.c: 96:         {SwTimer1_u16=40u;};
  2651     0042  3028               	movlw	40
  2652     0043  00F2               	movwf	_SwTimer1_u16
  2653     0044  3000               	movlw	0
  2654     0045  00F3               	movwf	_SwTimer1_u16+1
  2655     0046                     l895:
  2656                           
  2657                           ;main.c: 97:         MainFSM = Main_GreenIsOn;
  2658     0046  3002               	movlw	2
  2659     0047  00F6               	movwf	_MainFSM
  2660     0048  288A               	goto	l242
  2661     0049                     l897:
  2662                           
  2663                           ;main.c: 102:       if (0==SwTimer1_u16)
  2664     0049  0872               	movf	_SwTimer1_u16,w
  2665     004A  0473               	iorwf	_SwTimer1_u16+1,w
  2666     004B  1D03               	btfss	3,2
  2667     004C  284E               	goto	u81
  2668     004D  284F               	goto	u80
  2669     004E                     u81:
  2670     004E  288A               	goto	l242
  2671     004F                     u80:
  2672     004F                     l231:	
  2673                           ;main.c: 103:       {;main.c: 104:         do { LATAbits.LATA4 = 0; } while(0);
  2674                           
  2675     004F  0140               	movlb	0	; select bank0
  2676     0050  1218               	bcf	24,4	;volatile
  2677     0051                     l899:
  2678                           
  2679                           ;main.c: 105:         {SwTimer1_u16=100u;};
  2680     0051  3064               	movlw	100
  2681     0052  00F2               	movwf	_SwTimer1_u16
  2682     0053  3000               	movlw	0
  2683     0054  00F3               	movwf	_SwTimer1_u16+1
  2684     0055                     l901:
  2685                           
  2686                           ;main.c: 106:         MainFSM = Main_WaitBetweenGreenAndBlue;
  2687     0055  3003               	movlw	3
  2688     0056  00F6               	movwf	_MainFSM
  2689     0057  288A               	goto	l242
  2690     0058                     l903:
  2691                           
  2692                           ;main.c: 111:       if (0==SwTimer1_u16)
  2693     0058  0872               	movf	_SwTimer1_u16,w
  2694     0059  0473               	iorwf	_SwTimer1_u16+1,w
  2695     005A  1D03               	btfss	3,2
  2696     005B  285D               	goto	u91
  2697     005C  285E               	goto	u90
  2698     005D                     u91:
  2699     005D  288A               	goto	l242
  2700     005E                     u90:
  2701     005E                     l235:	
  2702                           ;main.c: 112:       {;main.c: 113:         do { LATAbits.LATA5 = 1; } while(0);
  2703                           
  2704     005E  0140               	movlb	0	; select bank0
  2705     005F  1698               	bsf	24,5	;volatile
  2706     0060                     l905:
  2707                           
  2708                           ;main.c: 114:         {SwTimer1_u16=80u;};
  2709     0060  3050               	movlw	80
  2710     0061  00F2               	movwf	_SwTimer1_u16
  2711     0062  3000               	movlw	0
  2712     0063  00F3               	movwf	_SwTimer1_u16+1
  2713     0064                     l907:
  2714                           
  2715                           ;main.c: 115:         MainFSM = Main_BlueIsOn;
  2716     0064  3004               	movlw	4
  2717     0065  00F6               	movwf	_MainFSM
  2718     0066  288A               	goto	l242
  2719     0067                     l909:
  2720                           
  2721                           ;main.c: 120:       if (0==SwTimer1_u16)
  2722     0067  0872               	movf	_SwTimer1_u16,w
  2723     0068  0473               	iorwf	_SwTimer1_u16+1,w
  2724     0069  1D03               	btfss	3,2
  2725     006A  286C               	goto	u101
  2726     006B  286D               	goto	u100
  2727     006C                     u101:
  2728     006C  288A               	goto	l242
  2729     006D                     u100:
  2730     006D                     l239:	
  2731                           ;main.c: 121:       {;main.c: 122:         do { LATAbits.LATA5 = 0; } while(0);
  2732                           
  2733     006D  0140               	movlb	0	; select bank0
  2734     006E  1298               	bcf	24,5	;volatile
  2735     006F                     l911:
  2736                           
  2737                           ;main.c: 123:         MainFSM = Main_Init;
  2738     006F  01F6               	clrf	_MainFSM
  2739     0070  288A               	goto	l242
  2740     0071                     l915:
  2741     0071  0876               	movf	_MainFSM,w
  2742     0072  00FA               	movwf	??_PerformMainFSM
  2743     0073  01FB               	clrf	??_PerformMainFSM+1
  2744                           
  2745                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2746                           ; Switch size 1, requested type "simple"
  2747                           ; Number of cases is 1, Range of values is 0 to 0
  2748                           ; switch strategies available:
  2749                           ; Name         Instructions Cycles
  2750                           ; simple_byte            4     3 (average)
  2751                           ; direct_byte            8     6 (fixed)
  2752                           ; jumptable            260     6 (fixed)
  2753                           ;	Chosen strategy is simple_byte
  2754     0074  087B               	movf	??_PerformMainFSM+1,w
  2755     0075  3A00               	xorlw	0	; case 0
  2756     0076  1903               	skipnz
  2757     0077  2879               	goto	l1085
  2758     0078  286F               	goto	l911
  2759     0079                     l1085:
  2760                           
  2761                           ; Switch size 1, requested type "simple"
  2762                           ; Number of cases is 5, Range of values is 0 to 4
  2763                           ; switch strategies available:
  2764                           ; Name         Instructions Cycles
  2765                           ; direct_byte           16     6 (fixed)
  2766                           ; simple_byte           16     9 (average)
  2767                           ; jumptable            260     6 (fixed)
  2768                           ;	Chosen strategy is simple_byte
  2769     0079  087A               	movf	??_PerformMainFSM,w
  2770     007A  3A00               	xorlw	0	; case 0
  2771     007B  1903               	skipnz
  2772     007C  2829               	goto	l881
  2773     007D  3A01               	xorlw	1	; case 1
  2774     007E  1903               	skipnz
  2775     007F  2837               	goto	l889
  2776     0080  3A03               	xorlw	3	; case 2
  2777     0081  1903               	skipnz
  2778     0082  2849               	goto	l897
  2779     0083  3A01               	xorlw	1	; case 3
  2780     0084  1903               	skipnz
  2781     0085  2858               	goto	l903
  2782     0086  3A07               	xorlw	7	; case 4
  2783     0087  1903               	skipnz
  2784     0088  2867               	goto	l909
  2785     0089  286F               	goto	l911
  2786     008A                     l242:
  2787     008A  0008               	return
  2788     008B                     __end_of_PerformMainFSM:
  2789                           
  2790                           	psect	text10
  2791     008B                     __ptext10:	
  2792 ;; *************** function _HandlePowerOff *****************
  2793 ;; Defined at:
  2794 ;;		line 54 in file "main.c"
  2795 ;; Parameters:    Size  Location     Type
  2796 ;;		None
  2797 ;; Auto vars:     Size  Location     Type
  2798 ;;		None
  2799 ;; Return value:  Size  Location     Type
  2800 ;;                  1    wreg      void 
  2801 ;; Registers used:
  2802 ;;		wreg, status,2, status,0, pclath, cstack
  2803 ;; Tracked objects:
  2804 ;;		On entry : 0/0
  2805 ;;		On exit  : 0/0
  2806 ;;		Unchanged: 0/0
  2807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2808 ;;      Params:         0       0       0       0
  2809 ;;      Locals:         0       0       0       0
  2810 ;;      Temps:          0       0       0       0
  2811 ;;      Totals:         0       0       0       0
  2812 ;;Total ram usage:        0 bytes
  2813 ;; Hardware stack levels used: 1
  2814 ;; Hardware stack levels required when called: 4
  2815 ;; This function calls:
  2816 ;;		_TMR0_Start
  2817 ;;		_TMR0_Stop
  2818 ;; This function is called by:
  2819 ;;		_PerformMainFSM
  2820 ;; This function uses a non-reentrant model
  2821 ;;
  2822                           
  2823     008B                     _HandlePowerOff:	
  2824                           ;psect for function _HandlePowerOff
  2825                           
  2826     008B                     l823:	
  2827                           ;incstack = 0
  2828                           ; Regs used in _HandlePowerOff: [wreg+status,2+status,0+pclath+cstack]
  2829                           
  2830                           
  2831                           ;main.c: 56:   if ((0!=PORTAbits.RA2) &&
  2832     008B  0140               	movlb	0	; select bank0
  2833     008C  1D0C               	btfss	12,2	;volatile
  2834     008D  288F               	goto	u11
  2835     008E  2890               	goto	u10
  2836     008F                     u11:
  2837     008F  28AE               	goto	l218
  2838     0090                     u10:
  2839     0090                     l825:
  2840     0090  087C               	movf	_MinOnCycles_u08,w
  2841     0091  1D03               	btfss	3,2
  2842     0092  2894               	goto	u21
  2843     0093  2895               	goto	u20
  2844     0094                     u21:
  2845     0094  28AE               	goto	l218
  2846     0095                     u20:
  2847     0095                     l827:
  2848                           
  2849                           ;main.c: 58:   {;main.c: 60:     TMR0_Stop();
  2850     0095  3181  215E  3180   	fcall	_TMR0_Stop
  2851     0098                     l829:
  2852                           
  2853                           ;main.c: 61:     GIE = 0;
  2854     0098  138B               	bcf	11,7	;volatile
  2855     0099                     l831:
  2856                           
  2857                           ;main.c: 62:     PORTA;
  2858     0099  0140               	movlb	0	; select bank0
  2859     009A  080C               	movf	12,w	;volatile
  2860     009B                     l833:
  2861                           
  2862                           ;main.c: 63:     IOCAF = 0;
  2863     009B  017E               	movlb	62	; select bank62
  2864     009C  01BF               	clrf	63	;volatile
  2865     009D                     l835:
  2866                           
  2867                           ;main.c: 64:     IOCAN2 = 1;
  2868     009D  153E               	bsf	62,2	;volatile
  2869     009E                     l837:
  2870                           
  2871                           ;main.c: 65:     IOCIE = 1;
  2872     009E  014E               	movlb	14	; select bank14
  2873     009F  1616               	bsf	22,4	;volatile
  2874     00A0  0063               	sleep	;# 
  2875     00A1                     l839:
  2876                           
  2877                           ;main.c: 67:     __nop();
  2878     00A1  0000               	nop
  2879     00A2                     l841:
  2880                           
  2881                           ;main.c: 70:     IOCAN2 = 0;
  2882     00A2  017E               	movlb	62	; select bank62
  2883     00A3  113E               	bcf	62,2	;volatile
  2884     00A4                     l843:
  2885                           
  2886                           ;main.c: 71:     IOCIE = 0;
  2887     00A4  014E               	movlb	14	; select bank14
  2888     00A5  1216               	bcf	22,4	;volatile
  2889     00A6                     l845:
  2890                           
  2891                           ;main.c: 72:     IOCAF = 0;
  2892     00A6  017E               	movlb	62	; select bank62
  2893     00A7  01BF               	clrf	63	;volatile
  2894     00A8                     l847:
  2895                           
  2896                           ;main.c: 73:     GIE = 1;
  2897     00A8  178B               	bsf	11,7	;volatile
  2898     00A9                     l849:
  2899                           
  2900                           ;main.c: 74:     TMR0_Start();
  2901     00A9  3181  2161  3180   	fcall	_TMR0_Start
  2902     00AC                     l851:
  2903                           
  2904                           ;main.c: 75:     MinOnCycles_u08 = 3u;
  2905     00AC  3003               	movlw	3
  2906     00AD  00FC               	movwf	_MinOnCycles_u08
  2907     00AE                     l218:
  2908     00AE  0008               	return
  2909     00AF                     __end_of_HandlePowerOff:
  2910                           
  2911                           	psect	text11
  2912     015E                     __ptext11:	
  2913 ;; *************** function _TMR0_Stop *****************
  2914 ;; Defined at:
  2915 ;;		line 99 in file "mcc_generated_files/timer/src/tmr0.c"
  2916 ;; Parameters:    Size  Location     Type
  2917 ;;		None
  2918 ;; Auto vars:     Size  Location     Type
  2919 ;;		None
  2920 ;; Return value:  Size  Location     Type
  2921 ;;                  1    wreg      void 
  2922 ;; Registers used:
  2923 ;;		None
  2924 ;; Tracked objects:
  2925 ;;		On entry : 0/0
  2926 ;;		On exit  : 0/0
  2927 ;;		Unchanged: 0/0
  2928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2929 ;;      Params:         0       0       0       0
  2930 ;;      Locals:         0       0       0       0
  2931 ;;      Temps:          0       0       0       0
  2932 ;;      Totals:         0       0       0       0
  2933 ;;Total ram usage:        0 bytes
  2934 ;; Hardware stack levels used: 1
  2935 ;; Hardware stack levels required when called: 3
  2936 ;; This function calls:
  2937 ;;		Nothing
  2938 ;; This function is called by:
  2939 ;;		_HandlePowerOff
  2940 ;; This function uses a non-reentrant model
  2941 ;;
  2942                           
  2943     015E                     _TMR0_Stop:	
  2944                           ;psect for function _TMR0_Stop
  2945                           
  2946     015E                     l781:	
  2947                           ;incstack = 0
  2948                           ; Regs used in _TMR0_Stop: []
  2949                           
  2950                           
  2951                           ;mcc_generated_files/timer/src/tmr0.c: 101:     T0CON0bits.T0EN = 0;
  2952     015E  014B               	movlb	11	; select bank11
  2953     015F  139E               	bcf	30,7	;volatile
  2954     0160                     l145:
  2955     0160  0008               	return
  2956     0161                     __end_of_TMR0_Stop:
  2957                           
  2958                           	psect	text12
  2959     0161                     __ptext12:	
  2960 ;; *************** function _TMR0_Start *****************
  2961 ;; Defined at:
  2962 ;;		line 94 in file "mcc_generated_files/timer/src/tmr0.c"
  2963 ;; Parameters:    Size  Location     Type
  2964 ;;		None
  2965 ;; Auto vars:     Size  Location     Type
  2966 ;;		None
  2967 ;; Return value:  Size  Location     Type
  2968 ;;                  1    wreg      void 
  2969 ;; Registers used:
  2970 ;;		None
  2971 ;; Tracked objects:
  2972 ;;		On entry : 0/0
  2973 ;;		On exit  : 0/0
  2974 ;;		Unchanged: 0/0
  2975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2976 ;;      Params:         0       0       0       0
  2977 ;;      Locals:         0       0       0       0
  2978 ;;      Temps:          0       0       0       0
  2979 ;;      Totals:         0       0       0       0
  2980 ;;Total ram usage:        0 bytes
  2981 ;; Hardware stack levels used: 1
  2982 ;; Hardware stack levels required when called: 3
  2983 ;; This function calls:
  2984 ;;		Nothing
  2985 ;; This function is called by:
  2986 ;;		_HandlePowerOff
  2987 ;;		_main
  2988 ;; This function uses a non-reentrant model
  2989 ;;
  2990                           
  2991     0161                     _TMR0_Start:	
  2992                           ;psect for function _TMR0_Start
  2993                           
  2994     0161                     l779:	
  2995                           ;incstack = 0
  2996                           ; Regs used in _TMR0_Start: []
  2997                           
  2998                           
  2999                           ;mcc_generated_files/timer/src/tmr0.c: 96:     T0CON0bits.T0EN = 1;
  3000     0161  014B               	movlb	11	; select bank11
  3001     0162  179E               	bsf	30,7	;volatile
  3002     0163                     l142:
  3003     0163  0008               	return
  3004     0164                     __end_of_TMR0_Start:
  3005                           
  3006                           	psect	intentry
  3007     0004                     __pintentry:	
  3008 ;; *************** function _INTERRUPT_InterruptManager *****************
  3009 ;; Defined at:
  3010 ;;		line 57 in file "mcc_generated_files/system/src/interrupt.c"
  3011 ;; Parameters:    Size  Location     Type
  3012 ;;		None
  3013 ;; Auto vars:     Size  Location     Type
  3014 ;;		None
  3015 ;; Return value:  Size  Location     Type
  3016 ;;                  1    wreg      void 
  3017 ;; Registers used:
  3018 ;;		wreg, status,2, status,0, pclath, cstack
  3019 ;; Tracked objects:
  3020 ;;		On entry : 0/0
  3021 ;;		On exit  : 0/0
  3022 ;;		Unchanged: 0/0
  3023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3024 ;;      Params:         0       0       0       0
  3025 ;;      Locals:         0       0       0       0
  3026 ;;      Temps:          0       0       0       0
  3027 ;;      Totals:         0       0       0       0
  3028 ;;Total ram usage:        0 bytes
  3029 ;; Hardware stack levels used: 1
  3030 ;; Hardware stack levels required when called: 2
  3031 ;; This function calls:
  3032 ;;		_TMR0_ISR
  3033 ;; This function is called by:
  3034 ;;		Interrupt level 1
  3035 ;; This function uses a non-reentrant model
  3036 ;;
  3037                           
  3038     0004                     _INTERRUPT_InterruptManager:
  3039                           
  3040                           ;incstack = 0
  3041     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  3042                           
  3043                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  3044     0005  3180               	pagesel	$
  3045     0006                     i1l1041:
  3046                           
  3047                           ;mcc_generated_files/system/src/interrupt.c: 60:     if(INTCONbits.PEIE == 1)
  3048     0006  1F0B               	btfss	11,6	;volatile
  3049     0007  2809               	goto	u18_21
  3050     0008  280A               	goto	u18_20
  3051     0009                     u18_21:
  3052     0009  2816               	goto	i1l41
  3053     000A                     u18_20:
  3054     000A                     i1l1043:
  3055                           
  3056                           ;mcc_generated_files/system/src/interrupt.c: 61:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 62:         if(PIE0bits.TMR0IE == 1 && PIR0bits.TMR0IF == 1)
  3057     000A  014E               	movlb	14	; select bank14
  3058     000B  1E96               	btfss	22,5	;volatile
  3059     000C  280E               	goto	u19_21
  3060     000D  280F               	goto	u19_20
  3061     000E                     u19_21:
  3062     000E  2816               	goto	i1l41
  3063     000F                     u19_20:
  3064     000F                     i1l1045:
  3065     000F  1E8C               	btfss	12,5	;volatile
  3066     0010  2812               	goto	u20_21
  3067     0011  2813               	goto	u20_20
  3068     0012                     u20_21:
  3069     0012  2816               	goto	i1l41
  3070     0013                     u20_20:
  3071     0013                     i1l1047:
  3072                           
  3073                           ;mcc_generated_files/system/src/interrupt.c: 63:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 64:             TMR0_ISR();
  3074     0013  3181  210D  3180   	fcall	_TMR0_ISR
  3075     0016                     i1l41:	
  3076                           ;mcc_generated_files/system/src/interrupt.c: 65:         }
  3077                           
  3078     0016  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3079     0017  0009               	retfie
  3080     0018                     __end_of_INTERRUPT_InterruptManager:
  3081                           
  3082                           	psect	text14
  3083     010D                     __ptext14:	
  3084 ;; *************** function _TMR0_ISR *****************
  3085 ;; Defined at:
  3086 ;;		line 141 in file "mcc_generated_files/timer/src/tmr0.c"
  3087 ;; Parameters:    Size  Location     Type
  3088 ;;		None
  3089 ;; Auto vars:     Size  Location     Type
  3090 ;;		None
  3091 ;; Return value:  Size  Location     Type
  3092 ;;                  1    wreg      void 
  3093 ;; Registers used:
  3094 ;;		wreg, status,2, status,0, pclath, cstack
  3095 ;; Tracked objects:
  3096 ;;		On entry : 0/0
  3097 ;;		On exit  : 0/0
  3098 ;;		Unchanged: 0/0
  3099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3100 ;;      Params:         0       0       0       0
  3101 ;;      Locals:         0       0       0       0
  3102 ;;      Temps:          0       0       0       0
  3103 ;;      Totals:         0       0       0       0
  3104 ;;Total ram usage:        0 bytes
  3105 ;; Hardware stack levels used: 1
  3106 ;; Hardware stack levels required when called: 1
  3107 ;; This function calls:
  3108 ;;		NULL
  3109 ;;		_MyTmr0
  3110 ;;		_TMR0_DefaultOverflowCallback
  3111 ;; This function is called by:
  3112 ;;		_INTERRUPT_InterruptManager
  3113 ;; This function uses a non-reentrant model
  3114 ;;
  3115                           
  3116     010D                     _TMR0_ISR:	
  3117                           ;psect for function _TMR0_ISR
  3118                           
  3119     010D                     i1l1023:	
  3120                           ;incstack = 0
  3121                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  3122                           
  3123                           
  3124                           ;mcc_generated_files/timer/src/tmr0.c: 143:     TMR0H = (uint8_t)(tmr0PeriodCount >> 8);
  3125     010D  0875               	movf	_tmr0PeriodCount+1,w	;volatile
  3126     010E  014B               	movlb	11	; select bank11
  3127     010F  009D               	movwf	29	;volatile
  3128     0110                     i1l1025:
  3129                           
  3130                           ;mcc_generated_files/timer/src/tmr0.c: 144:     TMR0L = (uint8_t)(tmr0PeriodCount);
  3131     0110  0874               	movf	_tmr0PeriodCount,w	;volatile
  3132     0111  009C               	movwf	28	;volatile
  3133     0112                     i1l1027:
  3134                           
  3135                           ;mcc_generated_files/timer/src/tmr0.c: 146:     if(((void*)0) != TMR0_OverflowCallback)
  3136     0112  0140               	movlb	0	; select bank0
  3137     0113  0820               	movf	_TMR0_OverflowCallback,w
  3138     0114  0421               	iorwf	_TMR0_OverflowCallback+1,w
  3139     0115  1903               	btfsc	3,2
  3140     0116  2918               	goto	u17_21
  3141     0117  2919               	goto	u17_20
  3142     0118                     u17_21:
  3143     0118  291E               	goto	i1l1031
  3144     0119                     u17_20:
  3145     0119                     i1l1029:
  3146                           
  3147                           ;mcc_generated_files/timer/src/tmr0.c: 147:     {;mcc_generated_files/timer/src/tmr0.c: 
      +                          148:         TMR0_OverflowCallback();
  3148     0119  0821               	movf	_TMR0_OverflowCallback+1,w
  3149     011A  008A               	movwf	10
  3150     011B  0820               	movf	_TMR0_OverflowCallback,w
  3151     011C  000A               	callw
  3152     011D  3181               	pagesel	$
  3153     011E                     i1l1031:
  3154                           
  3155                           ;mcc_generated_files/timer/src/tmr0.c: 150:     PIR0bits.TMR0IF = 0;
  3156     011E  014E               	movlb	14	; select bank14
  3157     011F  128C               	bcf	12,5	;volatile
  3158     0120                     i1l164:
  3159     0120  0008               	return
  3160     0121                     __end_of_TMR0_ISR:
  3161                           
  3162                           	psect	text15
  3163     0164                     __ptext15:	
  3164 ;; *************** function _MyTmr0 *****************
  3165 ;; Defined at:
  3166 ;;		line 38 in file "main.c"
  3167 ;; Parameters:    Size  Location     Type
  3168 ;;		None
  3169 ;; Auto vars:     Size  Location     Type
  3170 ;;		None
  3171 ;; Return value:  Size  Location     Type
  3172 ;;                  1    wreg      void 
  3173 ;; Registers used:
  3174 ;;		None
  3175 ;; Tracked objects:
  3176 ;;		On entry : 0/0
  3177 ;;		On exit  : 0/0
  3178 ;;		Unchanged: 0/0
  3179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3180 ;;      Params:         0       0       0       0
  3181 ;;      Locals:         0       0       0       0
  3182 ;;      Temps:          0       0       0       0
  3183 ;;      Totals:         0       0       0       0
  3184 ;;Total ram usage:        0 bytes
  3185 ;; Hardware stack levels used: 1
  3186 ;; This function calls:
  3187 ;;		Nothing
  3188 ;; This function is called by:
  3189 ;;		_main
  3190 ;;		_TMR0_ISR
  3191 ;; This function uses a non-reentrant model
  3192 ;;
  3193                           
  3194     0164                     _MyTmr0:	
  3195                           ;psect for function _MyTmr0
  3196                           
  3197     0164                     i1l1021:	
  3198                           ;incstack = 0
  3199                           ; Regs used in _MyTmr0: []
  3200                           
  3201                           
  3202                           ;main.c: 40:   TimerFlag_u08 = 1;
  3203     0164  3001               	movlw	1
  3204     0165  00F7               	movwf	_TimerFlag_u08
  3205     0166                     i1l209:
  3206     0166  0008               	return
  3207     0167                     __end_of_MyTmr0:
  3208                           
  3209                           	psect	text16
  3210     0168                     __ptext16:	
  3211 ;; *************** function _TMR0_DefaultOverflowCallback *****************
  3212 ;; Defined at:
  3213 ;;		line 158 in file "mcc_generated_files/timer/src/tmr0.c"
  3214 ;; Parameters:    Size  Location     Type
  3215 ;;		None
  3216 ;; Auto vars:     Size  Location     Type
  3217 ;;		None
  3218 ;; Return value:  Size  Location     Type
  3219 ;;                  1    wreg      void 
  3220 ;; Registers used:
  3221 ;;		None
  3222 ;; Tracked objects:
  3223 ;;		On entry : 0/0
  3224 ;;		On exit  : 0/0
  3225 ;;		Unchanged: 0/0
  3226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3227 ;;      Params:         0       0       0       0
  3228 ;;      Locals:         0       0       0       0
  3229 ;;      Temps:          0       0       0       0
  3230 ;;      Totals:         0       0       0       0
  3231 ;;Total ram usage:        0 bytes
  3232 ;; Hardware stack levels used: 1
  3233 ;; This function calls:
  3234 ;;		Nothing
  3235 ;; This function is called by:
  3236 ;;		_TMR0_Initialize
  3237 ;;		_TMR0_ISR
  3238 ;; This function uses a non-reentrant model
  3239 ;;
  3240                           
  3241     0168                     _TMR0_DefaultOverflowCallback:	
  3242                           ;psect for function _TMR0_DefaultOverflowCallback
  3243                           
  3244     0168                     i1l170:	
  3245                           ;incstack = 0
  3246                           ; Regs used in _TMR0_DefaultOverflowCallback: []
  3247                           
  3248     0168  0008               	return
  3249     0169                     __end_of_TMR0_DefaultOverflowCallback:
  3250     0000                     ___latbits      equ	0
  3251     007E                     btemp           set	126	;btemp
  3252     007E                     int$flags       set	126
  3253     007E                     wtemp0          set	126
  3254                           
  3255                           	psect	config
  3256                           
  3257                           ;Config register CONFIG1 @ 0x8007
  3258                           ;	External Oscillator mode selection bits
  3259                           ;	FEXTOSC = OFF, Oscillator not enabled
  3260                           ;	Power-up default value for COSC bits
  3261                           ;	RSTOSC = HFINT32, HFINTOSC with OSCFRQ= 32 MHz and CDIV = 1:1
  3262                           ;	Clock Out Enable bit
  3263                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
  3264                           ;	Clock Switch Enable bit
  3265                           ;	CSWEN = OFF, The NOSC and NDIV bits cannot be changed by user software
  3266                           ;	Fail-Safe Clock Monitor Enable bit
  3267                           ;	FCMEN = OFF, FSCM timer disabled
  3268     8007                     	org	32775
  3269     8007  178C               	dw	6028
  3270                           
  3271                           ;Config register CONFIG2 @ 0x8008
  3272                           ;	Master Clear Enable bit
  3273                           ;	MCLRE = ON, MCLR pin is Master Clear function
  3274                           ;	Power-up Timer Enable bit
  3275                           ;	PWRTE = 0x1, unprogrammed default
  3276                           ;	Low-Power BOR enable bit
  3277                           ;	LPBOREN = OFF, ULPBOR disabled
  3278                           ;	Brown-out reset enable bits
  3279                           ;	BOREN = OFF, Brown-out reset disabled
  3280                           ;	Brown-out Reset Voltage Selection
  3281                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
  3282                           ;	Zero-cross detect disable
  3283                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
  3284                           ;	Peripheral Pin Select one-way control
  3285                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
  3286                           ;	Stack Overflow/Underflow Reset Enable bit
  3287                           ;	STVREN = OFF, Stack Overflow or Underflow will not cause a reset
  3288     8008                     	org	32776
  3289     8008  2F3F               	dw	12095
  3290                           
  3291                           ;Config register CONFIG3 @ 0x8009
  3292                           ;	WDT Period Select bits
  3293                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3294                           ;	WDT operating mode
  3295                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
  3296                           ;	WDT Window Select bits
  3297                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  3298                           ;	WDT input clock selector
  3299                           ;	WDTCCS = SC, Software Control
  3300     8009                     	org	32777
  3301     8009  3F9F               	dw	16287
  3302                           
  3303                           ;Config register CONFIG4 @ 0x800A
  3304                           ;	Boot Block Size Selection bits
  3305                           ;	BBSIZE = BB512, 512 words boot block size
  3306                           ;	Boot Block Enable bit
  3307                           ;	BBEN = OFF, Boot Block disabled
  3308                           ;	SAF Enable bit
  3309                           ;	SAFEN = OFF, SAF disabled
  3310                           ;	Application Block Write Protection bit
  3311                           ;	WRTAPP = OFF, Application Block not write protected
  3312                           ;	Boot Block Write Protection bit
  3313                           ;	WRTB = OFF, Boot Block not write protected
  3314                           ;	Configuration Register Write Protection bit
  3315                           ;	WRTC = OFF, Configuration Register not write protected
  3316                           ;	Storage Area Flash Write Protection bit
  3317                           ;	WRTSAF = OFF, SAF not write protected
  3318                           ;	Low Voltage Programming Enable bit
  3319                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
  3320     800A                     	org	32778
  3321     800A  3FFF               	dw	16383
  3322                           
  3323                           ;Config register CONFIG5 @ 0x800B
  3324                           ;	UserNVM Program memory code protection bit
  3325                           ;	CP = OFF, UserNVM code protection disabled
  3326     800B                     	org	32779
  3327     800B  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    22
    Data        1
    BSS         8
    Persistent  36
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2      13
    BANK0            80      0       2
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), NULL(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), 

    MainTimer$CounterGet	PTR FTN()unsigned long  size(2) Largest target is 4
		 -> TMR0_CounterGet(), 

    MainTimer$CounterSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> TMR0_CounterSet(), 

    MainTimer$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Deinitialize(), 

    MainTimer$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Initialize(), 

    MainTimer$MaxCountGet	PTR FTN()unsigned long  size(2) Largest target is 4
		 -> TMR0_MaxCountGet(), 

    MainTimer$PeriodGet	PTR FTN()unsigned long  size(2) Largest target is 4
		 -> TMR0_PeriodGet(), 

    MainTimer$PeriodSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> TMR0_PeriodSet(), 

    MainTimer$Start	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Start(), 

    MainTimer$Stop	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Stop(), 

    MainTimer$Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    MainTimer$TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> TMR0_OverflowCallbackRegister(), 

    S155$9$0	PTR FTN()void  size(2) Largest target is 1
		 -> MyTmr0(), 

    S155TIMER_INTERFACE$CounterGet	PTR FTN()unsigned long  size(2) Largest target is 4
		 -> TMR0_CounterGet(), 

    S155TIMER_INTERFACE$CounterSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> TMR0_CounterSet(), 

    S155TIMER_INTERFACE$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Deinitialize(), 

    S155TIMER_INTERFACE$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Initialize(), 

    S155TIMER_INTERFACE$MaxCountGet	PTR FTN()unsigned long  size(2) Largest target is 4
		 -> TMR0_MaxCountGet(), 

    S155TIMER_INTERFACE$PeriodGet	PTR FTN()unsigned long  size(2) Largest target is 4
		 -> TMR0_PeriodGet(), 

    S155TIMER_INTERFACE$PeriodSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> TMR0_PeriodSet(), 

    S155TIMER_INTERFACE$Start	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Start(), 

    S155TIMER_INTERFACE$Stop	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Stop(), 

    S155TIMER_INTERFACE$Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S155TIMER_INTERFACE$TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> TMR0_OverflowCallbackRegister(), 

    TMR0_OverflowCallback	PTR FTN()void  size(2) Largest target is 1
		 -> MyTmr0(), TMR0_DefaultOverflowCallback(), NULL(), 

    TMR0_OverflowCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> MyTmr0(), 


Critical Paths under _main in COMMON

    _main->_PerformMainFSM
    _main->_TMR0_OverflowCallbackRegister
    _INTERRUPT_Initialize->_INT_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      46
                     _PerformMainFSM
                     _PerformSWTimer
                  _SYSTEM_Initialize
      _TMR0_OverflowCallbackRegister
                         _TMR0_Start
 ---------------------------------------------------------------------------------
 (1) _TMR0_OverflowCallbackRegister                        2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      23
                   _CLOCK_Initialize
               _INTERRUPT_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0      23
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PerformSWTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PerformMainFSM                                       2     2      0       0
                                              0 COMMON     2     2      0
                     _HandlePowerOff
 ---------------------------------------------------------------------------------
 (2) _HandlePowerOff                                       0     0      0       0
                         _TMR0_Start
                          _TMR0_Stop
 ---------------------------------------------------------------------------------
 (3) _TMR0_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0       0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
                                NULL *
                             _MyTmr0 *
       _TMR0_DefaultOverflowCallback *
 ---------------------------------------------------------------------------------
 (6) _TMR0_DefaultOverflowCallback                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _MyTmr0                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (6) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PerformMainFSM
     _HandlePowerOff
       _TMR0_Start
       _TMR0_Stop
   _PerformSWTimer
   _SYSTEM_Initialize
     _CLOCK_Initialize
     _INTERRUPT_Initialize
       _INT_SetInterruptHandler
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
   _TMR0_OverflowCallbackRegister
   _TMR0_Start

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     NULL(Fake) *
     _MyTmr0 *
     _TMR0_DefaultOverflowCallback *

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BIGRAM             240      0       0      0.0%
COMMON              14      2      13     92.9%
BANK0               80      0       2      2.5%
BANK1               80      0       0      0.0%
BANK2               80      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      15      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Sat May 10 12:25:46 2025

                                          l13 0152                                            l32 0149  
                                          l51 015D                                            l65 013F  
                                          l88 0132                                            u10 0090  
                                          u11 008F                                            u20 0095  
                                          u21 0094                                            u40 00FE  
                                          u41 00FD                                            u50 0108  
                                          u51 0107                                            u60 002E  
                                          u61 002D                                            u70 0040  
                                          u71 003F                                            u80 004F  
                                          u81 004E                                            u90 005E  
                                          u91 005D                                           l142 0163  
                                         l214 010C                                           l231 004F  
                                         l136 00F7                                           l145 0160  
                                         l218 00AE                                           l242 008A  
                                         l235 005E                                           l227 0040  
                                         l239 006D                                           l167 0158  
                                         l801 012B                                           l803 012D  
                                         l901 0055                                           l831 0099  
                                         l823 008B                                           l911 006F  
                                         l903 0058                                           l841 00A2  
                                         l833 009B                                           l825 0090  
                                         l905 0060                                           l851 00AC  
                                         l843 00A4                                           l835 009D  
                                         l827 0095                                           l907 0064  
                                         l915 0071                                           l781 015E  
                                         l845 00A6                                           l837 009E  
                                         l829 0098                                           l909 0067  
                                         l847 00A8                                           l839 00A1  
                                         l871 00F8                                           l783 014A  
                                         l849 00A9                                           l881 0029  
                                         l873 00FE                                           l785 014D  
                                         l793 0121                                           l779 0161  
                                         l891 003A                                           l883 002E  
                                         l875 0102                                           l787 014F  
                                         l795 0123                                           l893 0042  
                                         l885 0030                                           l877 0108  
                                         l797 0125                                           l895 0046  
                                         l887 0034                                           l879 0028  
                                         l799 0128                                           l897 0049  
                                         l889 0037                                           l899 0051  
                                         _GIE 005F                                           l999 0159  
                                         u100 006D                                           u101 006C  
                                         u210 00C3                                           u211 00C2  
                             _MinOnCycles_u08 007C                                          l1001 0140  
                                        l1003 0142                                          l1011 00E8  
                                        l1013 00EC                                          l1005 00E2  
                                        l1015 00F1                                          l1007 00E5  
                                        l1017 00F3                                          l1009 00E6  
                                        l1033 0133                                          l1019 00F4  
                                        l1035 0139                                          l1051 00B9  
                                        l1037 013C                                          l1061 00C4  
                                        l1053 00BA                                          l1039 0153  
                                        l1063 00C7                                          l1055 00BB  
                                        l1057 00BE                                          l1049 00AF  
                                        l1059 00C3                                          l1085 0079  
                                        _LATA 0018                                          i1l41 0016  
                                        _WPUA 1F39                                          _main 00AF  
                                        btemp 007E                   _INT_DefaultInterruptHandler 0000  
                                        start 0018               __end_of_INT_SetInterruptHandler 015E  
                     __end_of_TMR0_Initialize 00F8                                         ?_main 007A  
                                       _IOCAF 1F3F                                         _IOCAN 1F3E  
                                       _IOCAP 1F3D                                         _IOCIE 38B4  
                                       i1l209 0166                                         i1l170 0168  
                                       i1l164 0120                                         _OSCEN 0891  
                                       u20_20 0013                                         u20_21 0012  
                                       u17_20 0119                                         _TMR0H 059D  
                                       u17_21 0118                                         _TMR0L 059C  
                                       u18_20 000A                                         u18_21 0009  
                                       u19_20 000F                                         u19_21 000E  
                                       _PORTA 000C                                         _TRISA 0012  
                            __end_of_TMR0_ISR 0121                                   ?_TMR0_Start 007A  
                                       pclath 000A                               _tmr0PeriodCount 0074  
                                       status 0003                                         wtemp0 007E  
                             __initialization 0019                                  __end_of_main 00CC  
                 ?_INTERRUPT_InterruptManager 007A                                        ??_main 007C  
TMR0_OverflowCallbackRegister@callbackHandler 007A                                        _ANSELA 1F38  
                                      _T0CON0 059E                                        _T0CON1 059F  
                                      _IOCAN2 F9F2                                        i1l1021 0164  
                                      i1l1031 011E                                        i1l1023 010D  
                                      i1l1025 0110                                        i1l1041 0006  
                                      i1l1027 0112                                        i1l1043 000A  
                                      i1l1029 0119                                        i1l1045 000F  
                                      i1l1047 0013                                        _ODCONA 1F3A  
                                      _INLVLA 1F3C                                        _OSCFRQ 0893  
                                      _MyTmr0 0164                              ??_PerformSWTimer 007A  
                            ??_PerformMainFSM 007A                             __end_of_TMR0_Stop 0161  
                              _HandlePowerOff 008B                              ?_TMR0_Initialize 007A  
                           ?_CLOCK_Initialize 007A                                  __pdataCOMMON 007C  
                          ??_CLOCK_Initialize 007A       INT_SetInterruptHandler@InterruptHandler 007A  
                           _SYSTEM_Initialize 0133                       __end_of__initialization 0025  
                          ?_SYSTEM_Initialize 007A                        __end_of_HandlePowerOff 00AF  
                              __pcstackCOMMON 007A                           ??_SYSTEM_Initialize 007C  
                                   ?_TMR0_ISR 007A                             __end_of_MainTimer 00E2  
                   __end_of_SYSTEM_Initialize 0140                         _TMR0_OverflowCallback 0020  
                                  __pnvCOMMON 0078                                       ?_MyTmr0 007A  
                                  __pmaintext 00AF                               ?_HandlePowerOff 007A  
                                  ??_TMR0_ISR 007A                                    __pintentry 0004  
                                     _OSCCON1 088D                                       _OSCCON3 088F  
                                     _OSCTUNE 0892                                  ??_TMR0_Start 007A  
                                     _SLRCONA 1F3B                                       _MainFSM 0076  
                          __end_of_TMR0_Start 0164                                       __ptext1 0153  
                                     __ptext2 0133                                       __ptext3 00E2  
                                     __ptext4 0121                                       __ptext5 0140  
                                     __ptext6 0159                                       __ptext7 014A  
                                     __ptext8 00F8                                       __ptext9 0028  
                    ??_PIN_MANAGER_Initialize 007A                       _INT_SetInterruptHandler 0159  
                        end_of_initialization 0025                                     _PORTAbits 000C  
                                   _TMR0_Stop 015E         __end_of_TMR0_OverflowCallbackRegister 0159  
               _TMR0_OverflowCallbackRegister 0153                                _TMR0_PeriodGet 0000  
                              _TMR0_PeriodSet 0000                             _TMR0_Deinitialize 0000  
        __end_of_TMR0_DefaultOverflowCallback 0169                  _TMR0_DefaultOverflowCallback 0168  
                              __end_of_MyTmr0 0167                  __end_of_INTERRUPT_Initialize 014A  
                               __pidataCOMMON 0167                                    ?_TMR0_Stop 007A  
                                   _MainTimer 00CC                     ??_INT_SetInterruptHandler 007C  
                         start_initialization 0019                              ??_HandlePowerOff 007A  
               ?_TMR0_DefaultOverflowCallback 007A                                      ??_MyTmr0 007A  
                                 __pbssCOMMON 0070                                     ___latbits 0000  
              ?_TMR0_OverflowCallbackRegister 007A                                 _TimerFlag_u08 0077  
                                   __pnvBANK0 0020                        _PIN_MANAGER_Initialize 0121  
                ??_INTERRUPT_InterruptManager 007A                                   ??_TMR0_Stop 007A  
                        _INTERRUPT_Initialize 0140                              _CLOCK_Initialize 014A  
                           ??_TMR0_Initialize 007A                                      _LATAbits 0018  
                                    _PIE0bits 0716                                      _PIR0bits 070C  
                                    _TMR0_ISR 010D                ??_TMR0_DefaultOverflowCallback 007A  
                       ?_INTERRUPT_Initialize 007A                                _PerformSWTimer 00F8  
                              _PerformMainFSM 0028                                    _T0CON0bits 059E  
                                    __ptext10 008B                                      __ptext11 015E  
                                    __ptext12 0161                                      __ptext14 010D  
                                    __ptext15 0164                                      __ptext16 0168  
                                _SwTimer1_u16 0072                                  _SwTimer2_u16 0070  
                            _TMR0_MaxCountGet 0000                                      int$flags 007E  
          __end_of_INTERRUPT_InterruptManager 0018                    _INTERRUPT_InterruptManager 0004  
                      __end_of_PerformSWTimer 010D                        __end_of_PerformMainFSM 008B  
                                  _INTCONbits 000B                          _INT_InterruptHandler 0078  
                      ??_INTERRUPT_Initialize 007C                                      intlevel1 0000  
                     ?_PIN_MANAGER_Initialize 007A               ??_TMR0_OverflowCallbackRegister 007C  
                             _TMR0_CounterGet 0000                               _TMR0_CounterSet 0000  
                    ?_INT_SetInterruptHandler 007A                      __end_of_CLOCK_Initialize 0153  
                             ?_PerformSWTimer 007A                                 __pstringtext1 00CC  
                             ?_PerformMainFSM 007A                               _TMR0_Initialize 00E2  
                                  _TMR0_Start 0161                __end_of_PIN_MANAGER_Initialize 0133  
