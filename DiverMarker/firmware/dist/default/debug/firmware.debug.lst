

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Mon Jul 07 10:04:21 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F15313
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,space=0,delta=2,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    29                           	psect	intentry,global,class=CODE,space=0,delta=2
    30                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    34                           	dabs	1,0x7E,2
    35     0000                     
    36                           ; Generated 11/01/2024 GMT
    37                           ; 
    38                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution. Publication is not required when
    52                           ;        this file is used in an embedded application.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC16F15313 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70     0008                     bsr             equ	8
    71     0005                     fsr0h           equ	5
    72     0004                     fsr0l           equ	4
    73     0007                     fsr1h           equ	7
    74     0006                     fsr1l           equ	6
    75     0000                     indf            equ	0
    76     0000                     indf0           equ	0
    77     0001                     indf1           equ	1
    78     000B                     intcon          equ	11
    79     0002                     pc              equ	2
    80     0002                     pcl             equ	2
    81     000A                     pclath          equ	10
    82     0003                     status          equ	3
    83     0009                     wreg            equ	9
    84     0000                     INDF0           equ	0	;# 
    85     0001                     INDF1           equ	1	;# 
    86     0002                     PCL             equ	2	;# 
    87     0003                     STATUS          equ	3	;# 
    88     0004                     FSR0L           equ	4	;# 
    89     0005                     FSR0H           equ	5	;# 
    90     0006                     FSR1L           equ	6	;# 
    91     0007                     FSR1H           equ	7	;# 
    92     0008                     BSR             equ	8	;# 
    93     0009                     WREG            equ	9	;# 
    94     000A                     PCLATH          equ	10	;# 
    95     000B                     INTCON          equ	11	;# 
    96     000C                     PORTA           equ	12	;# 
    97     0012                     TRISA           equ	18	;# 
    98     0018                     LATA            equ	24	;# 
    99     009B                     ADRES           equ	155	;# 
   100     009B                     ADRESL          equ	155	;# 
   101     009C                     ADRESH          equ	156	;# 
   102     009D                     ADCON0          equ	157	;# 
   103     009E                     ADCON1          equ	158	;# 
   104     009F                     ADACT           equ	159	;# 
   105     0119                     RC1REG          equ	281	;# 
   106     0119                     RCREG           equ	281	;# 
   107     0119                     RCREG1          equ	281	;# 
   108     011A                     TX1REG          equ	282	;# 
   109     011A                     TXREG1          equ	282	;# 
   110     011A                     TXREG           equ	282	;# 
   111     011B                     SP1BRG          equ	283	;# 
   112     011B                     SPBRG           equ	283	;# 
   113     011B                     SP1BRGL         equ	283	;# 
   114     011B                     SPBRG1          equ	283	;# 
   115     011B                     SPBRGL          equ	283	;# 
   116     011C                     SP1BRGH         equ	284	;# 
   117     011C                     SPBRGH          equ	284	;# 
   118     011C                     SPBRGH1         equ	284	;# 
   119     011D                     RC1STA          equ	285	;# 
   120     011D                     RCSTA1          equ	285	;# 
   121     011D                     RCSTA           equ	285	;# 
   122     011E                     TX1STA          equ	286	;# 
   123     011E                     TXSTA1          equ	286	;# 
   124     011E                     TXSTA           equ	286	;# 
   125     011F                     BAUD1CON        equ	287	;# 
   126     011F                     BAUDCON1        equ	287	;# 
   127     011F                     BAUDCTL1        equ	287	;# 
   128     011F                     BAUDCON         equ	287	;# 
   129     011F                     BAUDCTL         equ	287	;# 
   130     018C                     SSP1BUF         equ	396	;# 
   131     018D                     SSP1ADD         equ	397	;# 
   132     018E                     SSP1MSK         equ	398	;# 
   133     018F                     SSP1STAT        equ	399	;# 
   134     0190                     SSP1CON1        equ	400	;# 
   135     0191                     SSP1CON2        equ	401	;# 
   136     0192                     SSP1CON3        equ	402	;# 
   137     020C                     TMR1            equ	524	;# 
   138     020C                     TMR1L           equ	524	;# 
   139     020D                     TMR1H           equ	525	;# 
   140     020E                     T1CON           equ	526	;# 
   141     020F                     T1GCON          equ	527	;# 
   142     020F                     PR1             equ	527	;# 
   143     0210                     T1GATE          equ	528	;# 
   144     0210                     TMR1GATE        equ	528	;# 
   145     0211                     T1CLK           equ	529	;# 
   146     0211                     TMR1CLK         equ	529	;# 
   147     028C                     T2TMR           equ	652	;# 
   148     028C                     TMR2            equ	652	;# 
   149     028D                     T2PR            equ	653	;# 
   150     028D                     PR2             equ	653	;# 
   151     028E                     T2CON           equ	654	;# 
   152     028F                     T2HLT           equ	655	;# 
   153     0290                     T2CLKCON        equ	656	;# 
   154     0291                     T2RST           equ	657	;# 
   155     030C                     CCPR1           equ	780	;# 
   156     030C                     CCPR1L          equ	780	;# 
   157     030D                     CCPR1H          equ	781	;# 
   158     030E                     CCP1CON         equ	782	;# 
   159     030F                     CCP1CAP         equ	783	;# 
   160     0310                     CCPR2           equ	784	;# 
   161     0310                     CCPR2L          equ	784	;# 
   162     0311                     CCPR2H          equ	785	;# 
   163     0312                     CCP2CON         equ	786	;# 
   164     0313                     CCP2CAP         equ	787	;# 
   165     0314                     PWM3DC          equ	788	;# 
   166     0314                     PWM3DCL         equ	788	;# 
   167     0315                     PWM3DCH         equ	789	;# 
   168     0316                     PWM3CON         equ	790	;# 
   169     0318                     PWM4DC          equ	792	;# 
   170     0318                     PWM4DCL         equ	792	;# 
   171     0319                     PWM4DCH         equ	793	;# 
   172     031A                     PWM4CON         equ	794	;# 
   173     031C                     PWM5DC          equ	796	;# 
   174     031C                     PWM5DCL         equ	796	;# 
   175     031D                     PWM5DCH         equ	797	;# 
   176     031E                     PWM5CON         equ	798	;# 
   177     038C                     PWM6DC          equ	908	;# 
   178     038C                     PWM6DCL         equ	908	;# 
   179     038D                     PWM6DCH         equ	909	;# 
   180     038E                     PWM6CON         equ	910	;# 
   181     058C                     NCO1ACC         equ	1420	;# 
   182     058C                     NCO1ACCL        equ	1420	;# 
   183     058D                     NCO1ACCH        equ	1421	;# 
   184     058E                     NCO1ACCU        equ	1422	;# 
   185     058F                     NCO1INC         equ	1423	;# 
   186     058F                     NCO1INCL        equ	1423	;# 
   187     0590                     NCO1INCH        equ	1424	;# 
   188     0591                     NCO1INCU        equ	1425	;# 
   189     0592                     NCO1CON         equ	1426	;# 
   190     0593                     NCO1CLK         equ	1427	;# 
   191     059C                     TMR0L           equ	1436	;# 
   192     059C                     TMR0            equ	1436	;# 
   193     059D                     TMR0H           equ	1437	;# 
   194     059D                     PR0             equ	1437	;# 
   195     059E                     T0CON0          equ	1438	;# 
   196     059F                     T0CON1          equ	1439	;# 
   197     060C                     CWG1CLKCON      equ	1548	;# 
   198     060D                     CWG1DAT         equ	1549	;# 
   199     060E                     CWG1DBR         equ	1550	;# 
   200     060F                     CWG1DBF         equ	1551	;# 
   201     0610                     CWG1CON0        equ	1552	;# 
   202     0611                     CWG1CON1        equ	1553	;# 
   203     0612                     CWG1AS0         equ	1554	;# 
   204     0613                     CWG1AS1         equ	1555	;# 
   205     0614                     CWG1STR         equ	1556	;# 
   206     070C                     PIR0            equ	1804	;# 
   207     070D                     PIR1            equ	1805	;# 
   208     070E                     PIR2            equ	1806	;# 
   209     070F                     PIR3            equ	1807	;# 
   210     0710                     PIR4            equ	1808	;# 
   211     0711                     PIR5            equ	1809	;# 
   212     0712                     PIR6            equ	1810	;# 
   213     0713                     PIR7            equ	1811	;# 
   214     0716                     PIE0            equ	1814	;# 
   215     0717                     PIE1            equ	1815	;# 
   216     0718                     PIE2            equ	1816	;# 
   217     0719                     PIE3            equ	1817	;# 
   218     071A                     PIE4            equ	1818	;# 
   219     071B                     PIE5            equ	1819	;# 
   220     071C                     PIE6            equ	1820	;# 
   221     071D                     PIE7            equ	1821	;# 
   222     0796                     PMD0            equ	1942	;# 
   223     0797                     PMD1            equ	1943	;# 
   224     0798                     PMD2            equ	1944	;# 
   225     0799                     PMD3            equ	1945	;# 
   226     079A                     PMD4            equ	1946	;# 
   227     079B                     PMD5            equ	1947	;# 
   228     080C                     WDTCON0         equ	2060	;# 
   229     080D                     WDTCON1         equ	2061	;# 
   230     080E                     WDTPSL          equ	2062	;# 
   231     080F                     WDTPSH          equ	2063	;# 
   232     0810                     WDTTMR          equ	2064	;# 
   233     0811                     BORCON          equ	2065	;# 
   234     0812                     VREGCON         equ	2066	;# 
   235     0813                     PCON0           equ	2067	;# 
   236     0814                     PCON1           equ	2068	;# 
   237     081A                     NVMADR          equ	2074	;# 
   238     081A                     NVMADRL         equ	2074	;# 
   239     081B                     NVMADRH         equ	2075	;# 
   240     081C                     NVMDAT          equ	2076	;# 
   241     081C                     NVMDATL         equ	2076	;# 
   242     081D                     NVMDATH         equ	2077	;# 
   243     081E                     NVMCON1         equ	2078	;# 
   244     081F                     NVMCON2         equ	2079	;# 
   245     088C                     CPUDOZE         equ	2188	;# 
   246     088D                     OSCCON1         equ	2189	;# 
   247     088E                     OSCCON2         equ	2190	;# 
   248     088F                     OSCCON3         equ	2191	;# 
   249     0890                     OSCSTAT         equ	2192	;# 
   250     0891                     OSCEN           equ	2193	;# 
   251     0892                     OSCTUNE         equ	2194	;# 
   252     0893                     OSCFRQ          equ	2195	;# 
   253     0895                     CLKRCON         equ	2197	;# 
   254     0896                     CLKRCLK         equ	2198	;# 
   255     090C                     FVRCON          equ	2316	;# 
   256     090E                     DAC1CON0        equ	2318	;# 
   257     090F                     DAC1CON1        equ	2319	;# 
   258     091F                     ZCDCON          equ	2335	;# 
   259     098F                     CMOUT           equ	2447	;# 
   260     098F                     CMSTAT          equ	2447	;# 
   261     0990                     CM1CON0         equ	2448	;# 
   262     0991                     CM1CON1         equ	2449	;# 
   263     0992                     CM1NCH          equ	2450	;# 
   264     0993                     CM1PCH          equ	2451	;# 
   265     1E0F                     CLCDATA         equ	7695	;# 
   266     1E10                     CLC1CON         equ	7696	;# 
   267     1E11                     CLC1POL         equ	7697	;# 
   268     1E12                     CLC1SEL0        equ	7698	;# 
   269     1E13                     CLC1SEL1        equ	7699	;# 
   270     1E14                     CLC1SEL2        equ	7700	;# 
   271     1E15                     CLC1SEL3        equ	7701	;# 
   272     1E16                     CLC1GLS0        equ	7702	;# 
   273     1E17                     CLC1GLS1        equ	7703	;# 
   274     1E18                     CLC1GLS2        equ	7704	;# 
   275     1E19                     CLC1GLS3        equ	7705	;# 
   276     1E1A                     CLC2CON         equ	7706	;# 
   277     1E1B                     CLC2POL         equ	7707	;# 
   278     1E1C                     CLC2SEL0        equ	7708	;# 
   279     1E1D                     CLC2SEL1        equ	7709	;# 
   280     1E1E                     CLC2SEL2        equ	7710	;# 
   281     1E1F                     CLC2SEL3        equ	7711	;# 
   282     1E20                     CLC2GLS0        equ	7712	;# 
   283     1E21                     CLC2GLS1        equ	7713	;# 
   284     1E22                     CLC2GLS2        equ	7714	;# 
   285     1E23                     CLC2GLS3        equ	7715	;# 
   286     1E24                     CLC3CON         equ	7716	;# 
   287     1E25                     CLC3POL         equ	7717	;# 
   288     1E26                     CLC3SEL0        equ	7718	;# 
   289     1E27                     CLC3SEL1        equ	7719	;# 
   290     1E28                     CLC3SEL2        equ	7720	;# 
   291     1E29                     CLC3SEL3        equ	7721	;# 
   292     1E2A                     CLC3GLS0        equ	7722	;# 
   293     1E2B                     CLC3GLS1        equ	7723	;# 
   294     1E2C                     CLC3GLS2        equ	7724	;# 
   295     1E2D                     CLC3GLS3        equ	7725	;# 
   296     1E2E                     CLC4CON         equ	7726	;# 
   297     1E2F                     CLC4POL         equ	7727	;# 
   298     1E30                     CLC4SEL0        equ	7728	;# 
   299     1E31                     CLC4SEL1        equ	7729	;# 
   300     1E32                     CLC4SEL2        equ	7730	;# 
   301     1E33                     CLC4SEL3        equ	7731	;# 
   302     1E34                     CLC4GLS0        equ	7732	;# 
   303     1E35                     CLC4GLS1        equ	7733	;# 
   304     1E36                     CLC4GLS2        equ	7734	;# 
   305     1E37                     CLC4GLS3        equ	7735	;# 
   306     1E8F                     PPSLOCK         equ	7823	;# 
   307     1E90                     INTPPS          equ	7824	;# 
   308     1E91                     T0CKIPPS        equ	7825	;# 
   309     1E92                     T1CKIPPS        equ	7826	;# 
   310     1E93                     T1GPPS          equ	7827	;# 
   311     1E9C                     T2INPPS         equ	7836	;# 
   312     1EA1                     CCP1PPS         equ	7841	;# 
   313     1EA2                     CCP2PPS         equ	7842	;# 
   314     1EB1                     CWG1PPS         equ	7857	;# 
   315     1EBB                     CLCIN0PPS       equ	7867	;# 
   316     1EBC                     CLCIN1PPS       equ	7868	;# 
   317     1EBD                     CLCIN2PPS       equ	7869	;# 
   318     1EBE                     CLCIN3PPS       equ	7870	;# 
   319     1EC3                     ADACTPPS        equ	7875	;# 
   320     1EC5                     SSP1CLKPPS      equ	7877	;# 
   321     1EC6                     SSP1DATPPS      equ	7878	;# 
   322     1EC7                     SSP1SSPPS       equ	7879	;# 
   323     1ECB                     RX1DTPPS        equ	7883	;# 
   324     1ECC                     TX1CKPPS        equ	7884	;# 
   325     1F10                     RA0PPS          equ	7952	;# 
   326     1F11                     RA1PPS          equ	7953	;# 
   327     1F12                     RA2PPS          equ	7954	;# 
   328     1F13                     RA3PPS          equ	7955	;# 
   329     1F14                     RA4PPS          equ	7956	;# 
   330     1F15                     RA5PPS          equ	7957	;# 
   331     1F38                     ANSELA          equ	7992	;# 
   332     1F39                     WPUA            equ	7993	;# 
   333     1F3A                     ODCONA          equ	7994	;# 
   334     1F3B                     SLRCONA         equ	7995	;# 
   335     1F3C                     INLVLA          equ	7996	;# 
   336     1F3D                     IOCAP           equ	7997	;# 
   337     1F3E                     IOCAN           equ	7998	;# 
   338     1F3F                     IOCAF           equ	7999	;# 
   339     1FE4                     STATUS_SHAD     equ	8164	;# 
   340     1FE5                     WREG_SHAD       equ	8165	;# 
   341     1FE6                     BSR_SHAD        equ	8166	;# 
   342     1FE7                     PCLATH_SHAD     equ	8167	;# 
   343     1FE8                     FSR0_SHAD       equ	8168	;# 
   344     1FE8                     FSR0L_SHAD      equ	8168	;# 
   345     1FE9                     FSR0H_SHAD      equ	8169	;# 
   346     1FEA                     FSR1_SHAD       equ	8170	;# 
   347     1FEA                     FSR1L_SHAD      equ	8170	;# 
   348     1FEB                     FSR1H_SHAD      equ	8171	;# 
   349     1FED                     STKPTR          equ	8173	;# 
   350     1FEE                     TOSL            equ	8174	;# 
   351     1FEF                     TOSH            equ	8175	;# 
   352     0000                     INDF0           equ	0	;# 
   353     0001                     INDF1           equ	1	;# 
   354     0002                     PCL             equ	2	;# 
   355     0003                     STATUS          equ	3	;# 
   356     0004                     FSR0L           equ	4	;# 
   357     0005                     FSR0H           equ	5	;# 
   358     0006                     FSR1L           equ	6	;# 
   359     0007                     FSR1H           equ	7	;# 
   360     0008                     BSR             equ	8	;# 
   361     0009                     WREG            equ	9	;# 
   362     000A                     PCLATH          equ	10	;# 
   363     000B                     INTCON          equ	11	;# 
   364     000C                     PORTA           equ	12	;# 
   365     0012                     TRISA           equ	18	;# 
   366     0018                     LATA            equ	24	;# 
   367     009B                     ADRES           equ	155	;# 
   368     009B                     ADRESL          equ	155	;# 
   369     009C                     ADRESH          equ	156	;# 
   370     009D                     ADCON0          equ	157	;# 
   371     009E                     ADCON1          equ	158	;# 
   372     009F                     ADACT           equ	159	;# 
   373     0119                     RC1REG          equ	281	;# 
   374     0119                     RCREG           equ	281	;# 
   375     0119                     RCREG1          equ	281	;# 
   376     011A                     TX1REG          equ	282	;# 
   377     011A                     TXREG1          equ	282	;# 
   378     011A                     TXREG           equ	282	;# 
   379     011B                     SP1BRG          equ	283	;# 
   380     011B                     SPBRG           equ	283	;# 
   381     011B                     SP1BRGL         equ	283	;# 
   382     011B                     SPBRG1          equ	283	;# 
   383     011B                     SPBRGL          equ	283	;# 
   384     011C                     SP1BRGH         equ	284	;# 
   385     011C                     SPBRGH          equ	284	;# 
   386     011C                     SPBRGH1         equ	284	;# 
   387     011D                     RC1STA          equ	285	;# 
   388     011D                     RCSTA1          equ	285	;# 
   389     011D                     RCSTA           equ	285	;# 
   390     011E                     TX1STA          equ	286	;# 
   391     011E                     TXSTA1          equ	286	;# 
   392     011E                     TXSTA           equ	286	;# 
   393     011F                     BAUD1CON        equ	287	;# 
   394     011F                     BAUDCON1        equ	287	;# 
   395     011F                     BAUDCTL1        equ	287	;# 
   396     011F                     BAUDCON         equ	287	;# 
   397     011F                     BAUDCTL         equ	287	;# 
   398     018C                     SSP1BUF         equ	396	;# 
   399     018D                     SSP1ADD         equ	397	;# 
   400     018E                     SSP1MSK         equ	398	;# 
   401     018F                     SSP1STAT        equ	399	;# 
   402     0190                     SSP1CON1        equ	400	;# 
   403     0191                     SSP1CON2        equ	401	;# 
   404     0192                     SSP1CON3        equ	402	;# 
   405     020C                     TMR1            equ	524	;# 
   406     020C                     TMR1L           equ	524	;# 
   407     020D                     TMR1H           equ	525	;# 
   408     020E                     T1CON           equ	526	;# 
   409     020F                     T1GCON          equ	527	;# 
   410     020F                     PR1             equ	527	;# 
   411     0210                     T1GATE          equ	528	;# 
   412     0210                     TMR1GATE        equ	528	;# 
   413     0211                     T1CLK           equ	529	;# 
   414     0211                     TMR1CLK         equ	529	;# 
   415     028C                     T2TMR           equ	652	;# 
   416     028C                     TMR2            equ	652	;# 
   417     028D                     T2PR            equ	653	;# 
   418     028D                     PR2             equ	653	;# 
   419     028E                     T2CON           equ	654	;# 
   420     028F                     T2HLT           equ	655	;# 
   421     0290                     T2CLKCON        equ	656	;# 
   422     0291                     T2RST           equ	657	;# 
   423     030C                     CCPR1           equ	780	;# 
   424     030C                     CCPR1L          equ	780	;# 
   425     030D                     CCPR1H          equ	781	;# 
   426     030E                     CCP1CON         equ	782	;# 
   427     030F                     CCP1CAP         equ	783	;# 
   428     0310                     CCPR2           equ	784	;# 
   429     0310                     CCPR2L          equ	784	;# 
   430     0311                     CCPR2H          equ	785	;# 
   431     0312                     CCP2CON         equ	786	;# 
   432     0313                     CCP2CAP         equ	787	;# 
   433     0314                     PWM3DC          equ	788	;# 
   434     0314                     PWM3DCL         equ	788	;# 
   435     0315                     PWM3DCH         equ	789	;# 
   436     0316                     PWM3CON         equ	790	;# 
   437     0318                     PWM4DC          equ	792	;# 
   438     0318                     PWM4DCL         equ	792	;# 
   439     0319                     PWM4DCH         equ	793	;# 
   440     031A                     PWM4CON         equ	794	;# 
   441     031C                     PWM5DC          equ	796	;# 
   442     031C                     PWM5DCL         equ	796	;# 
   443     031D                     PWM5DCH         equ	797	;# 
   444     031E                     PWM5CON         equ	798	;# 
   445     038C                     PWM6DC          equ	908	;# 
   446     038C                     PWM6DCL         equ	908	;# 
   447     038D                     PWM6DCH         equ	909	;# 
   448     038E                     PWM6CON         equ	910	;# 
   449     058C                     NCO1ACC         equ	1420	;# 
   450     058C                     NCO1ACCL        equ	1420	;# 
   451     058D                     NCO1ACCH        equ	1421	;# 
   452     058E                     NCO1ACCU        equ	1422	;# 
   453     058F                     NCO1INC         equ	1423	;# 
   454     058F                     NCO1INCL        equ	1423	;# 
   455     0590                     NCO1INCH        equ	1424	;# 
   456     0591                     NCO1INCU        equ	1425	;# 
   457     0592                     NCO1CON         equ	1426	;# 
   458     0593                     NCO1CLK         equ	1427	;# 
   459     059C                     TMR0L           equ	1436	;# 
   460     059C                     TMR0            equ	1436	;# 
   461     059D                     TMR0H           equ	1437	;# 
   462     059D                     PR0             equ	1437	;# 
   463     059E                     T0CON0          equ	1438	;# 
   464     059F                     T0CON1          equ	1439	;# 
   465     060C                     CWG1CLKCON      equ	1548	;# 
   466     060D                     CWG1DAT         equ	1549	;# 
   467     060E                     CWG1DBR         equ	1550	;# 
   468     060F                     CWG1DBF         equ	1551	;# 
   469     0610                     CWG1CON0        equ	1552	;# 
   470     0611                     CWG1CON1        equ	1553	;# 
   471     0612                     CWG1AS0         equ	1554	;# 
   472     0613                     CWG1AS1         equ	1555	;# 
   473     0614                     CWG1STR         equ	1556	;# 
   474     070C                     PIR0            equ	1804	;# 
   475     070D                     PIR1            equ	1805	;# 
   476     070E                     PIR2            equ	1806	;# 
   477     070F                     PIR3            equ	1807	;# 
   478     0710                     PIR4            equ	1808	;# 
   479     0711                     PIR5            equ	1809	;# 
   480     0712                     PIR6            equ	1810	;# 
   481     0713                     PIR7            equ	1811	;# 
   482     0716                     PIE0            equ	1814	;# 
   483     0717                     PIE1            equ	1815	;# 
   484     0718                     PIE2            equ	1816	;# 
   485     0719                     PIE3            equ	1817	;# 
   486     071A                     PIE4            equ	1818	;# 
   487     071B                     PIE5            equ	1819	;# 
   488     071C                     PIE6            equ	1820	;# 
   489     071D                     PIE7            equ	1821	;# 
   490     0796                     PMD0            equ	1942	;# 
   491     0797                     PMD1            equ	1943	;# 
   492     0798                     PMD2            equ	1944	;# 
   493     0799                     PMD3            equ	1945	;# 
   494     079A                     PMD4            equ	1946	;# 
   495     079B                     PMD5            equ	1947	;# 
   496     080C                     WDTCON0         equ	2060	;# 
   497     080D                     WDTCON1         equ	2061	;# 
   498     080E                     WDTPSL          equ	2062	;# 
   499     080F                     WDTPSH          equ	2063	;# 
   500     0810                     WDTTMR          equ	2064	;# 
   501     0811                     BORCON          equ	2065	;# 
   502     0812                     VREGCON         equ	2066	;# 
   503     0813                     PCON0           equ	2067	;# 
   504     0814                     PCON1           equ	2068	;# 
   505     081A                     NVMADR          equ	2074	;# 
   506     081A                     NVMADRL         equ	2074	;# 
   507     081B                     NVMADRH         equ	2075	;# 
   508     081C                     NVMDAT          equ	2076	;# 
   509     081C                     NVMDATL         equ	2076	;# 
   510     081D                     NVMDATH         equ	2077	;# 
   511     081E                     NVMCON1         equ	2078	;# 
   512     081F                     NVMCON2         equ	2079	;# 
   513     088C                     CPUDOZE         equ	2188	;# 
   514     088D                     OSCCON1         equ	2189	;# 
   515     088E                     OSCCON2         equ	2190	;# 
   516     088F                     OSCCON3         equ	2191	;# 
   517     0890                     OSCSTAT         equ	2192	;# 
   518     0891                     OSCEN           equ	2193	;# 
   519     0892                     OSCTUNE         equ	2194	;# 
   520     0893                     OSCFRQ          equ	2195	;# 
   521     0895                     CLKRCON         equ	2197	;# 
   522     0896                     CLKRCLK         equ	2198	;# 
   523     090C                     FVRCON          equ	2316	;# 
   524     090E                     DAC1CON0        equ	2318	;# 
   525     090F                     DAC1CON1        equ	2319	;# 
   526     091F                     ZCDCON          equ	2335	;# 
   527     098F                     CMOUT           equ	2447	;# 
   528     098F                     CMSTAT          equ	2447	;# 
   529     0990                     CM1CON0         equ	2448	;# 
   530     0991                     CM1CON1         equ	2449	;# 
   531     0992                     CM1NCH          equ	2450	;# 
   532     0993                     CM1PCH          equ	2451	;# 
   533     1E0F                     CLCDATA         equ	7695	;# 
   534     1E10                     CLC1CON         equ	7696	;# 
   535     1E11                     CLC1POL         equ	7697	;# 
   536     1E12                     CLC1SEL0        equ	7698	;# 
   537     1E13                     CLC1SEL1        equ	7699	;# 
   538     1E14                     CLC1SEL2        equ	7700	;# 
   539     1E15                     CLC1SEL3        equ	7701	;# 
   540     1E16                     CLC1GLS0        equ	7702	;# 
   541     1E17                     CLC1GLS1        equ	7703	;# 
   542     1E18                     CLC1GLS2        equ	7704	;# 
   543     1E19                     CLC1GLS3        equ	7705	;# 
   544     1E1A                     CLC2CON         equ	7706	;# 
   545     1E1B                     CLC2POL         equ	7707	;# 
   546     1E1C                     CLC2SEL0        equ	7708	;# 
   547     1E1D                     CLC2SEL1        equ	7709	;# 
   548     1E1E                     CLC2SEL2        equ	7710	;# 
   549     1E1F                     CLC2SEL3        equ	7711	;# 
   550     1E20                     CLC2GLS0        equ	7712	;# 
   551     1E21                     CLC2GLS1        equ	7713	;# 
   552     1E22                     CLC2GLS2        equ	7714	;# 
   553     1E23                     CLC2GLS3        equ	7715	;# 
   554     1E24                     CLC3CON         equ	7716	;# 
   555     1E25                     CLC3POL         equ	7717	;# 
   556     1E26                     CLC3SEL0        equ	7718	;# 
   557     1E27                     CLC3SEL1        equ	7719	;# 
   558     1E28                     CLC3SEL2        equ	7720	;# 
   559     1E29                     CLC3SEL3        equ	7721	;# 
   560     1E2A                     CLC3GLS0        equ	7722	;# 
   561     1E2B                     CLC3GLS1        equ	7723	;# 
   562     1E2C                     CLC3GLS2        equ	7724	;# 
   563     1E2D                     CLC3GLS3        equ	7725	;# 
   564     1E2E                     CLC4CON         equ	7726	;# 
   565     1E2F                     CLC4POL         equ	7727	;# 
   566     1E30                     CLC4SEL0        equ	7728	;# 
   567     1E31                     CLC4SEL1        equ	7729	;# 
   568     1E32                     CLC4SEL2        equ	7730	;# 
   569     1E33                     CLC4SEL3        equ	7731	;# 
   570     1E34                     CLC4GLS0        equ	7732	;# 
   571     1E35                     CLC4GLS1        equ	7733	;# 
   572     1E36                     CLC4GLS2        equ	7734	;# 
   573     1E37                     CLC4GLS3        equ	7735	;# 
   574     1E8F                     PPSLOCK         equ	7823	;# 
   575     1E90                     INTPPS          equ	7824	;# 
   576     1E91                     T0CKIPPS        equ	7825	;# 
   577     1E92                     T1CKIPPS        equ	7826	;# 
   578     1E93                     T1GPPS          equ	7827	;# 
   579     1E9C                     T2INPPS         equ	7836	;# 
   580     1EA1                     CCP1PPS         equ	7841	;# 
   581     1EA2                     CCP2PPS         equ	7842	;# 
   582     1EB1                     CWG1PPS         equ	7857	;# 
   583     1EBB                     CLCIN0PPS       equ	7867	;# 
   584     1EBC                     CLCIN1PPS       equ	7868	;# 
   585     1EBD                     CLCIN2PPS       equ	7869	;# 
   586     1EBE                     CLCIN3PPS       equ	7870	;# 
   587     1EC3                     ADACTPPS        equ	7875	;# 
   588     1EC5                     SSP1CLKPPS      equ	7877	;# 
   589     1EC6                     SSP1DATPPS      equ	7878	;# 
   590     1EC7                     SSP1SSPPS       equ	7879	;# 
   591     1ECB                     RX1DTPPS        equ	7883	;# 
   592     1ECC                     TX1CKPPS        equ	7884	;# 
   593     1F10                     RA0PPS          equ	7952	;# 
   594     1F11                     RA1PPS          equ	7953	;# 
   595     1F12                     RA2PPS          equ	7954	;# 
   596     1F13                     RA3PPS          equ	7955	;# 
   597     1F14                     RA4PPS          equ	7956	;# 
   598     1F15                     RA5PPS          equ	7957	;# 
   599     1F38                     ANSELA          equ	7992	;# 
   600     1F39                     WPUA            equ	7993	;# 
   601     1F3A                     ODCONA          equ	7994	;# 
   602     1F3B                     SLRCONA         equ	7995	;# 
   603     1F3C                     INLVLA          equ	7996	;# 
   604     1F3D                     IOCAP           equ	7997	;# 
   605     1F3E                     IOCAN           equ	7998	;# 
   606     1F3F                     IOCAF           equ	7999	;# 
   607     1FE4                     STATUS_SHAD     equ	8164	;# 
   608     1FE5                     WREG_SHAD       equ	8165	;# 
   609     1FE6                     BSR_SHAD        equ	8166	;# 
   610     1FE7                     PCLATH_SHAD     equ	8167	;# 
   611     1FE8                     FSR0_SHAD       equ	8168	;# 
   612     1FE8                     FSR0L_SHAD      equ	8168	;# 
   613     1FE9                     FSR0H_SHAD      equ	8169	;# 
   614     1FEA                     FSR1_SHAD       equ	8170	;# 
   615     1FEA                     FSR1L_SHAD      equ	8170	;# 
   616     1FEB                     FSR1H_SHAD      equ	8171	;# 
   617     1FED                     STKPTR          equ	8173	;# 
   618     1FEE                     TOSL            equ	8174	;# 
   619     1FEF                     TOSH            equ	8175	;# 
   620     0000                     INDF0           equ	0	;# 
   621     0001                     INDF1           equ	1	;# 
   622     0002                     PCL             equ	2	;# 
   623     0003                     STATUS          equ	3	;# 
   624     0004                     FSR0L           equ	4	;# 
   625     0005                     FSR0H           equ	5	;# 
   626     0006                     FSR1L           equ	6	;# 
   627     0007                     FSR1H           equ	7	;# 
   628     0008                     BSR             equ	8	;# 
   629     0009                     WREG            equ	9	;# 
   630     000A                     PCLATH          equ	10	;# 
   631     000B                     INTCON          equ	11	;# 
   632     000C                     PORTA           equ	12	;# 
   633     0012                     TRISA           equ	18	;# 
   634     0018                     LATA            equ	24	;# 
   635     009B                     ADRES           equ	155	;# 
   636     009B                     ADRESL          equ	155	;# 
   637     009C                     ADRESH          equ	156	;# 
   638     009D                     ADCON0          equ	157	;# 
   639     009E                     ADCON1          equ	158	;# 
   640     009F                     ADACT           equ	159	;# 
   641     0119                     RC1REG          equ	281	;# 
   642     0119                     RCREG           equ	281	;# 
   643     0119                     RCREG1          equ	281	;# 
   644     011A                     TX1REG          equ	282	;# 
   645     011A                     TXREG1          equ	282	;# 
   646     011A                     TXREG           equ	282	;# 
   647     011B                     SP1BRG          equ	283	;# 
   648     011B                     SPBRG           equ	283	;# 
   649     011B                     SP1BRGL         equ	283	;# 
   650     011B                     SPBRG1          equ	283	;# 
   651     011B                     SPBRGL          equ	283	;# 
   652     011C                     SP1BRGH         equ	284	;# 
   653     011C                     SPBRGH          equ	284	;# 
   654     011C                     SPBRGH1         equ	284	;# 
   655     011D                     RC1STA          equ	285	;# 
   656     011D                     RCSTA1          equ	285	;# 
   657     011D                     RCSTA           equ	285	;# 
   658     011E                     TX1STA          equ	286	;# 
   659     011E                     TXSTA1          equ	286	;# 
   660     011E                     TXSTA           equ	286	;# 
   661     011F                     BAUD1CON        equ	287	;# 
   662     011F                     BAUDCON1        equ	287	;# 
   663     011F                     BAUDCTL1        equ	287	;# 
   664     011F                     BAUDCON         equ	287	;# 
   665     011F                     BAUDCTL         equ	287	;# 
   666     018C                     SSP1BUF         equ	396	;# 
   667     018D                     SSP1ADD         equ	397	;# 
   668     018E                     SSP1MSK         equ	398	;# 
   669     018F                     SSP1STAT        equ	399	;# 
   670     0190                     SSP1CON1        equ	400	;# 
   671     0191                     SSP1CON2        equ	401	;# 
   672     0192                     SSP1CON3        equ	402	;# 
   673     020C                     TMR1            equ	524	;# 
   674     020C                     TMR1L           equ	524	;# 
   675     020D                     TMR1H           equ	525	;# 
   676     020E                     T1CON           equ	526	;# 
   677     020F                     T1GCON          equ	527	;# 
   678     020F                     PR1             equ	527	;# 
   679     0210                     T1GATE          equ	528	;# 
   680     0210                     TMR1GATE        equ	528	;# 
   681     0211                     T1CLK           equ	529	;# 
   682     0211                     TMR1CLK         equ	529	;# 
   683     028C                     T2TMR           equ	652	;# 
   684     028C                     TMR2            equ	652	;# 
   685     028D                     T2PR            equ	653	;# 
   686     028D                     PR2             equ	653	;# 
   687     028E                     T2CON           equ	654	;# 
   688     028F                     T2HLT           equ	655	;# 
   689     0290                     T2CLKCON        equ	656	;# 
   690     0291                     T2RST           equ	657	;# 
   691     030C                     CCPR1           equ	780	;# 
   692     030C                     CCPR1L          equ	780	;# 
   693     030D                     CCPR1H          equ	781	;# 
   694     030E                     CCP1CON         equ	782	;# 
   695     030F                     CCP1CAP         equ	783	;# 
   696     0310                     CCPR2           equ	784	;# 
   697     0310                     CCPR2L          equ	784	;# 
   698     0311                     CCPR2H          equ	785	;# 
   699     0312                     CCP2CON         equ	786	;# 
   700     0313                     CCP2CAP         equ	787	;# 
   701     0314                     PWM3DC          equ	788	;# 
   702     0314                     PWM3DCL         equ	788	;# 
   703     0315                     PWM3DCH         equ	789	;# 
   704     0316                     PWM3CON         equ	790	;# 
   705     0318                     PWM4DC          equ	792	;# 
   706     0318                     PWM4DCL         equ	792	;# 
   707     0319                     PWM4DCH         equ	793	;# 
   708     031A                     PWM4CON         equ	794	;# 
   709     031C                     PWM5DC          equ	796	;# 
   710     031C                     PWM5DCL         equ	796	;# 
   711     031D                     PWM5DCH         equ	797	;# 
   712     031E                     PWM5CON         equ	798	;# 
   713     038C                     PWM6DC          equ	908	;# 
   714     038C                     PWM6DCL         equ	908	;# 
   715     038D                     PWM6DCH         equ	909	;# 
   716     038E                     PWM6CON         equ	910	;# 
   717     058C                     NCO1ACC         equ	1420	;# 
   718     058C                     NCO1ACCL        equ	1420	;# 
   719     058D                     NCO1ACCH        equ	1421	;# 
   720     058E                     NCO1ACCU        equ	1422	;# 
   721     058F                     NCO1INC         equ	1423	;# 
   722     058F                     NCO1INCL        equ	1423	;# 
   723     0590                     NCO1INCH        equ	1424	;# 
   724     0591                     NCO1INCU        equ	1425	;# 
   725     0592                     NCO1CON         equ	1426	;# 
   726     0593                     NCO1CLK         equ	1427	;# 
   727     059C                     TMR0L           equ	1436	;# 
   728     059C                     TMR0            equ	1436	;# 
   729     059D                     TMR0H           equ	1437	;# 
   730     059D                     PR0             equ	1437	;# 
   731     059E                     T0CON0          equ	1438	;# 
   732     059F                     T0CON1          equ	1439	;# 
   733     060C                     CWG1CLKCON      equ	1548	;# 
   734     060D                     CWG1DAT         equ	1549	;# 
   735     060E                     CWG1DBR         equ	1550	;# 
   736     060F                     CWG1DBF         equ	1551	;# 
   737     0610                     CWG1CON0        equ	1552	;# 
   738     0611                     CWG1CON1        equ	1553	;# 
   739     0612                     CWG1AS0         equ	1554	;# 
   740     0613                     CWG1AS1         equ	1555	;# 
   741     0614                     CWG1STR         equ	1556	;# 
   742     070C                     PIR0            equ	1804	;# 
   743     070D                     PIR1            equ	1805	;# 
   744     070E                     PIR2            equ	1806	;# 
   745     070F                     PIR3            equ	1807	;# 
   746     0710                     PIR4            equ	1808	;# 
   747     0711                     PIR5            equ	1809	;# 
   748     0712                     PIR6            equ	1810	;# 
   749     0713                     PIR7            equ	1811	;# 
   750     0716                     PIE0            equ	1814	;# 
   751     0717                     PIE1            equ	1815	;# 
   752     0718                     PIE2            equ	1816	;# 
   753     0719                     PIE3            equ	1817	;# 
   754     071A                     PIE4            equ	1818	;# 
   755     071B                     PIE5            equ	1819	;# 
   756     071C                     PIE6            equ	1820	;# 
   757     071D                     PIE7            equ	1821	;# 
   758     0796                     PMD0            equ	1942	;# 
   759     0797                     PMD1            equ	1943	;# 
   760     0798                     PMD2            equ	1944	;# 
   761     0799                     PMD3            equ	1945	;# 
   762     079A                     PMD4            equ	1946	;# 
   763     079B                     PMD5            equ	1947	;# 
   764     080C                     WDTCON0         equ	2060	;# 
   765     080D                     WDTCON1         equ	2061	;# 
   766     080E                     WDTPSL          equ	2062	;# 
   767     080F                     WDTPSH          equ	2063	;# 
   768     0810                     WDTTMR          equ	2064	;# 
   769     0811                     BORCON          equ	2065	;# 
   770     0812                     VREGCON         equ	2066	;# 
   771     0813                     PCON0           equ	2067	;# 
   772     0814                     PCON1           equ	2068	;# 
   773     081A                     NVMADR          equ	2074	;# 
   774     081A                     NVMADRL         equ	2074	;# 
   775     081B                     NVMADRH         equ	2075	;# 
   776     081C                     NVMDAT          equ	2076	;# 
   777     081C                     NVMDATL         equ	2076	;# 
   778     081D                     NVMDATH         equ	2077	;# 
   779     081E                     NVMCON1         equ	2078	;# 
   780     081F                     NVMCON2         equ	2079	;# 
   781     088C                     CPUDOZE         equ	2188	;# 
   782     088D                     OSCCON1         equ	2189	;# 
   783     088E                     OSCCON2         equ	2190	;# 
   784     088F                     OSCCON3         equ	2191	;# 
   785     0890                     OSCSTAT         equ	2192	;# 
   786     0891                     OSCEN           equ	2193	;# 
   787     0892                     OSCTUNE         equ	2194	;# 
   788     0893                     OSCFRQ          equ	2195	;# 
   789     0895                     CLKRCON         equ	2197	;# 
   790     0896                     CLKRCLK         equ	2198	;# 
   791     090C                     FVRCON          equ	2316	;# 
   792     090E                     DAC1CON0        equ	2318	;# 
   793     090F                     DAC1CON1        equ	2319	;# 
   794     091F                     ZCDCON          equ	2335	;# 
   795     098F                     CMOUT           equ	2447	;# 
   796     098F                     CMSTAT          equ	2447	;# 
   797     0990                     CM1CON0         equ	2448	;# 
   798     0991                     CM1CON1         equ	2449	;# 
   799     0992                     CM1NCH          equ	2450	;# 
   800     0993                     CM1PCH          equ	2451	;# 
   801     1E0F                     CLCDATA         equ	7695	;# 
   802     1E10                     CLC1CON         equ	7696	;# 
   803     1E11                     CLC1POL         equ	7697	;# 
   804     1E12                     CLC1SEL0        equ	7698	;# 
   805     1E13                     CLC1SEL1        equ	7699	;# 
   806     1E14                     CLC1SEL2        equ	7700	;# 
   807     1E15                     CLC1SEL3        equ	7701	;# 
   808     1E16                     CLC1GLS0        equ	7702	;# 
   809     1E17                     CLC1GLS1        equ	7703	;# 
   810     1E18                     CLC1GLS2        equ	7704	;# 
   811     1E19                     CLC1GLS3        equ	7705	;# 
   812     1E1A                     CLC2CON         equ	7706	;# 
   813     1E1B                     CLC2POL         equ	7707	;# 
   814     1E1C                     CLC2SEL0        equ	7708	;# 
   815     1E1D                     CLC2SEL1        equ	7709	;# 
   816     1E1E                     CLC2SEL2        equ	7710	;# 
   817     1E1F                     CLC2SEL3        equ	7711	;# 
   818     1E20                     CLC2GLS0        equ	7712	;# 
   819     1E21                     CLC2GLS1        equ	7713	;# 
   820     1E22                     CLC2GLS2        equ	7714	;# 
   821     1E23                     CLC2GLS3        equ	7715	;# 
   822     1E24                     CLC3CON         equ	7716	;# 
   823     1E25                     CLC3POL         equ	7717	;# 
   824     1E26                     CLC3SEL0        equ	7718	;# 
   825     1E27                     CLC3SEL1        equ	7719	;# 
   826     1E28                     CLC3SEL2        equ	7720	;# 
   827     1E29                     CLC3SEL3        equ	7721	;# 
   828     1E2A                     CLC3GLS0        equ	7722	;# 
   829     1E2B                     CLC3GLS1        equ	7723	;# 
   830     1E2C                     CLC3GLS2        equ	7724	;# 
   831     1E2D                     CLC3GLS3        equ	7725	;# 
   832     1E2E                     CLC4CON         equ	7726	;# 
   833     1E2F                     CLC4POL         equ	7727	;# 
   834     1E30                     CLC4SEL0        equ	7728	;# 
   835     1E31                     CLC4SEL1        equ	7729	;# 
   836     1E32                     CLC4SEL2        equ	7730	;# 
   837     1E33                     CLC4SEL3        equ	7731	;# 
   838     1E34                     CLC4GLS0        equ	7732	;# 
   839     1E35                     CLC4GLS1        equ	7733	;# 
   840     1E36                     CLC4GLS2        equ	7734	;# 
   841     1E37                     CLC4GLS3        equ	7735	;# 
   842     1E8F                     PPSLOCK         equ	7823	;# 
   843     1E90                     INTPPS          equ	7824	;# 
   844     1E91                     T0CKIPPS        equ	7825	;# 
   845     1E92                     T1CKIPPS        equ	7826	;# 
   846     1E93                     T1GPPS          equ	7827	;# 
   847     1E9C                     T2INPPS         equ	7836	;# 
   848     1EA1                     CCP1PPS         equ	7841	;# 
   849     1EA2                     CCP2PPS         equ	7842	;# 
   850     1EB1                     CWG1PPS         equ	7857	;# 
   851     1EBB                     CLCIN0PPS       equ	7867	;# 
   852     1EBC                     CLCIN1PPS       equ	7868	;# 
   853     1EBD                     CLCIN2PPS       equ	7869	;# 
   854     1EBE                     CLCIN3PPS       equ	7870	;# 
   855     1EC3                     ADACTPPS        equ	7875	;# 
   856     1EC5                     SSP1CLKPPS      equ	7877	;# 
   857     1EC6                     SSP1DATPPS      equ	7878	;# 
   858     1EC7                     SSP1SSPPS       equ	7879	;# 
   859     1ECB                     RX1DTPPS        equ	7883	;# 
   860     1ECC                     TX1CKPPS        equ	7884	;# 
   861     1F10                     RA0PPS          equ	7952	;# 
   862     1F11                     RA1PPS          equ	7953	;# 
   863     1F12                     RA2PPS          equ	7954	;# 
   864     1F13                     RA3PPS          equ	7955	;# 
   865     1F14                     RA4PPS          equ	7956	;# 
   866     1F15                     RA5PPS          equ	7957	;# 
   867     1F38                     ANSELA          equ	7992	;# 
   868     1F39                     WPUA            equ	7993	;# 
   869     1F3A                     ODCONA          equ	7994	;# 
   870     1F3B                     SLRCONA         equ	7995	;# 
   871     1F3C                     INLVLA          equ	7996	;# 
   872     1F3D                     IOCAP           equ	7997	;# 
   873     1F3E                     IOCAN           equ	7998	;# 
   874     1F3F                     IOCAF           equ	7999	;# 
   875     1FE4                     STATUS_SHAD     equ	8164	;# 
   876     1FE5                     WREG_SHAD       equ	8165	;# 
   877     1FE6                     BSR_SHAD        equ	8166	;# 
   878     1FE7                     PCLATH_SHAD     equ	8167	;# 
   879     1FE8                     FSR0_SHAD       equ	8168	;# 
   880     1FE8                     FSR0L_SHAD      equ	8168	;# 
   881     1FE9                     FSR0H_SHAD      equ	8169	;# 
   882     1FEA                     FSR1_SHAD       equ	8170	;# 
   883     1FEA                     FSR1L_SHAD      equ	8170	;# 
   884     1FEB                     FSR1H_SHAD      equ	8171	;# 
   885     1FED                     STKPTR          equ	8173	;# 
   886     1FEE                     TOSL            equ	8174	;# 
   887     1FEF                     TOSH            equ	8175	;# 
   888     0000                     INDF0           equ	0	;# 
   889     0001                     INDF1           equ	1	;# 
   890     0002                     PCL             equ	2	;# 
   891     0003                     STATUS          equ	3	;# 
   892     0004                     FSR0L           equ	4	;# 
   893     0005                     FSR0H           equ	5	;# 
   894     0006                     FSR1L           equ	6	;# 
   895     0007                     FSR1H           equ	7	;# 
   896     0008                     BSR             equ	8	;# 
   897     0009                     WREG            equ	9	;# 
   898     000A                     PCLATH          equ	10	;# 
   899     000B                     INTCON          equ	11	;# 
   900     000C                     PORTA           equ	12	;# 
   901     0012                     TRISA           equ	18	;# 
   902     0018                     LATA            equ	24	;# 
   903     009B                     ADRES           equ	155	;# 
   904     009B                     ADRESL          equ	155	;# 
   905     009C                     ADRESH          equ	156	;# 
   906     009D                     ADCON0          equ	157	;# 
   907     009E                     ADCON1          equ	158	;# 
   908     009F                     ADACT           equ	159	;# 
   909     0119                     RC1REG          equ	281	;# 
   910     0119                     RCREG           equ	281	;# 
   911     0119                     RCREG1          equ	281	;# 
   912     011A                     TX1REG          equ	282	;# 
   913     011A                     TXREG1          equ	282	;# 
   914     011A                     TXREG           equ	282	;# 
   915     011B                     SP1BRG          equ	283	;# 
   916     011B                     SPBRG           equ	283	;# 
   917     011B                     SP1BRGL         equ	283	;# 
   918     011B                     SPBRG1          equ	283	;# 
   919     011B                     SPBRGL          equ	283	;# 
   920     011C                     SP1BRGH         equ	284	;# 
   921     011C                     SPBRGH          equ	284	;# 
   922     011C                     SPBRGH1         equ	284	;# 
   923     011D                     RC1STA          equ	285	;# 
   924     011D                     RCSTA1          equ	285	;# 
   925     011D                     RCSTA           equ	285	;# 
   926     011E                     TX1STA          equ	286	;# 
   927     011E                     TXSTA1          equ	286	;# 
   928     011E                     TXSTA           equ	286	;# 
   929     011F                     BAUD1CON        equ	287	;# 
   930     011F                     BAUDCON1        equ	287	;# 
   931     011F                     BAUDCTL1        equ	287	;# 
   932     011F                     BAUDCON         equ	287	;# 
   933     011F                     BAUDCTL         equ	287	;# 
   934     018C                     SSP1BUF         equ	396	;# 
   935     018D                     SSP1ADD         equ	397	;# 
   936     018E                     SSP1MSK         equ	398	;# 
   937     018F                     SSP1STAT        equ	399	;# 
   938     0190                     SSP1CON1        equ	400	;# 
   939     0191                     SSP1CON2        equ	401	;# 
   940     0192                     SSP1CON3        equ	402	;# 
   941     020C                     TMR1            equ	524	;# 
   942     020C                     TMR1L           equ	524	;# 
   943     020D                     TMR1H           equ	525	;# 
   944     020E                     T1CON           equ	526	;# 
   945     020F                     T1GCON          equ	527	;# 
   946     020F                     PR1             equ	527	;# 
   947     0210                     T1GATE          equ	528	;# 
   948     0210                     TMR1GATE        equ	528	;# 
   949     0211                     T1CLK           equ	529	;# 
   950     0211                     TMR1CLK         equ	529	;# 
   951     028C                     T2TMR           equ	652	;# 
   952     028C                     TMR2            equ	652	;# 
   953     028D                     T2PR            equ	653	;# 
   954     028D                     PR2             equ	653	;# 
   955     028E                     T2CON           equ	654	;# 
   956     028F                     T2HLT           equ	655	;# 
   957     0290                     T2CLKCON        equ	656	;# 
   958     0291                     T2RST           equ	657	;# 
   959     030C                     CCPR1           equ	780	;# 
   960     030C                     CCPR1L          equ	780	;# 
   961     030D                     CCPR1H          equ	781	;# 
   962     030E                     CCP1CON         equ	782	;# 
   963     030F                     CCP1CAP         equ	783	;# 
   964     0310                     CCPR2           equ	784	;# 
   965     0310                     CCPR2L          equ	784	;# 
   966     0311                     CCPR2H          equ	785	;# 
   967     0312                     CCP2CON         equ	786	;# 
   968     0313                     CCP2CAP         equ	787	;# 
   969     0314                     PWM3DC          equ	788	;# 
   970     0314                     PWM3DCL         equ	788	;# 
   971     0315                     PWM3DCH         equ	789	;# 
   972     0316                     PWM3CON         equ	790	;# 
   973     0318                     PWM4DC          equ	792	;# 
   974     0318                     PWM4DCL         equ	792	;# 
   975     0319                     PWM4DCH         equ	793	;# 
   976     031A                     PWM4CON         equ	794	;# 
   977     031C                     PWM5DC          equ	796	;# 
   978     031C                     PWM5DCL         equ	796	;# 
   979     031D                     PWM5DCH         equ	797	;# 
   980     031E                     PWM5CON         equ	798	;# 
   981     038C                     PWM6DC          equ	908	;# 
   982     038C                     PWM6DCL         equ	908	;# 
   983     038D                     PWM6DCH         equ	909	;# 
   984     038E                     PWM6CON         equ	910	;# 
   985     058C                     NCO1ACC         equ	1420	;# 
   986     058C                     NCO1ACCL        equ	1420	;# 
   987     058D                     NCO1ACCH        equ	1421	;# 
   988     058E                     NCO1ACCU        equ	1422	;# 
   989     058F                     NCO1INC         equ	1423	;# 
   990     058F                     NCO1INCL        equ	1423	;# 
   991     0590                     NCO1INCH        equ	1424	;# 
   992     0591                     NCO1INCU        equ	1425	;# 
   993     0592                     NCO1CON         equ	1426	;# 
   994     0593                     NCO1CLK         equ	1427	;# 
   995     059C                     TMR0L           equ	1436	;# 
   996     059C                     TMR0            equ	1436	;# 
   997     059D                     TMR0H           equ	1437	;# 
   998     059D                     PR0             equ	1437	;# 
   999     059E                     T0CON0          equ	1438	;# 
  1000     059F                     T0CON1          equ	1439	;# 
  1001     060C                     CWG1CLKCON      equ	1548	;# 
  1002     060D                     CWG1DAT         equ	1549	;# 
  1003     060E                     CWG1DBR         equ	1550	;# 
  1004     060F                     CWG1DBF         equ	1551	;# 
  1005     0610                     CWG1CON0        equ	1552	;# 
  1006     0611                     CWG1CON1        equ	1553	;# 
  1007     0612                     CWG1AS0         equ	1554	;# 
  1008     0613                     CWG1AS1         equ	1555	;# 
  1009     0614                     CWG1STR         equ	1556	;# 
  1010     070C                     PIR0            equ	1804	;# 
  1011     070D                     PIR1            equ	1805	;# 
  1012     070E                     PIR2            equ	1806	;# 
  1013     070F                     PIR3            equ	1807	;# 
  1014     0710                     PIR4            equ	1808	;# 
  1015     0711                     PIR5            equ	1809	;# 
  1016     0712                     PIR6            equ	1810	;# 
  1017     0713                     PIR7            equ	1811	;# 
  1018     0716                     PIE0            equ	1814	;# 
  1019     0717                     PIE1            equ	1815	;# 
  1020     0718                     PIE2            equ	1816	;# 
  1021     0719                     PIE3            equ	1817	;# 
  1022     071A                     PIE4            equ	1818	;# 
  1023     071B                     PIE5            equ	1819	;# 
  1024     071C                     PIE6            equ	1820	;# 
  1025     071D                     PIE7            equ	1821	;# 
  1026     0796                     PMD0            equ	1942	;# 
  1027     0797                     PMD1            equ	1943	;# 
  1028     0798                     PMD2            equ	1944	;# 
  1029     0799                     PMD3            equ	1945	;# 
  1030     079A                     PMD4            equ	1946	;# 
  1031     079B                     PMD5            equ	1947	;# 
  1032     080C                     WDTCON0         equ	2060	;# 
  1033     080D                     WDTCON1         equ	2061	;# 
  1034     080E                     WDTPSL          equ	2062	;# 
  1035     080F                     WDTPSH          equ	2063	;# 
  1036     0810                     WDTTMR          equ	2064	;# 
  1037     0811                     BORCON          equ	2065	;# 
  1038     0812                     VREGCON         equ	2066	;# 
  1039     0813                     PCON0           equ	2067	;# 
  1040     0814                     PCON1           equ	2068	;# 
  1041     081A                     NVMADR          equ	2074	;# 
  1042     081A                     NVMADRL         equ	2074	;# 
  1043     081B                     NVMADRH         equ	2075	;# 
  1044     081C                     NVMDAT          equ	2076	;# 
  1045     081C                     NVMDATL         equ	2076	;# 
  1046     081D                     NVMDATH         equ	2077	;# 
  1047     081E                     NVMCON1         equ	2078	;# 
  1048     081F                     NVMCON2         equ	2079	;# 
  1049     088C                     CPUDOZE         equ	2188	;# 
  1050     088D                     OSCCON1         equ	2189	;# 
  1051     088E                     OSCCON2         equ	2190	;# 
  1052     088F                     OSCCON3         equ	2191	;# 
  1053     0890                     OSCSTAT         equ	2192	;# 
  1054     0891                     OSCEN           equ	2193	;# 
  1055     0892                     OSCTUNE         equ	2194	;# 
  1056     0893                     OSCFRQ          equ	2195	;# 
  1057     0895                     CLKRCON         equ	2197	;# 
  1058     0896                     CLKRCLK         equ	2198	;# 
  1059     090C                     FVRCON          equ	2316	;# 
  1060     090E                     DAC1CON0        equ	2318	;# 
  1061     090F                     DAC1CON1        equ	2319	;# 
  1062     091F                     ZCDCON          equ	2335	;# 
  1063     098F                     CMOUT           equ	2447	;# 
  1064     098F                     CMSTAT          equ	2447	;# 
  1065     0990                     CM1CON0         equ	2448	;# 
  1066     0991                     CM1CON1         equ	2449	;# 
  1067     0992                     CM1NCH          equ	2450	;# 
  1068     0993                     CM1PCH          equ	2451	;# 
  1069     1E0F                     CLCDATA         equ	7695	;# 
  1070     1E10                     CLC1CON         equ	7696	;# 
  1071     1E11                     CLC1POL         equ	7697	;# 
  1072     1E12                     CLC1SEL0        equ	7698	;# 
  1073     1E13                     CLC1SEL1        equ	7699	;# 
  1074     1E14                     CLC1SEL2        equ	7700	;# 
  1075     1E15                     CLC1SEL3        equ	7701	;# 
  1076     1E16                     CLC1GLS0        equ	7702	;# 
  1077     1E17                     CLC1GLS1        equ	7703	;# 
  1078     1E18                     CLC1GLS2        equ	7704	;# 
  1079     1E19                     CLC1GLS3        equ	7705	;# 
  1080     1E1A                     CLC2CON         equ	7706	;# 
  1081     1E1B                     CLC2POL         equ	7707	;# 
  1082     1E1C                     CLC2SEL0        equ	7708	;# 
  1083     1E1D                     CLC2SEL1        equ	7709	;# 
  1084     1E1E                     CLC2SEL2        equ	7710	;# 
  1085     1E1F                     CLC2SEL3        equ	7711	;# 
  1086     1E20                     CLC2GLS0        equ	7712	;# 
  1087     1E21                     CLC2GLS1        equ	7713	;# 
  1088     1E22                     CLC2GLS2        equ	7714	;# 
  1089     1E23                     CLC2GLS3        equ	7715	;# 
  1090     1E24                     CLC3CON         equ	7716	;# 
  1091     1E25                     CLC3POL         equ	7717	;# 
  1092     1E26                     CLC3SEL0        equ	7718	;# 
  1093     1E27                     CLC3SEL1        equ	7719	;# 
  1094     1E28                     CLC3SEL2        equ	7720	;# 
  1095     1E29                     CLC3SEL3        equ	7721	;# 
  1096     1E2A                     CLC3GLS0        equ	7722	;# 
  1097     1E2B                     CLC3GLS1        equ	7723	;# 
  1098     1E2C                     CLC3GLS2        equ	7724	;# 
  1099     1E2D                     CLC3GLS3        equ	7725	;# 
  1100     1E2E                     CLC4CON         equ	7726	;# 
  1101     1E2F                     CLC4POL         equ	7727	;# 
  1102     1E30                     CLC4SEL0        equ	7728	;# 
  1103     1E31                     CLC4SEL1        equ	7729	;# 
  1104     1E32                     CLC4SEL2        equ	7730	;# 
  1105     1E33                     CLC4SEL3        equ	7731	;# 
  1106     1E34                     CLC4GLS0        equ	7732	;# 
  1107     1E35                     CLC4GLS1        equ	7733	;# 
  1108     1E36                     CLC4GLS2        equ	7734	;# 
  1109     1E37                     CLC4GLS3        equ	7735	;# 
  1110     1E8F                     PPSLOCK         equ	7823	;# 
  1111     1E90                     INTPPS          equ	7824	;# 
  1112     1E91                     T0CKIPPS        equ	7825	;# 
  1113     1E92                     T1CKIPPS        equ	7826	;# 
  1114     1E93                     T1GPPS          equ	7827	;# 
  1115     1E9C                     T2INPPS         equ	7836	;# 
  1116     1EA1                     CCP1PPS         equ	7841	;# 
  1117     1EA2                     CCP2PPS         equ	7842	;# 
  1118     1EB1                     CWG1PPS         equ	7857	;# 
  1119     1EBB                     CLCIN0PPS       equ	7867	;# 
  1120     1EBC                     CLCIN1PPS       equ	7868	;# 
  1121     1EBD                     CLCIN2PPS       equ	7869	;# 
  1122     1EBE                     CLCIN3PPS       equ	7870	;# 
  1123     1EC3                     ADACTPPS        equ	7875	;# 
  1124     1EC5                     SSP1CLKPPS      equ	7877	;# 
  1125     1EC6                     SSP1DATPPS      equ	7878	;# 
  1126     1EC7                     SSP1SSPPS       equ	7879	;# 
  1127     1ECB                     RX1DTPPS        equ	7883	;# 
  1128     1ECC                     TX1CKPPS        equ	7884	;# 
  1129     1F10                     RA0PPS          equ	7952	;# 
  1130     1F11                     RA1PPS          equ	7953	;# 
  1131     1F12                     RA2PPS          equ	7954	;# 
  1132     1F13                     RA3PPS          equ	7955	;# 
  1133     1F14                     RA4PPS          equ	7956	;# 
  1134     1F15                     RA5PPS          equ	7957	;# 
  1135     1F38                     ANSELA          equ	7992	;# 
  1136     1F39                     WPUA            equ	7993	;# 
  1137     1F3A                     ODCONA          equ	7994	;# 
  1138     1F3B                     SLRCONA         equ	7995	;# 
  1139     1F3C                     INLVLA          equ	7996	;# 
  1140     1F3D                     IOCAP           equ	7997	;# 
  1141     1F3E                     IOCAN           equ	7998	;# 
  1142     1F3F                     IOCAF           equ	7999	;# 
  1143     1FE4                     STATUS_SHAD     equ	8164	;# 
  1144     1FE5                     WREG_SHAD       equ	8165	;# 
  1145     1FE6                     BSR_SHAD        equ	8166	;# 
  1146     1FE7                     PCLATH_SHAD     equ	8167	;# 
  1147     1FE8                     FSR0_SHAD       equ	8168	;# 
  1148     1FE8                     FSR0L_SHAD      equ	8168	;# 
  1149     1FE9                     FSR0H_SHAD      equ	8169	;# 
  1150     1FEA                     FSR1_SHAD       equ	8170	;# 
  1151     1FEA                     FSR1L_SHAD      equ	8170	;# 
  1152     1FEB                     FSR1H_SHAD      equ	8171	;# 
  1153     1FED                     STKPTR          equ	8173	;# 
  1154     1FEE                     TOSL            equ	8174	;# 
  1155     1FEF                     TOSH            equ	8175	;# 
  1156     0000                     INDF0           equ	0	;# 
  1157     0001                     INDF1           equ	1	;# 
  1158     0002                     PCL             equ	2	;# 
  1159     0003                     STATUS          equ	3	;# 
  1160     0004                     FSR0L           equ	4	;# 
  1161     0005                     FSR0H           equ	5	;# 
  1162     0006                     FSR1L           equ	6	;# 
  1163     0007                     FSR1H           equ	7	;# 
  1164     0008                     BSR             equ	8	;# 
  1165     0009                     WREG            equ	9	;# 
  1166     000A                     PCLATH          equ	10	;# 
  1167     000B                     INTCON          equ	11	;# 
  1168     000C                     PORTA           equ	12	;# 
  1169     0012                     TRISA           equ	18	;# 
  1170     0018                     LATA            equ	24	;# 
  1171     009B                     ADRES           equ	155	;# 
  1172     009B                     ADRESL          equ	155	;# 
  1173     009C                     ADRESH          equ	156	;# 
  1174     009D                     ADCON0          equ	157	;# 
  1175     009E                     ADCON1          equ	158	;# 
  1176     009F                     ADACT           equ	159	;# 
  1177     0119                     RC1REG          equ	281	;# 
  1178     0119                     RCREG           equ	281	;# 
  1179     0119                     RCREG1          equ	281	;# 
  1180     011A                     TX1REG          equ	282	;# 
  1181     011A                     TXREG1          equ	282	;# 
  1182     011A                     TXREG           equ	282	;# 
  1183     011B                     SP1BRG          equ	283	;# 
  1184     011B                     SPBRG           equ	283	;# 
  1185     011B                     SP1BRGL         equ	283	;# 
  1186     011B                     SPBRG1          equ	283	;# 
  1187     011B                     SPBRGL          equ	283	;# 
  1188     011C                     SP1BRGH         equ	284	;# 
  1189     011C                     SPBRGH          equ	284	;# 
  1190     011C                     SPBRGH1         equ	284	;# 
  1191     011D                     RC1STA          equ	285	;# 
  1192     011D                     RCSTA1          equ	285	;# 
  1193     011D                     RCSTA           equ	285	;# 
  1194     011E                     TX1STA          equ	286	;# 
  1195     011E                     TXSTA1          equ	286	;# 
  1196     011E                     TXSTA           equ	286	;# 
  1197     011F                     BAUD1CON        equ	287	;# 
  1198     011F                     BAUDCON1        equ	287	;# 
  1199     011F                     BAUDCTL1        equ	287	;# 
  1200     011F                     BAUDCON         equ	287	;# 
  1201     011F                     BAUDCTL         equ	287	;# 
  1202     018C                     SSP1BUF         equ	396	;# 
  1203     018D                     SSP1ADD         equ	397	;# 
  1204     018E                     SSP1MSK         equ	398	;# 
  1205     018F                     SSP1STAT        equ	399	;# 
  1206     0190                     SSP1CON1        equ	400	;# 
  1207     0191                     SSP1CON2        equ	401	;# 
  1208     0192                     SSP1CON3        equ	402	;# 
  1209     020C                     TMR1            equ	524	;# 
  1210     020C                     TMR1L           equ	524	;# 
  1211     020D                     TMR1H           equ	525	;# 
  1212     020E                     T1CON           equ	526	;# 
  1213     020F                     T1GCON          equ	527	;# 
  1214     020F                     PR1             equ	527	;# 
  1215     0210                     T1GATE          equ	528	;# 
  1216     0210                     TMR1GATE        equ	528	;# 
  1217     0211                     T1CLK           equ	529	;# 
  1218     0211                     TMR1CLK         equ	529	;# 
  1219     028C                     T2TMR           equ	652	;# 
  1220     028C                     TMR2            equ	652	;# 
  1221     028D                     T2PR            equ	653	;# 
  1222     028D                     PR2             equ	653	;# 
  1223     028E                     T2CON           equ	654	;# 
  1224     028F                     T2HLT           equ	655	;# 
  1225     0290                     T2CLKCON        equ	656	;# 
  1226     0291                     T2RST           equ	657	;# 
  1227     030C                     CCPR1           equ	780	;# 
  1228     030C                     CCPR1L          equ	780	;# 
  1229     030D                     CCPR1H          equ	781	;# 
  1230     030E                     CCP1CON         equ	782	;# 
  1231     030F                     CCP1CAP         equ	783	;# 
  1232     0310                     CCPR2           equ	784	;# 
  1233     0310                     CCPR2L          equ	784	;# 
  1234     0311                     CCPR2H          equ	785	;# 
  1235     0312                     CCP2CON         equ	786	;# 
  1236     0313                     CCP2CAP         equ	787	;# 
  1237     0314                     PWM3DC          equ	788	;# 
  1238     0314                     PWM3DCL         equ	788	;# 
  1239     0315                     PWM3DCH         equ	789	;# 
  1240     0316                     PWM3CON         equ	790	;# 
  1241     0318                     PWM4DC          equ	792	;# 
  1242     0318                     PWM4DCL         equ	792	;# 
  1243     0319                     PWM4DCH         equ	793	;# 
  1244     031A                     PWM4CON         equ	794	;# 
  1245     031C                     PWM5DC          equ	796	;# 
  1246     031C                     PWM5DCL         equ	796	;# 
  1247     031D                     PWM5DCH         equ	797	;# 
  1248     031E                     PWM5CON         equ	798	;# 
  1249     038C                     PWM6DC          equ	908	;# 
  1250     038C                     PWM6DCL         equ	908	;# 
  1251     038D                     PWM6DCH         equ	909	;# 
  1252     038E                     PWM6CON         equ	910	;# 
  1253     058C                     NCO1ACC         equ	1420	;# 
  1254     058C                     NCO1ACCL        equ	1420	;# 
  1255     058D                     NCO1ACCH        equ	1421	;# 
  1256     058E                     NCO1ACCU        equ	1422	;# 
  1257     058F                     NCO1INC         equ	1423	;# 
  1258     058F                     NCO1INCL        equ	1423	;# 
  1259     0590                     NCO1INCH        equ	1424	;# 
  1260     0591                     NCO1INCU        equ	1425	;# 
  1261     0592                     NCO1CON         equ	1426	;# 
  1262     0593                     NCO1CLK         equ	1427	;# 
  1263     059C                     TMR0L           equ	1436	;# 
  1264     059C                     TMR0            equ	1436	;# 
  1265     059D                     TMR0H           equ	1437	;# 
  1266     059D                     PR0             equ	1437	;# 
  1267     059E                     T0CON0          equ	1438	;# 
  1268     059F                     T0CON1          equ	1439	;# 
  1269     060C                     CWG1CLKCON      equ	1548	;# 
  1270     060D                     CWG1DAT         equ	1549	;# 
  1271     060E                     CWG1DBR         equ	1550	;# 
  1272     060F                     CWG1DBF         equ	1551	;# 
  1273     0610                     CWG1CON0        equ	1552	;# 
  1274     0611                     CWG1CON1        equ	1553	;# 
  1275     0612                     CWG1AS0         equ	1554	;# 
  1276     0613                     CWG1AS1         equ	1555	;# 
  1277     0614                     CWG1STR         equ	1556	;# 
  1278     070C                     PIR0            equ	1804	;# 
  1279     070D                     PIR1            equ	1805	;# 
  1280     070E                     PIR2            equ	1806	;# 
  1281     070F                     PIR3            equ	1807	;# 
  1282     0710                     PIR4            equ	1808	;# 
  1283     0711                     PIR5            equ	1809	;# 
  1284     0712                     PIR6            equ	1810	;# 
  1285     0713                     PIR7            equ	1811	;# 
  1286     0716                     PIE0            equ	1814	;# 
  1287     0717                     PIE1            equ	1815	;# 
  1288     0718                     PIE2            equ	1816	;# 
  1289     0719                     PIE3            equ	1817	;# 
  1290     071A                     PIE4            equ	1818	;# 
  1291     071B                     PIE5            equ	1819	;# 
  1292     071C                     PIE6            equ	1820	;# 
  1293     071D                     PIE7            equ	1821	;# 
  1294     0796                     PMD0            equ	1942	;# 
  1295     0797                     PMD1            equ	1943	;# 
  1296     0798                     PMD2            equ	1944	;# 
  1297     0799                     PMD3            equ	1945	;# 
  1298     079A                     PMD4            equ	1946	;# 
  1299     079B                     PMD5            equ	1947	;# 
  1300     080C                     WDTCON0         equ	2060	;# 
  1301     080D                     WDTCON1         equ	2061	;# 
  1302     080E                     WDTPSL          equ	2062	;# 
  1303     080F                     WDTPSH          equ	2063	;# 
  1304     0810                     WDTTMR          equ	2064	;# 
  1305     0811                     BORCON          equ	2065	;# 
  1306     0812                     VREGCON         equ	2066	;# 
  1307     0813                     PCON0           equ	2067	;# 
  1308     0814                     PCON1           equ	2068	;# 
  1309     081A                     NVMADR          equ	2074	;# 
  1310     081A                     NVMADRL         equ	2074	;# 
  1311     081B                     NVMADRH         equ	2075	;# 
  1312     081C                     NVMDAT          equ	2076	;# 
  1313     081C                     NVMDATL         equ	2076	;# 
  1314     081D                     NVMDATH         equ	2077	;# 
  1315     081E                     NVMCON1         equ	2078	;# 
  1316     081F                     NVMCON2         equ	2079	;# 
  1317     088C                     CPUDOZE         equ	2188	;# 
  1318     088D                     OSCCON1         equ	2189	;# 
  1319     088E                     OSCCON2         equ	2190	;# 
  1320     088F                     OSCCON3         equ	2191	;# 
  1321     0890                     OSCSTAT         equ	2192	;# 
  1322     0891                     OSCEN           equ	2193	;# 
  1323     0892                     OSCTUNE         equ	2194	;# 
  1324     0893                     OSCFRQ          equ	2195	;# 
  1325     0895                     CLKRCON         equ	2197	;# 
  1326     0896                     CLKRCLK         equ	2198	;# 
  1327     090C                     FVRCON          equ	2316	;# 
  1328     090E                     DAC1CON0        equ	2318	;# 
  1329     090F                     DAC1CON1        equ	2319	;# 
  1330     091F                     ZCDCON          equ	2335	;# 
  1331     098F                     CMOUT           equ	2447	;# 
  1332     098F                     CMSTAT          equ	2447	;# 
  1333     0990                     CM1CON0         equ	2448	;# 
  1334     0991                     CM1CON1         equ	2449	;# 
  1335     0992                     CM1NCH          equ	2450	;# 
  1336     0993                     CM1PCH          equ	2451	;# 
  1337     1E0F                     CLCDATA         equ	7695	;# 
  1338     1E10                     CLC1CON         equ	7696	;# 
  1339     1E11                     CLC1POL         equ	7697	;# 
  1340     1E12                     CLC1SEL0        equ	7698	;# 
  1341     1E13                     CLC1SEL1        equ	7699	;# 
  1342     1E14                     CLC1SEL2        equ	7700	;# 
  1343     1E15                     CLC1SEL3        equ	7701	;# 
  1344     1E16                     CLC1GLS0        equ	7702	;# 
  1345     1E17                     CLC1GLS1        equ	7703	;# 
  1346     1E18                     CLC1GLS2        equ	7704	;# 
  1347     1E19                     CLC1GLS3        equ	7705	;# 
  1348     1E1A                     CLC2CON         equ	7706	;# 
  1349     1E1B                     CLC2POL         equ	7707	;# 
  1350     1E1C                     CLC2SEL0        equ	7708	;# 
  1351     1E1D                     CLC2SEL1        equ	7709	;# 
  1352     1E1E                     CLC2SEL2        equ	7710	;# 
  1353     1E1F                     CLC2SEL3        equ	7711	;# 
  1354     1E20                     CLC2GLS0        equ	7712	;# 
  1355     1E21                     CLC2GLS1        equ	7713	;# 
  1356     1E22                     CLC2GLS2        equ	7714	;# 
  1357     1E23                     CLC2GLS3        equ	7715	;# 
  1358     1E24                     CLC3CON         equ	7716	;# 
  1359     1E25                     CLC3POL         equ	7717	;# 
  1360     1E26                     CLC3SEL0        equ	7718	;# 
  1361     1E27                     CLC3SEL1        equ	7719	;# 
  1362     1E28                     CLC3SEL2        equ	7720	;# 
  1363     1E29                     CLC3SEL3        equ	7721	;# 
  1364     1E2A                     CLC3GLS0        equ	7722	;# 
  1365     1E2B                     CLC3GLS1        equ	7723	;# 
  1366     1E2C                     CLC3GLS2        equ	7724	;# 
  1367     1E2D                     CLC3GLS3        equ	7725	;# 
  1368     1E2E                     CLC4CON         equ	7726	;# 
  1369     1E2F                     CLC4POL         equ	7727	;# 
  1370     1E30                     CLC4SEL0        equ	7728	;# 
  1371     1E31                     CLC4SEL1        equ	7729	;# 
  1372     1E32                     CLC4SEL2        equ	7730	;# 
  1373     1E33                     CLC4SEL3        equ	7731	;# 
  1374     1E34                     CLC4GLS0        equ	7732	;# 
  1375     1E35                     CLC4GLS1        equ	7733	;# 
  1376     1E36                     CLC4GLS2        equ	7734	;# 
  1377     1E37                     CLC4GLS3        equ	7735	;# 
  1378     1E8F                     PPSLOCK         equ	7823	;# 
  1379     1E90                     INTPPS          equ	7824	;# 
  1380     1E91                     T0CKIPPS        equ	7825	;# 
  1381     1E92                     T1CKIPPS        equ	7826	;# 
  1382     1E93                     T1GPPS          equ	7827	;# 
  1383     1E9C                     T2INPPS         equ	7836	;# 
  1384     1EA1                     CCP1PPS         equ	7841	;# 
  1385     1EA2                     CCP2PPS         equ	7842	;# 
  1386     1EB1                     CWG1PPS         equ	7857	;# 
  1387     1EBB                     CLCIN0PPS       equ	7867	;# 
  1388     1EBC                     CLCIN1PPS       equ	7868	;# 
  1389     1EBD                     CLCIN2PPS       equ	7869	;# 
  1390     1EBE                     CLCIN3PPS       equ	7870	;# 
  1391     1EC3                     ADACTPPS        equ	7875	;# 
  1392     1EC5                     SSP1CLKPPS      equ	7877	;# 
  1393     1EC6                     SSP1DATPPS      equ	7878	;# 
  1394     1EC7                     SSP1SSPPS       equ	7879	;# 
  1395     1ECB                     RX1DTPPS        equ	7883	;# 
  1396     1ECC                     TX1CKPPS        equ	7884	;# 
  1397     1F10                     RA0PPS          equ	7952	;# 
  1398     1F11                     RA1PPS          equ	7953	;# 
  1399     1F12                     RA2PPS          equ	7954	;# 
  1400     1F13                     RA3PPS          equ	7955	;# 
  1401     1F14                     RA4PPS          equ	7956	;# 
  1402     1F15                     RA5PPS          equ	7957	;# 
  1403     1F38                     ANSELA          equ	7992	;# 
  1404     1F39                     WPUA            equ	7993	;# 
  1405     1F3A                     ODCONA          equ	7994	;# 
  1406     1F3B                     SLRCONA         equ	7995	;# 
  1407     1F3C                     INLVLA          equ	7996	;# 
  1408     1F3D                     IOCAP           equ	7997	;# 
  1409     1F3E                     IOCAN           equ	7998	;# 
  1410     1F3F                     IOCAF           equ	7999	;# 
  1411     1FE4                     STATUS_SHAD     equ	8164	;# 
  1412     1FE5                     WREG_SHAD       equ	8165	;# 
  1413     1FE6                     BSR_SHAD        equ	8166	;# 
  1414     1FE7                     PCLATH_SHAD     equ	8167	;# 
  1415     1FE8                     FSR0_SHAD       equ	8168	;# 
  1416     1FE8                     FSR0L_SHAD      equ	8168	;# 
  1417     1FE9                     FSR0H_SHAD      equ	8169	;# 
  1418     1FEA                     FSR1_SHAD       equ	8170	;# 
  1419     1FEA                     FSR1L_SHAD      equ	8170	;# 
  1420     1FEB                     FSR1H_SHAD      equ	8171	;# 
  1421     1FED                     STKPTR          equ	8173	;# 
  1422     1FEE                     TOSL            equ	8174	;# 
  1423     1FEF                     TOSH            equ	8175	;# 
  1424     0000                     INDF0           equ	0	;# 
  1425     0001                     INDF1           equ	1	;# 
  1426     0002                     PCL             equ	2	;# 
  1427     0003                     STATUS          equ	3	;# 
  1428     0004                     FSR0L           equ	4	;# 
  1429     0005                     FSR0H           equ	5	;# 
  1430     0006                     FSR1L           equ	6	;# 
  1431     0007                     FSR1H           equ	7	;# 
  1432     0008                     BSR             equ	8	;# 
  1433     0009                     WREG            equ	9	;# 
  1434     000A                     PCLATH          equ	10	;# 
  1435     000B                     INTCON          equ	11	;# 
  1436     000C                     PORTA           equ	12	;# 
  1437     0012                     TRISA           equ	18	;# 
  1438     0018                     LATA            equ	24	;# 
  1439     009B                     ADRES           equ	155	;# 
  1440     009B                     ADRESL          equ	155	;# 
  1441     009C                     ADRESH          equ	156	;# 
  1442     009D                     ADCON0          equ	157	;# 
  1443     009E                     ADCON1          equ	158	;# 
  1444     009F                     ADACT           equ	159	;# 
  1445     0119                     RC1REG          equ	281	;# 
  1446     0119                     RCREG           equ	281	;# 
  1447     0119                     RCREG1          equ	281	;# 
  1448     011A                     TX1REG          equ	282	;# 
  1449     011A                     TXREG1          equ	282	;# 
  1450     011A                     TXREG           equ	282	;# 
  1451     011B                     SP1BRG          equ	283	;# 
  1452     011B                     SPBRG           equ	283	;# 
  1453     011B                     SP1BRGL         equ	283	;# 
  1454     011B                     SPBRG1          equ	283	;# 
  1455     011B                     SPBRGL          equ	283	;# 
  1456     011C                     SP1BRGH         equ	284	;# 
  1457     011C                     SPBRGH          equ	284	;# 
  1458     011C                     SPBRGH1         equ	284	;# 
  1459     011D                     RC1STA          equ	285	;# 
  1460     011D                     RCSTA1          equ	285	;# 
  1461     011D                     RCSTA           equ	285	;# 
  1462     011E                     TX1STA          equ	286	;# 
  1463     011E                     TXSTA1          equ	286	;# 
  1464     011E                     TXSTA           equ	286	;# 
  1465     011F                     BAUD1CON        equ	287	;# 
  1466     011F                     BAUDCON1        equ	287	;# 
  1467     011F                     BAUDCTL1        equ	287	;# 
  1468     011F                     BAUDCON         equ	287	;# 
  1469     011F                     BAUDCTL         equ	287	;# 
  1470     018C                     SSP1BUF         equ	396	;# 
  1471     018D                     SSP1ADD         equ	397	;# 
  1472     018E                     SSP1MSK         equ	398	;# 
  1473     018F                     SSP1STAT        equ	399	;# 
  1474     0190                     SSP1CON1        equ	400	;# 
  1475     0191                     SSP1CON2        equ	401	;# 
  1476     0192                     SSP1CON3        equ	402	;# 
  1477     020C                     TMR1            equ	524	;# 
  1478     020C                     TMR1L           equ	524	;# 
  1479     020D                     TMR1H           equ	525	;# 
  1480     020E                     T1CON           equ	526	;# 
  1481     020F                     T1GCON          equ	527	;# 
  1482     020F                     PR1             equ	527	;# 
  1483     0210                     T1GATE          equ	528	;# 
  1484     0210                     TMR1GATE        equ	528	;# 
  1485     0211                     T1CLK           equ	529	;# 
  1486     0211                     TMR1CLK         equ	529	;# 
  1487     028C                     T2TMR           equ	652	;# 
  1488     028C                     TMR2            equ	652	;# 
  1489     028D                     T2PR            equ	653	;# 
  1490     028D                     PR2             equ	653	;# 
  1491     028E                     T2CON           equ	654	;# 
  1492     028F                     T2HLT           equ	655	;# 
  1493     0290                     T2CLKCON        equ	656	;# 
  1494     0291                     T2RST           equ	657	;# 
  1495     030C                     CCPR1           equ	780	;# 
  1496     030C                     CCPR1L          equ	780	;# 
  1497     030D                     CCPR1H          equ	781	;# 
  1498     030E                     CCP1CON         equ	782	;# 
  1499     030F                     CCP1CAP         equ	783	;# 
  1500     0310                     CCPR2           equ	784	;# 
  1501     0310                     CCPR2L          equ	784	;# 
  1502     0311                     CCPR2H          equ	785	;# 
  1503     0312                     CCP2CON         equ	786	;# 
  1504     0313                     CCP2CAP         equ	787	;# 
  1505     0314                     PWM3DC          equ	788	;# 
  1506     0314                     PWM3DCL         equ	788	;# 
  1507     0315                     PWM3DCH         equ	789	;# 
  1508     0316                     PWM3CON         equ	790	;# 
  1509     0318                     PWM4DC          equ	792	;# 
  1510     0318                     PWM4DCL         equ	792	;# 
  1511     0319                     PWM4DCH         equ	793	;# 
  1512     031A                     PWM4CON         equ	794	;# 
  1513     031C                     PWM5DC          equ	796	;# 
  1514     031C                     PWM5DCL         equ	796	;# 
  1515     031D                     PWM5DCH         equ	797	;# 
  1516     031E                     PWM5CON         equ	798	;# 
  1517     038C                     PWM6DC          equ	908	;# 
  1518     038C                     PWM6DCL         equ	908	;# 
  1519     038D                     PWM6DCH         equ	909	;# 
  1520     038E                     PWM6CON         equ	910	;# 
  1521     058C                     NCO1ACC         equ	1420	;# 
  1522     058C                     NCO1ACCL        equ	1420	;# 
  1523     058D                     NCO1ACCH        equ	1421	;# 
  1524     058E                     NCO1ACCU        equ	1422	;# 
  1525     058F                     NCO1INC         equ	1423	;# 
  1526     058F                     NCO1INCL        equ	1423	;# 
  1527     0590                     NCO1INCH        equ	1424	;# 
  1528     0591                     NCO1INCU        equ	1425	;# 
  1529     0592                     NCO1CON         equ	1426	;# 
  1530     0593                     NCO1CLK         equ	1427	;# 
  1531     059C                     TMR0L           equ	1436	;# 
  1532     059C                     TMR0            equ	1436	;# 
  1533     059D                     TMR0H           equ	1437	;# 
  1534     059D                     PR0             equ	1437	;# 
  1535     059E                     T0CON0          equ	1438	;# 
  1536     059F                     T0CON1          equ	1439	;# 
  1537     060C                     CWG1CLKCON      equ	1548	;# 
  1538     060D                     CWG1DAT         equ	1549	;# 
  1539     060E                     CWG1DBR         equ	1550	;# 
  1540     060F                     CWG1DBF         equ	1551	;# 
  1541     0610                     CWG1CON0        equ	1552	;# 
  1542     0611                     CWG1CON1        equ	1553	;# 
  1543     0612                     CWG1AS0         equ	1554	;# 
  1544     0613                     CWG1AS1         equ	1555	;# 
  1545     0614                     CWG1STR         equ	1556	;# 
  1546     070C                     PIR0            equ	1804	;# 
  1547     070D                     PIR1            equ	1805	;# 
  1548     070E                     PIR2            equ	1806	;# 
  1549     070F                     PIR3            equ	1807	;# 
  1550     0710                     PIR4            equ	1808	;# 
  1551     0711                     PIR5            equ	1809	;# 
  1552     0712                     PIR6            equ	1810	;# 
  1553     0713                     PIR7            equ	1811	;# 
  1554     0716                     PIE0            equ	1814	;# 
  1555     0717                     PIE1            equ	1815	;# 
  1556     0718                     PIE2            equ	1816	;# 
  1557     0719                     PIE3            equ	1817	;# 
  1558     071A                     PIE4            equ	1818	;# 
  1559     071B                     PIE5            equ	1819	;# 
  1560     071C                     PIE6            equ	1820	;# 
  1561     071D                     PIE7            equ	1821	;# 
  1562     0796                     PMD0            equ	1942	;# 
  1563     0797                     PMD1            equ	1943	;# 
  1564     0798                     PMD2            equ	1944	;# 
  1565     0799                     PMD3            equ	1945	;# 
  1566     079A                     PMD4            equ	1946	;# 
  1567     079B                     PMD5            equ	1947	;# 
  1568     080C                     WDTCON0         equ	2060	;# 
  1569     080D                     WDTCON1         equ	2061	;# 
  1570     080E                     WDTPSL          equ	2062	;# 
  1571     080F                     WDTPSH          equ	2063	;# 
  1572     0810                     WDTTMR          equ	2064	;# 
  1573     0811                     BORCON          equ	2065	;# 
  1574     0812                     VREGCON         equ	2066	;# 
  1575     0813                     PCON0           equ	2067	;# 
  1576     0814                     PCON1           equ	2068	;# 
  1577     081A                     NVMADR          equ	2074	;# 
  1578     081A                     NVMADRL         equ	2074	;# 
  1579     081B                     NVMADRH         equ	2075	;# 
  1580     081C                     NVMDAT          equ	2076	;# 
  1581     081C                     NVMDATL         equ	2076	;# 
  1582     081D                     NVMDATH         equ	2077	;# 
  1583     081E                     NVMCON1         equ	2078	;# 
  1584     081F                     NVMCON2         equ	2079	;# 
  1585     088C                     CPUDOZE         equ	2188	;# 
  1586     088D                     OSCCON1         equ	2189	;# 
  1587     088E                     OSCCON2         equ	2190	;# 
  1588     088F                     OSCCON3         equ	2191	;# 
  1589     0890                     OSCSTAT         equ	2192	;# 
  1590     0891                     OSCEN           equ	2193	;# 
  1591     0892                     OSCTUNE         equ	2194	;# 
  1592     0893                     OSCFRQ          equ	2195	;# 
  1593     0895                     CLKRCON         equ	2197	;# 
  1594     0896                     CLKRCLK         equ	2198	;# 
  1595     090C                     FVRCON          equ	2316	;# 
  1596     090E                     DAC1CON0        equ	2318	;# 
  1597     090F                     DAC1CON1        equ	2319	;# 
  1598     091F                     ZCDCON          equ	2335	;# 
  1599     098F                     CMOUT           equ	2447	;# 
  1600     098F                     CMSTAT          equ	2447	;# 
  1601     0990                     CM1CON0         equ	2448	;# 
  1602     0991                     CM1CON1         equ	2449	;# 
  1603     0992                     CM1NCH          equ	2450	;# 
  1604     0993                     CM1PCH          equ	2451	;# 
  1605     1E0F                     CLCDATA         equ	7695	;# 
  1606     1E10                     CLC1CON         equ	7696	;# 
  1607     1E11                     CLC1POL         equ	7697	;# 
  1608     1E12                     CLC1SEL0        equ	7698	;# 
  1609     1E13                     CLC1SEL1        equ	7699	;# 
  1610     1E14                     CLC1SEL2        equ	7700	;# 
  1611     1E15                     CLC1SEL3        equ	7701	;# 
  1612     1E16                     CLC1GLS0        equ	7702	;# 
  1613     1E17                     CLC1GLS1        equ	7703	;# 
  1614     1E18                     CLC1GLS2        equ	7704	;# 
  1615     1E19                     CLC1GLS3        equ	7705	;# 
  1616     1E1A                     CLC2CON         equ	7706	;# 
  1617     1E1B                     CLC2POL         equ	7707	;# 
  1618     1E1C                     CLC2SEL0        equ	7708	;# 
  1619     1E1D                     CLC2SEL1        equ	7709	;# 
  1620     1E1E                     CLC2SEL2        equ	7710	;# 
  1621     1E1F                     CLC2SEL3        equ	7711	;# 
  1622     1E20                     CLC2GLS0        equ	7712	;# 
  1623     1E21                     CLC2GLS1        equ	7713	;# 
  1624     1E22                     CLC2GLS2        equ	7714	;# 
  1625     1E23                     CLC2GLS3        equ	7715	;# 
  1626     1E24                     CLC3CON         equ	7716	;# 
  1627     1E25                     CLC3POL         equ	7717	;# 
  1628     1E26                     CLC3SEL0        equ	7718	;# 
  1629     1E27                     CLC3SEL1        equ	7719	;# 
  1630     1E28                     CLC3SEL2        equ	7720	;# 
  1631     1E29                     CLC3SEL3        equ	7721	;# 
  1632     1E2A                     CLC3GLS0        equ	7722	;# 
  1633     1E2B                     CLC3GLS1        equ	7723	;# 
  1634     1E2C                     CLC3GLS2        equ	7724	;# 
  1635     1E2D                     CLC3GLS3        equ	7725	;# 
  1636     1E2E                     CLC4CON         equ	7726	;# 
  1637     1E2F                     CLC4POL         equ	7727	;# 
  1638     1E30                     CLC4SEL0        equ	7728	;# 
  1639     1E31                     CLC4SEL1        equ	7729	;# 
  1640     1E32                     CLC4SEL2        equ	7730	;# 
  1641     1E33                     CLC4SEL3        equ	7731	;# 
  1642     1E34                     CLC4GLS0        equ	7732	;# 
  1643     1E35                     CLC4GLS1        equ	7733	;# 
  1644     1E36                     CLC4GLS2        equ	7734	;# 
  1645     1E37                     CLC4GLS3        equ	7735	;# 
  1646     1E8F                     PPSLOCK         equ	7823	;# 
  1647     1E90                     INTPPS          equ	7824	;# 
  1648     1E91                     T0CKIPPS        equ	7825	;# 
  1649     1E92                     T1CKIPPS        equ	7826	;# 
  1650     1E93                     T1GPPS          equ	7827	;# 
  1651     1E9C                     T2INPPS         equ	7836	;# 
  1652     1EA1                     CCP1PPS         equ	7841	;# 
  1653     1EA2                     CCP2PPS         equ	7842	;# 
  1654     1EB1                     CWG1PPS         equ	7857	;# 
  1655     1EBB                     CLCIN0PPS       equ	7867	;# 
  1656     1EBC                     CLCIN1PPS       equ	7868	;# 
  1657     1EBD                     CLCIN2PPS       equ	7869	;# 
  1658     1EBE                     CLCIN3PPS       equ	7870	;# 
  1659     1EC3                     ADACTPPS        equ	7875	;# 
  1660     1EC5                     SSP1CLKPPS      equ	7877	;# 
  1661     1EC6                     SSP1DATPPS      equ	7878	;# 
  1662     1EC7                     SSP1SSPPS       equ	7879	;# 
  1663     1ECB                     RX1DTPPS        equ	7883	;# 
  1664     1ECC                     TX1CKPPS        equ	7884	;# 
  1665     1F10                     RA0PPS          equ	7952	;# 
  1666     1F11                     RA1PPS          equ	7953	;# 
  1667     1F12                     RA2PPS          equ	7954	;# 
  1668     1F13                     RA3PPS          equ	7955	;# 
  1669     1F14                     RA4PPS          equ	7956	;# 
  1670     1F15                     RA5PPS          equ	7957	;# 
  1671     1F38                     ANSELA          equ	7992	;# 
  1672     1F39                     WPUA            equ	7993	;# 
  1673     1F3A                     ODCONA          equ	7994	;# 
  1674     1F3B                     SLRCONA         equ	7995	;# 
  1675     1F3C                     INLVLA          equ	7996	;# 
  1676     1F3D                     IOCAP           equ	7997	;# 
  1677     1F3E                     IOCAN           equ	7998	;# 
  1678     1F3F                     IOCAF           equ	7999	;# 
  1679     1FE4                     STATUS_SHAD     equ	8164	;# 
  1680     1FE5                     WREG_SHAD       equ	8165	;# 
  1681     1FE6                     BSR_SHAD        equ	8166	;# 
  1682     1FE7                     PCLATH_SHAD     equ	8167	;# 
  1683     1FE8                     FSR0_SHAD       equ	8168	;# 
  1684     1FE8                     FSR0L_SHAD      equ	8168	;# 
  1685     1FE9                     FSR0H_SHAD      equ	8169	;# 
  1686     1FEA                     FSR1_SHAD       equ	8170	;# 
  1687     1FEA                     FSR1L_SHAD      equ	8170	;# 
  1688     1FEB                     FSR1H_SHAD      equ	8171	;# 
  1689     1FED                     STKPTR          equ	8173	;# 
  1690     1FEE                     TOSL            equ	8174	;# 
  1691     1FEF                     TOSH            equ	8175	;# 
  1692                           
  1693 ;; Function _INT_DefaultInterruptHandler is unused but had its address taken
  1694     0000                     _INT_DefaultInterruptHandler equ	0
  1695                           
  1696 ;; Function _TMR0_Deinitialize is unused but had its address taken
  1697     0000                     _TMR0_Deinitialize equ	0
  1698                           
  1699 ;; Function _TMR0_CounterGet is unused but had its address taken
  1700     0000                     _TMR0_CounterGet equ	0
  1701                           
  1702 ;; Function _TMR0_CounterSet is unused but had its address taken
  1703     0000                     _TMR0_CounterSet equ	0
  1704                           
  1705 ;; Function _TMR0_PeriodSet is unused but had its address taken
  1706     0000                     _TMR0_PeriodSet equ	0
  1707                           
  1708 ;; Function _TMR0_PeriodGet is unused but had its address taken
  1709     0000                     _TMR0_PeriodGet equ	0
  1710                           
  1711 ;; Function _TMR0_MaxCountGet is unused but had its address taken
  1712     0000                     _TMR0_MaxCountGet equ	0
  1713                           
  1714                           	psect	idataCOMMON
  1715     0212                     __pidataCOMMON:
  1716                           
  1717                           ;initializer for _MinOnCycles_u08
  1718     0212  3406               	retlw	6
  1719                           
  1720                           	psect	idataBANK0
  1721     0210                     __pidataBANK0:
  1722                           
  1723                           ;initializer for _OffTime_u16
  1724     0210  34F4               	retlw	244
  1725     0211  3401               	retlw	1
  1726                           
  1727                           	psect	stringtext1
  1728     018D                     __pstringtext1:
  1729     018D                     _MainTimer:
  1730     018D  3476               	retlw	low _TMR0_Initialize
  1731     018E  3401               	retlw	high _TMR0_Initialize
  1732     018F  3400               	retlw	0
  1733     0190  3400               	retlw	0
  1734     0191  340A               	retlw	low _TMR0_Start
  1735     0192  3402               	retlw	high _TMR0_Start
  1736     0193  3407               	retlw	low _TMR0_Stop
  1737     0194  3402               	retlw	high _TMR0_Stop
  1738     0195  3400               	retlw	0
  1739     0196  3400               	retlw	0
  1740     0197  3400               	retlw	0
  1741     0198  3400               	retlw	0
  1742     0199  3400               	retlw	0
  1743     019A  3400               	retlw	0
  1744     019B  3400               	retlw	0
  1745     019C  3400               	retlw	0
  1746     019D  3400               	retlw	0
  1747     019E  3400               	retlw	0
  1748     019F  34F7               	retlw	low _TMR0_OverflowCallbackRegister
  1749     01A0  3401               	retlw	high _TMR0_OverflowCallbackRegister
  1750     01A1  3400               	retlw	0
  1751     01A2  3400               	retlw	0
  1752     01A3                     __end_of_MainTimer:
  1753                           
  1754                           	psect	nvBANK0
  1755     0020                     __pnvBANK0:
  1756     0020                     _TMR0_OverflowCallback:
  1757     0020                     	ds	2
  1758     0022                     _INT_InterruptHandler:
  1759     0022                     	ds	2
  1760     000C                     _PORTA          set	12
  1761     000C                     _PORTAbits      set	12
  1762     0018                     _LATAbits       set	24
  1763     0012                     _TRISA          set	18
  1764     0018                     _LATA           set	24
  1765     000B                     _INTCONbits     set	11
  1766     005F                     _GIE            set	95
  1767     059E                     _T0CON0bits     set	1438
  1768     059E                     _T0CON0         set	1438
  1769     059F                     _T0CON1         set	1439
  1770     059C                     _TMR0L          set	1436
  1771     059D                     _TMR0H          set	1437
  1772     0716                     _PIE0bits       set	1814
  1773     070C                     _PIR0bits       set	1804
  1774     38B4                     _IOCIE          set	14516
  1775     0892                     _OSCTUNE        set	2194
  1776     0893                     _OSCFRQ         set	2195
  1777     0891                     _OSCEN          set	2193
  1778     088F                     _OSCCON3        set	2191
  1779     088D                     _OSCCON1        set	2189
  1780     1F3F                     _IOCAF          set	7999
  1781     1F3E                     _IOCAN          set	7998
  1782     1F3D                     _IOCAP          set	7997
  1783     1F3C                     _INLVLA         set	7996
  1784     1F3B                     _SLRCONA        set	7995
  1785     1F3A                     _ODCONA         set	7994
  1786     1F39                     _WPUA           set	7993
  1787     1F38                     _ANSELA         set	7992
  1788     F9F2                     _IOCAN2         set	63986
  1789                           
  1790                           	psect	cinit
  1791     0019                     start_initialization:	
  1792                           ; #config settings
  1793                           
  1794     0019                     __initialization:
  1795                           
  1796                           ; Initialize objects allocated to COMMON
  1797     0019  3182  2212  3180   	fcall	__pidataCOMMON	;fetch initializer
  1798     001C  00FD               	movwf	__pdataCOMMON& (0+127)
  1799                           
  1800                           ; Initialize objects allocated to BANK0
  1801     001D  3182  2210  3180   	fcall	__pidataBANK0	;fetch initializer
  1802     0020  00A4               	movwf	__pdataBANK0& (0+127)
  1803     0021  3182  2211  3180   	fcall	__pidataBANK0+1	;fetch initializer
  1804     0024  00A5               	movwf	(__pdataBANK0+1)& (0+127)
  1805                           
  1806                           ; Clear objects allocated to COMMON
  1807     0025  01F0               	clrf	__pbssCOMMON& (0+127)
  1808     0026  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  1809     0027  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  1810     0028  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  1811     0029  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  1812     002A  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  1813     002B  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
  1814     002C  01F7               	clrf	(__pbssCOMMON+7)& (0+127)
  1815     002D  01F8               	clrf	(__pbssCOMMON+8)& (0+127)
  1816     002E  01F9               	clrf	(__pbssCOMMON+9)& (0+127)
  1817     002F  01FA               	clrf	(__pbssCOMMON+10)& (0+127)
  1818     0030                     end_of_initialization:	
  1819                           ;End of C runtime variable initialization code
  1820                           
  1821     0030                     __end_of__initialization:
  1822     0030  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1823     0031  0140               	movlb	0
  1824     0032  291D               	ljmp	_main	;jump to C main() function
  1825                           
  1826                           	psect	bssCOMMON
  1827     0070                     __pbssCOMMON:
  1828     0070                     _SwTimer_u16:
  1829     0070                     	ds	2
  1830     0072                     _tmr0PeriodCount:
  1831     0072                     	ds	2
  1832     0074                     Perform_LedPWM@PWMCnt:
  1833     0074                     	ds	1
  1834     0075                     _PowerFSM:
  1835     0075                     	ds	1
  1836     0076                     _BlinkFSM:
  1837     0076                     	ds	1
  1838     0077                     _WaitReedOnFlag_u8:
  1839     0077                     	ds	1
  1840     0078                     _RedIsOnFlag_u08:
  1841     0078                     	ds	1
  1842     0079                     _GreenIsOnFlag_u08:
  1843     0079                     	ds	1
  1844     007A                     _TimerFlag_u08:
  1845     007A                     	ds	1
  1846                           
  1847                           	psect	dataCOMMON
  1848     007D                     __pdataCOMMON:
  1849     007D                     _MinOnCycles_u08:
  1850     007D                     	ds	1
  1851                           
  1852                           	psect	dataBANK0
  1853     0024                     __pdataBANK0:
  1854     0024                     _OffTime_u16:
  1855     0024                     	ds	2
  1856                           
  1857                           	psect	cstackCOMMON
  1858     007B                     __pcstackCOMMON:
  1859     007B                     ?_INT_SetInterruptHandler:
  1860     007B                     ?_TMR0_ISR:	
  1861                           ; 1 bytes @ 0x0
  1862                           
  1863     007B                     ?_PIN_MANAGER_Initialize:	
  1864                           ; 1 bytes @ 0x0
  1865                           
  1866     007B                     ?_TMR0_Initialize:	
  1867                           ; 1 bytes @ 0x0
  1868                           
  1869     007B                     ?_TMR0_Start:	
  1870                           ; 1 bytes @ 0x0
  1871                           
  1872     007B                     ?_TMR0_Stop:	
  1873                           ; 1 bytes @ 0x0
  1874                           
  1875     007B                     ?_TMR0_OverflowCallbackRegister:	
  1876                           ; 1 bytes @ 0x0
  1877                           
  1878     007B                     ?_TMR0_DefaultOverflowCallback:	
  1879                           ; 1 bytes @ 0x0
  1880                           
  1881     007B                     ?_CLOCK_Initialize:	
  1882                           ; 1 bytes @ 0x0
  1883                           
  1884     007B                     ?_INTERRUPT_Initialize:	
  1885                           ; 1 bytes @ 0x0
  1886                           
  1887     007B                     ?_INTERRUPT_InterruptManager:	
  1888                           ; 1 bytes @ 0x0
  1889                           
  1890     007B                     ?_SYSTEM_Initialize:	
  1891                           ; 1 bytes @ 0x0
  1892                           
  1893     007B                     ?_MyTmr0:	
  1894                           ; 1 bytes @ 0x0
  1895                           
  1896     007B                     ?_SetActiveLedsOn:	
  1897                           ; 1 bytes @ 0x0
  1898                           
  1899     007B                     ?_SetLedsOff:	
  1900                           ; 1 bytes @ 0x0
  1901                           
  1902     007B                     ?_Perform_LedPWM:	
  1903                           ; 1 bytes @ 0x0
  1904                           
  1905     007B                     ?_HandlePowerOff:	
  1906                           ; 1 bytes @ 0x0
  1907                           
  1908     007B                     ?_Perform_BlinkFSM:	
  1909                           ; 1 bytes @ 0x0
  1910                           
  1911     007B                     ?_Perform_PowerFSM:	
  1912                           ; 1 bytes @ 0x0
  1913                           
  1914     007B                     ?_main:	
  1915                           ; 1 bytes @ 0x0
  1916                           
  1917     007B                     INT_SetInterruptHandler@InterruptHandler:	
  1918                           ; 2 bytes @ 0x0
  1919                           
  1920     007B                     TMR0_OverflowCallbackRegister@callbackHandler:	
  1921                           ; 2 bytes @ 0x0
  1922                           
  1923     007B                     ??_TMR0_ISR:	
  1924                           ; 2 bytes @ 0x0
  1925                           
  1926     007B                     ??_PIN_MANAGER_Initialize:	
  1927                           ; 1 bytes @ 0x0
  1928                           
  1929     007B                     ??_TMR0_Initialize:	
  1930                           ; 1 bytes @ 0x0
  1931                           
  1932     007B                     ??_TMR0_Start:	
  1933                           ; 1 bytes @ 0x0
  1934                           
  1935     007B                     ??_TMR0_Stop:	
  1936                           ; 1 bytes @ 0x0
  1937                           
  1938     007B                     ??_TMR0_DefaultOverflowCallback:	
  1939                           ; 1 bytes @ 0x0
  1940                           
  1941     007B                     ??_CLOCK_Initialize:	
  1942                           ; 1 bytes @ 0x0
  1943                           
  1944     007B                     ??_INTERRUPT_InterruptManager:	
  1945                           ; 1 bytes @ 0x0
  1946                           
  1947     007B                     ??_MyTmr0:	
  1948                           ; 1 bytes @ 0x0
  1949                           
  1950     007B                     ??_SetActiveLedsOn:	
  1951                           ; 1 bytes @ 0x0
  1952                           
  1953     007B                     ??_SetLedsOff:	
  1954                           ; 1 bytes @ 0x0
  1955                           
  1956     007B                     ??_Perform_LedPWM:	
  1957                           ; 1 bytes @ 0x0
  1958                           
  1959     007B                     ??_HandlePowerOff:	
  1960                           ; 1 bytes @ 0x0
  1961                           
  1962     007B                     ??_Perform_BlinkFSM:	
  1963                           ; 1 bytes @ 0x0
  1964                           
  1965     007B                     ??_Perform_PowerFSM:	
  1966                           ; 1 bytes @ 0x0
  1967                           
  1968                           
  1969                           ; 1 bytes @ 0x0
  1970     007B                     	ds	2
  1971     007D                     ??_INT_SetInterruptHandler:
  1972     007D                     ??_TMR0_OverflowCallbackRegister:	
  1973                           ; 1 bytes @ 0x2
  1974                           
  1975     007D                     ??_INTERRUPT_Initialize:	
  1976                           ; 1 bytes @ 0x2
  1977                           
  1978     007D                     ??_SYSTEM_Initialize:	
  1979                           ; 1 bytes @ 0x2
  1980                           
  1981     007D                     ??_main:	
  1982                           ; 1 bytes @ 0x2
  1983                           
  1984                           
  1985                           	psect	maintext
  1986     011D                     __pmaintext:	
  1987                           ; 1 bytes @ 0x2
  1988 ;;
  1989 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1990 ;;
  1991 ;; *************** function _main *****************
  1992 ;; Defined at:
  1993 ;;		line 272 in file "main.c"
  1994 ;; Parameters:    Size  Location     Type
  1995 ;;		None
  1996 ;; Auto vars:     Size  Location     Type
  1997 ;;		None
  1998 ;; Return value:  Size  Location     Type
  1999 ;;                  2  292[None  ] int 
  2000 ;; Registers used:
  2001 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2002 ;; Tracked objects:
  2003 ;;		On entry : B3F/0
  2004 ;;		On exit  : 0/0
  2005 ;;		Unchanged: 0/0
  2006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2007 ;;      Params:         0       0       0       0
  2008 ;;      Locals:         0       0       0       0
  2009 ;;      Temps:          0       0       0       0
  2010 ;;      Totals:         0       0       0       0
  2011 ;;Total ram usage:        0 bytes
  2012 ;; Hardware stack levels required when called: 6
  2013 ;; This function calls:
  2014 ;;		_Perform_BlinkFSM
  2015 ;;		_Perform_LedPWM
  2016 ;;		_Perform_PowerFSM
  2017 ;;		_SYSTEM_Initialize
  2018 ;;		_TMR0_OverflowCallbackRegister
  2019 ;;		_TMR0_Start
  2020 ;; This function is called by:
  2021 ;;		Startup code after reset
  2022 ;; This function uses a non-reentrant model
  2023 ;;
  2024                           
  2025     011D                     _main:	
  2026                           ;psect for function _main
  2027                           
  2028     011D                     l1294:	
  2029                           ;incstack = 0
  2030                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2031                           
  2032                           
  2033                           ;main.c: 274:   SYSTEM_Initialize();
  2034     011D  3181  21D8  3181   	fcall	_SYSTEM_Initialize
  2035                           
  2036                           ;main.c: 275:   TMR0_OverflowCallbackRegister(MyTmr0);
  2037     0120  300D               	movlw	low _MyTmr0
  2038     0121  00FB               	movwf	TMR0_OverflowCallbackRegister@callbackHandler
  2039     0122  3002               	movlw	high _MyTmr0
  2040     0123  00FC               	movwf	TMR0_OverflowCallbackRegister@callbackHandler+1
  2041     0124  3181  21F7  3181   	fcall	_TMR0_OverflowCallbackRegister
  2042     0127                     l1296:
  2043                           
  2044                           ;main.c: 276:   (INTCONbits.GIE = 1);
  2045     0127  178B               	bsf	11,7	;volatile
  2046     0128                     l1298:
  2047                           
  2048                           ;main.c: 277:   (INTCONbits.PEIE = 1);
  2049     0128  170B               	bsf	11,6	;volatile
  2050     0129                     l1300:
  2051                           
  2052                           ;main.c: 278:   TMR0_Start();
  2053     0129  3182  220A  3181   	fcall	_TMR0_Start
  2054     012C                     l1302:
  2055                           
  2056                           ;main.c: 280:   {;main.c: 281:     if (0 != TimerFlag_u08)
  2057     012C  087A               	movf	_TimerFlag_u08,w
  2058     012D  1903               	btfsc	3,2
  2059     012E  2930               	goto	u411
  2060     012F  2931               	goto	u410
  2061     0130                     u411:
  2062     0130  292C               	goto	l1302
  2063     0131                     u410:
  2064     0131                     l295:	
  2065                           ;main.c: 282:     {;main.c: 283:       do { LATAbits.LATA1 = 1; } while(0);
  2066                           
  2067     0131  0140               	movlb	0	; select bank0
  2068     0132  1498               	bsf	24,1	;volatile
  2069     0133                     l1304:
  2070                           
  2071                           ;main.c: 284:       TimerFlag_u08 = 0;
  2072     0133  01FA               	clrf	_TimerFlag_u08
  2073     0134                     l1306:
  2074                           
  2075                           ;main.c: 285:       if (0!=SwTimer_u16) SwTimer_u16--;
  2076     0134  0870               	movf	_SwTimer_u16,w
  2077     0135  0471               	iorwf	_SwTimer_u16+1,w
  2078     0136  1903               	btfsc	3,2
  2079     0137  2939               	goto	u421
  2080     0138  293A               	goto	u420
  2081     0139                     u421:
  2082     0139  293E               	goto	l1310
  2083     013A                     u420:
  2084     013A                     l1308:
  2085     013A  3001               	movlw	1
  2086     013B  02F0               	subwf	_SwTimer_u16,f
  2087     013C  3000               	movlw	0
  2088     013D  3BF1               	subwfb	_SwTimer_u16+1,f
  2089     013E                     l1310:
  2090                           
  2091                           ;main.c: 287:       Perform_LedPWM();
  2092     013E  3180  20DD  3181   	fcall	_Perform_LedPWM
  2093     0141                     l1312:
  2094                           
  2095                           ;main.c: 288:       Perform_PowerFSM();
  2096     0141  3180  209C  3181   	fcall	_Perform_PowerFSM
  2097     0144                     l1314:
  2098                           
  2099                           ;main.c: 289:       Perform_BlinkFSM();
  2100     0144  3180  2033  3181   	fcall	_Perform_BlinkFSM
  2101     0147                     l1316:
  2102     0147  0140               	movlb	0	; select bank0
  2103     0148  1098               	bcf	24,1	;volatile
  2104     0149  292C               	goto	l1302
  2105     014A  2818               	ljmp	start
  2106     014B                     __end_of_main:
  2107                           
  2108                           	psect	text1
  2109     01F7                     __ptext1:	
  2110 ;; *************** function _TMR0_OverflowCallbackRegister *****************
  2111 ;; Defined at:
  2112 ;;		line 153 in file "mcc_generated_files/timer/src/tmr0.c"
  2113 ;; Parameters:    Size  Location     Type
  2114 ;;  callbackHand    2    0[COMMON] PTR FTN()void 
  2115 ;;		 -> MyTmr0(1), 
  2116 ;; Auto vars:     Size  Location     Type
  2117 ;;		None
  2118 ;; Return value:  Size  Location     Type
  2119 ;;                  1    wreg      void 
  2120 ;; Registers used:
  2121 ;;		wreg
  2122 ;; Tracked objects:
  2123 ;;		On entry : 0/0
  2124 ;;		On exit  : 0/0
  2125 ;;		Unchanged: 0/0
  2126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2127 ;;      Params:         2       0       0       0
  2128 ;;      Locals:         0       0       0       0
  2129 ;;      Temps:          0       0       0       0
  2130 ;;      Totals:         2       0       0       0
  2131 ;;Total ram usage:        2 bytes
  2132 ;; Hardware stack levels used: 1
  2133 ;; Hardware stack levels required when called: 3
  2134 ;; This function calls:
  2135 ;;		Nothing
  2136 ;; This function is called by:
  2137 ;;		_main
  2138 ;; This function uses a non-reentrant model
  2139 ;;
  2140                           
  2141     01F7                     _TMR0_OverflowCallbackRegister:	
  2142                           ;psect for function _TMR0_OverflowCallbackRegister
  2143                           
  2144     01F7                     l1226:	
  2145                           ;incstack = 0
  2146                           ; Regs used in _TMR0_OverflowCallbackRegister: [wreg]
  2147                           
  2148                           
  2149                           ;mcc_generated_files/timer/src/tmr0.c: 153: void TMR0_OverflowCallbackRegister(void (* c
      +                          allbackHandler)(void));mcc_generated_files/timer/src/tmr0.c: 154: {;mcc_generated_files/
      +                          timer/src/tmr0.c: 155:     TMR0_OverflowCallback = callbackHandler;
  2150     01F7  087C               	movf	TMR0_OverflowCallbackRegister@callbackHandler+1,w
  2151     01F8  0140               	movlb	0	; select bank0
  2152     01F9  00A1               	movwf	_TMR0_OverflowCallback+1
  2153     01FA  087B               	movf	TMR0_OverflowCallbackRegister@callbackHandler,w
  2154     01FB  00A0               	movwf	_TMR0_OverflowCallback
  2155     01FC                     l167:
  2156     01FC  0008               	return
  2157     01FD                     __end_of_TMR0_OverflowCallbackRegister:
  2158                           
  2159                           	psect	text2
  2160     01D8                     __ptext2:	
  2161 ;; *************** function _SYSTEM_Initialize *****************
  2162 ;; Defined at:
  2163 ;;		line 39 in file "mcc_generated_files/system/src/system.c"
  2164 ;; Parameters:    Size  Location     Type
  2165 ;;		None
  2166 ;; Auto vars:     Size  Location     Type
  2167 ;;		None
  2168 ;; Return value:  Size  Location     Type
  2169 ;;                  1    wreg      void 
  2170 ;; Registers used:
  2171 ;;		wreg, status,2, status,0, pclath, cstack
  2172 ;; Tracked objects:
  2173 ;;		On entry : 0/0
  2174 ;;		On exit  : 0/0
  2175 ;;		Unchanged: 0/0
  2176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2177 ;;      Params:         0       0       0       0
  2178 ;;      Locals:         0       0       0       0
  2179 ;;      Temps:          0       0       0       0
  2180 ;;      Totals:         0       0       0       0
  2181 ;;Total ram usage:        0 bytes
  2182 ;; Hardware stack levels used: 1
  2183 ;; Hardware stack levels required when called: 5
  2184 ;; This function calls:
  2185 ;;		_CLOCK_Initialize
  2186 ;;		_INTERRUPT_Initialize
  2187 ;;		_PIN_MANAGER_Initialize
  2188 ;;		_TMR0_Initialize
  2189 ;; This function is called by:
  2190 ;;		_main
  2191 ;; This function uses a non-reentrant model
  2192 ;;
  2193                           
  2194     01D8                     _SYSTEM_Initialize:	
  2195                           ;psect for function _SYSTEM_Initialize
  2196                           
  2197     01D8                     l1220:	
  2198                           ;incstack = 0
  2199                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2200                           
  2201                           
  2202                           ;mcc_generated_files/system/src/system.c: 41:     CLOCK_Initialize();
  2203     01D8  3181  21EF  3181   	fcall	_CLOCK_Initialize
  2204                           
  2205                           ;mcc_generated_files/system/src/system.c: 42:     PIN_MANAGER_Initialize();
  2206     01DB  3181  21B7  3181   	fcall	_PIN_MANAGER_Initialize
  2207     01DE                     l1222:
  2208                           
  2209                           ;mcc_generated_files/system/src/system.c: 43:     TMR0_Initialize();
  2210     01DE  3181  2176  3181   	fcall	_TMR0_Initialize
  2211     01E1                     l1224:
  2212                           
  2213                           ;mcc_generated_files/system/src/system.c: 44:     INTERRUPT_Initialize();
  2214     01E1  3181  21E5  3181   	fcall	_INTERRUPT_Initialize
  2215     01E4                     l65:
  2216     01E4  0008               	return
  2217     01E5                     __end_of_SYSTEM_Initialize:
  2218                           
  2219                           	psect	text3
  2220     0176                     __ptext3:	
  2221 ;; *************** function _TMR0_Initialize *****************
  2222 ;; Defined at:
  2223 ;;		line 60 in file "mcc_generated_files/timer/src/tmr0.c"
  2224 ;; Parameters:    Size  Location     Type
  2225 ;;		None
  2226 ;; Auto vars:     Size  Location     Type
  2227 ;;		None
  2228 ;; Return value:  Size  Location     Type
  2229 ;;                  1    wreg      void 
  2230 ;; Registers used:
  2231 ;;		wreg
  2232 ;; Tracked objects:
  2233 ;;		On entry : 0/0
  2234 ;;		On exit  : 0/0
  2235 ;;		Unchanged: 0/0
  2236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2237 ;;      Params:         0       0       0       0
  2238 ;;      Locals:         0       0       0       0
  2239 ;;      Temps:          0       0       0       0
  2240 ;;      Totals:         0       0       0       0
  2241 ;;Total ram usage:        0 bytes
  2242 ;; Hardware stack levels used: 1
  2243 ;; Hardware stack levels required when called: 3
  2244 ;; This function calls:
  2245 ;;		Nothing
  2246 ;; This function is called by:
  2247 ;;		_SYSTEM_Initialize
  2248 ;; This function uses a non-reentrant model
  2249 ;;
  2250                           
  2251     0176                     _TMR0_Initialize:	
  2252                           ;psect for function _TMR0_Initialize
  2253                           
  2254     0176                     l1164:	
  2255                           ;incstack = 0
  2256                           ; Regs used in _TMR0_Initialize: [wreg]
  2257                           
  2258                           
  2259                           ;mcc_generated_files/timer/src/tmr0.c: 62:     TMR0H = 0xFC;
  2260     0176  30FC               	movlw	252
  2261     0177  014B               	movlb	11	; select bank11
  2262     0178  009D               	movwf	29	;volatile
  2263                           
  2264                           ;mcc_generated_files/timer/src/tmr0.c: 63:     TMR0L = 0x18;
  2265     0179  3018               	movlw	24
  2266     017A  009C               	movwf	28	;volatile
  2267                           
  2268                           ;mcc_generated_files/timer/src/tmr0.c: 65:     T0CON1 = (3 << 0x5)
  2269     017B  3070               	movlw	112
  2270     017C  009F               	movwf	31	;volatile
  2271     017D                     l1166:
  2272                           
  2273                           ;mcc_generated_files/timer/src/tmr0.c: 69:     tmr0PeriodCount = ((uint16_t)TMR0H << 8) 
      +                          | TMR0L;
  2274     017D  081D               	movf	29,w	;volatile
  2275     017E  00F3               	movwf	_tmr0PeriodCount+1	;volatile
  2276     017F  081C               	movf	28,w	;volatile
  2277     0180  00F2               	movwf	_tmr0PeriodCount	;volatile
  2278                           
  2279                           ;mcc_generated_files/timer/src/tmr0.c: 71:     TMR0_OverflowCallback = TMR0_DefaultOverf
      +                          lowCallback;
  2280     0181  3013               	movlw	low _TMR0_DefaultOverflowCallback
  2281     0182  0140               	movlb	0	; select bank0
  2282     0183  00A0               	movwf	_TMR0_OverflowCallback
  2283     0184  3002               	movlw	high _TMR0_DefaultOverflowCallback
  2284     0185  00A1               	movwf	_TMR0_OverflowCallback+1
  2285     0186                     l1168:
  2286                           
  2287                           ;mcc_generated_files/timer/src/tmr0.c: 73:     PIR0bits.TMR0IF = 0;
  2288     0186  014E               	movlb	14	; select bank14
  2289     0187  128C               	bcf	12,5	;volatile
  2290     0188                     l1170:
  2291                           
  2292                           ;mcc_generated_files/timer/src/tmr0.c: 74:     PIE0bits.TMR0IE = 1;
  2293     0188  1696               	bsf	22,5	;volatile
  2294     0189                     l1172:
  2295                           
  2296                           ;mcc_generated_files/timer/src/tmr0.c: 76:     T0CON0 = (0 << 0x0)
  2297     0189  3090               	movlw	144
  2298     018A  014B               	movlb	11	; select bank11
  2299     018B  009E               	movwf	30	;volatile
  2300     018C                     l136:
  2301     018C  0008               	return
  2302     018D                     __end_of_TMR0_Initialize:
  2303                           
  2304                           	psect	text4
  2305     01B7                     __ptext4:	
  2306 ;; *************** function _PIN_MANAGER_Initialize *****************
  2307 ;; Defined at:
  2308 ;;		line 38 in file "mcc_generated_files/system/src/pins.c"
  2309 ;; Parameters:    Size  Location     Type
  2310 ;;		None
  2311 ;; Auto vars:     Size  Location     Type
  2312 ;;		None
  2313 ;; Return value:  Size  Location     Type
  2314 ;;                  1    wreg      void 
  2315 ;; Registers used:
  2316 ;;		status,2
  2317 ;; Tracked objects:
  2318 ;;		On entry : 0/0
  2319 ;;		On exit  : 0/0
  2320 ;;		Unchanged: 0/0
  2321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2322 ;;      Params:         0       0       0       0
  2323 ;;      Locals:         0       0       0       0
  2324 ;;      Temps:          0       0       0       0
  2325 ;;      Totals:         0       0       0       0
  2326 ;;Total ram usage:        0 bytes
  2327 ;; Hardware stack levels used: 1
  2328 ;; Hardware stack levels required when called: 3
  2329 ;; This function calls:
  2330 ;;		Nothing
  2331 ;; This function is called by:
  2332 ;;		_SYSTEM_Initialize
  2333 ;; This function uses a non-reentrant model
  2334 ;;
  2335                           
  2336     01B7                     _PIN_MANAGER_Initialize:	
  2337                           ;psect for function _PIN_MANAGER_Initialize
  2338                           
  2339     01B7                     l842:	
  2340                           ;incstack = 0
  2341                           ; Regs used in _PIN_MANAGER_Initialize: [status,2]
  2342                           
  2343                           
  2344                           ;mcc_generated_files/system/src/pins.c: 43:     LATA = 0x0;
  2345     01B7  0140               	movlb	0	; select bank0
  2346     01B8  0198               	clrf	24	;volatile
  2347     01B9                     l844:
  2348                           
  2349                           ;mcc_generated_files/system/src/pins.c: 48:     TRISA = 0x5;
  2350     01B9  3005               	movlw	5
  2351     01BA  0092               	movwf	18	;volatile
  2352     01BB                     l846:
  2353                           
  2354                           ;mcc_generated_files/system/src/pins.c: 53:     ANSELA = 0x1;
  2355     01BB  3001               	movlw	1
  2356     01BC  017E               	movlb	62	; select bank62
  2357     01BD  00B8               	movwf	56	;volatile
  2358     01BE                     l848:
  2359                           
  2360                           ;mcc_generated_files/system/src/pins.c: 58:     WPUA = 0x4;
  2361     01BE  3004               	movlw	4
  2362     01BF  00B9               	movwf	57	;volatile
  2363                           
  2364                           ;mcc_generated_files/system/src/pins.c: 64:     ODCONA = 0x0;
  2365     01C0  01BA               	clrf	58	;volatile
  2366     01C1                     l850:
  2367                           
  2368                           ;mcc_generated_files/system/src/pins.c: 68:     SLRCONA = 0x37;
  2369     01C1  3037               	movlw	55
  2370     01C2  00BB               	movwf	59	;volatile
  2371     01C3                     l852:
  2372                           
  2373                           ;mcc_generated_files/system/src/pins.c: 72:     INLVLA = 0x3F;
  2374     01C3  303F               	movlw	63
  2375     01C4  00BC               	movwf	60	;volatile
  2376                           
  2377                           ;mcc_generated_files/system/src/pins.c: 85:     IOCAP = 0x0;
  2378     01C5  01BD               	clrf	61	;volatile
  2379                           
  2380                           ;mcc_generated_files/system/src/pins.c: 86:     IOCAN = 0x0;
  2381     01C6  01BE               	clrf	62	;volatile
  2382                           
  2383                           ;mcc_generated_files/system/src/pins.c: 87:     IOCAF = 0x0;
  2384     01C7  01BF               	clrf	63	;volatile
  2385     01C8                     l88:
  2386     01C8  0008               	return
  2387     01C9                     __end_of_PIN_MANAGER_Initialize:
  2388                           
  2389                           	psect	text5
  2390     01E5                     __ptext5:	
  2391 ;; *************** function _INTERRUPT_Initialize *****************
  2392 ;; Defined at:
  2393 ;;		line 40 in file "mcc_generated_files/system/src/interrupt.c"
  2394 ;; Parameters:    Size  Location     Type
  2395 ;;		None
  2396 ;; Auto vars:     Size  Location     Type
  2397 ;;		None
  2398 ;; Return value:  Size  Location     Type
  2399 ;;                  1    wreg      void 
  2400 ;; Registers used:
  2401 ;;		wreg, status,2, status,0, pclath, cstack
  2402 ;; Tracked objects:
  2403 ;;		On entry : 0/0
  2404 ;;		On exit  : 0/0
  2405 ;;		Unchanged: 0/0
  2406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2407 ;;      Params:         0       0       0       0
  2408 ;;      Locals:         0       0       0       0
  2409 ;;      Temps:          0       0       0       0
  2410 ;;      Totals:         0       0       0       0
  2411 ;;Total ram usage:        0 bytes
  2412 ;; Hardware stack levels used: 1
  2413 ;; Hardware stack levels required when called: 4
  2414 ;; This function calls:
  2415 ;;		_INT_SetInterruptHandler
  2416 ;; This function is called by:
  2417 ;;		_SYSTEM_Initialize
  2418 ;; This function uses a non-reentrant model
  2419 ;;
  2420                           
  2421     01E5                     _INTERRUPT_Initialize:	
  2422                           ;psect for function _INTERRUPT_Initialize
  2423                           
  2424     01E5                     l1160:	
  2425                           ;incstack = 0
  2426                           ; Regs used in _INTERRUPT_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2427                           
  2428                           
  2429                           ;mcc_generated_files/system/src/interrupt.c: 43:     (PIR0bits.INTF = 0);
  2430     01E5  014E               	movlb	14	; select bank14
  2431     01E6  100C               	bcf	12,0	;volatile
  2432     01E7                     l1162:
  2433                           
  2434                           ;mcc_generated_files/system/src/interrupt.c: 45:     INT_SetInterruptHandler(INT_Default
      +                          InterruptHandler);
  2435     01E7  3000               	movlw	0
  2436     01E8  00FB               	movwf	INT_SetInterruptHandler@InterruptHandler
  2437     01E9  3000               	movlw	0
  2438     01EA  00FC               	movwf	INT_SetInterruptHandler@InterruptHandler+1
  2439     01EB  3181  21FD  3181   	fcall	_INT_SetInterruptHandler
  2440     01EE                     l32:
  2441     01EE  0008               	return
  2442     01EF                     __end_of_INTERRUPT_Initialize:
  2443                           
  2444                           	psect	text6
  2445     01FD                     __ptext6:	
  2446 ;; *************** function _INT_SetInterruptHandler *****************
  2447 ;; Defined at:
  2448 ;;		line 95 in file "mcc_generated_files/system/src/interrupt.c"
  2449 ;; Parameters:    Size  Location     Type
  2450 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
  2451 ;;		 -> INT_DefaultInterruptHandler(1), 
  2452 ;; Auto vars:     Size  Location     Type
  2453 ;;		None
  2454 ;; Return value:  Size  Location     Type
  2455 ;;                  1    wreg      void 
  2456 ;; Registers used:
  2457 ;;		wreg
  2458 ;; Tracked objects:
  2459 ;;		On entry : 0/0
  2460 ;;		On exit  : 0/0
  2461 ;;		Unchanged: 0/0
  2462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2463 ;;      Params:         2       0       0       0
  2464 ;;      Locals:         0       0       0       0
  2465 ;;      Temps:          0       0       0       0
  2466 ;;      Totals:         2       0       0       0
  2467 ;;Total ram usage:        2 bytes
  2468 ;; Hardware stack levels used: 1
  2469 ;; Hardware stack levels required when called: 3
  2470 ;; This function calls:
  2471 ;;		Nothing
  2472 ;; This function is called by:
  2473 ;;		_INTERRUPT_Initialize
  2474 ;; This function uses a non-reentrant model
  2475 ;;
  2476                           
  2477     01FD                     _INT_SetInterruptHandler:	
  2478                           ;psect for function _INT_SetInterruptHandler
  2479                           
  2480     01FD                     l1154:	
  2481                           ;incstack = 0
  2482                           ; Regs used in _INT_SetInterruptHandler: [wreg]
  2483                           
  2484                           
  2485                           ;mcc_generated_files/system/src/interrupt.c: 96:     INT_InterruptHandler = InterruptHan
      +                          dler;
  2486     01FD  087C               	movf	INT_SetInterruptHandler@InterruptHandler+1,w
  2487     01FE  0140               	movlb	0	; select bank0
  2488     01FF  00A3               	movwf	_INT_InterruptHandler+1
  2489     0200  087B               	movf	INT_SetInterruptHandler@InterruptHandler,w
  2490     0201  00A2               	movwf	_INT_InterruptHandler
  2491     0202                     l51:
  2492     0202  0008               	return
  2493     0203                     __end_of_INT_SetInterruptHandler:
  2494                           
  2495                           	psect	text7
  2496     01EF                     __ptext7:	
  2497 ;; *************** function _CLOCK_Initialize *****************
  2498 ;; Defined at:
  2499 ;;		line 39 in file "mcc_generated_files/system/src/clock.c"
  2500 ;; Parameters:    Size  Location     Type
  2501 ;;		None
  2502 ;; Auto vars:     Size  Location     Type
  2503 ;;		None
  2504 ;; Return value:  Size  Location     Type
  2505 ;;                  1    wreg      void 
  2506 ;; Registers used:
  2507 ;;		status,2
  2508 ;; Tracked objects:
  2509 ;;		On entry : 0/0
  2510 ;;		On exit  : 0/0
  2511 ;;		Unchanged: 0/0
  2512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2513 ;;      Params:         0       0       0       0
  2514 ;;      Locals:         0       0       0       0
  2515 ;;      Temps:          0       0       0       0
  2516 ;;      Totals:         0       0       0       0
  2517 ;;Total ram usage:        0 bytes
  2518 ;; Hardware stack levels used: 1
  2519 ;; Hardware stack levels required when called: 3
  2520 ;; This function calls:
  2521 ;;		Nothing
  2522 ;; This function is called by:
  2523 ;;		_SYSTEM_Initialize
  2524 ;; This function uses a non-reentrant model
  2525 ;;
  2526                           
  2527     01EF                     _CLOCK_Initialize:	
  2528                           ;psect for function _CLOCK_Initialize
  2529                           
  2530     01EF                     l834:	
  2531                           ;incstack = 0
  2532                           ; Regs used in _CLOCK_Initialize: [status,2]
  2533                           
  2534                           
  2535                           ;mcc_generated_files/system/src/clock.c: 42:     OSCCON1 = (0 << 0x0)
  2536     01EF  3060               	movlw	96
  2537     01F0  0151               	movlb	17	; select bank17
  2538     01F1  008D               	movwf	13	;volatile
  2539     01F2                     l836:
  2540                           
  2541                           ;mcc_generated_files/system/src/clock.c: 44:     OSCCON3 = (0 << 0x7);
  2542     01F2  018F               	clrf	15	;volatile
  2543                           
  2544                           ;mcc_generated_files/system/src/clock.c: 45:     OSCEN = (0 << 0x7)
  2545     01F3  0191               	clrf	17	;volatile
  2546                           
  2547                           ;mcc_generated_files/system/src/clock.c: 50:     OSCFRQ = (0 << 0x0);
  2548     01F4  0193               	clrf	19	;volatile
  2549                           
  2550                           ;mcc_generated_files/system/src/clock.c: 51:     OSCTUNE = (0 << 0x0);
  2551     01F5  0192               	clrf	18	;volatile
  2552     01F6                     l13:
  2553     01F6  0008               	return
  2554     01F7                     __end_of_CLOCK_Initialize:
  2555                           
  2556                           	psect	text8
  2557     009C                     __ptext8:	
  2558 ;; *************** function _Perform_PowerFSM *****************
  2559 ;; Defined at:
  2560 ;;		line 234 in file "main.c"
  2561 ;; Parameters:    Size  Location     Type
  2562 ;;		None
  2563 ;; Auto vars:     Size  Location     Type
  2564 ;;		None
  2565 ;; Return value:  Size  Location     Type
  2566 ;;                  1    wreg      void 
  2567 ;; Registers used:
  2568 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2569 ;; Tracked objects:
  2570 ;;		On entry : 0/0
  2571 ;;		On exit  : 0/0
  2572 ;;		Unchanged: 0/0
  2573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2574 ;;      Params:         0       0       0       0
  2575 ;;      Locals:         0       0       0       0
  2576 ;;      Temps:          2       0       0       0
  2577 ;;      Totals:         2       0       0       0
  2578 ;;Total ram usage:        2 bytes
  2579 ;; Hardware stack levels used: 1
  2580 ;; Hardware stack levels required when called: 3
  2581 ;; This function calls:
  2582 ;;		Nothing
  2583 ;; This function is called by:
  2584 ;;		_main
  2585 ;; This function uses a non-reentrant model
  2586 ;;
  2587                           
  2588     009C                     _Perform_PowerFSM:	
  2589                           ;psect for function _Perform_PowerFSM
  2590                           
  2591     009C                     l1002:	
  2592                           ;incstack = 0
  2593                           ; Regs used in _Perform_PowerFSM: [wreg-fsr0h+status,2+status,0]
  2594                           
  2595                           
  2596                           ;main.c: 236:   switch (PowerFSM)
  2597     009C  28C9               	goto	l1022
  2598     009D                     l1004:
  2599                           
  2600                           ;main.c: 239:     if ((0 != MinOnCycles_u08) && (0 != PORTAbits.RA2))
  2601     009D  087D               	movf	_MinOnCycles_u08,w
  2602     009E  1903               	btfsc	3,2
  2603     009F  28A1               	goto	u161
  2604     00A0  28A2               	goto	u160
  2605     00A1                     u161:
  2606     00A1  28DC               	goto	l288
  2607     00A2                     u160:
  2608     00A2                     l1006:
  2609     00A2  0140               	movlb	0	; select bank0
  2610     00A3  1D0C               	btfss	12,2	;volatile
  2611     00A4  28A6               	goto	u171
  2612     00A5  28A7               	goto	u170
  2613     00A6                     u171:
  2614     00A6  28DC               	goto	l288
  2615     00A7                     u170:
  2616     00A7                     l1008:
  2617                           
  2618                           ;main.c: 240:       {;main.c: 241:         MinOnCycles_u08 = 5u;
  2619     00A7  3005               	movlw	5
  2620     00A8  00FD               	movwf	_MinOnCycles_u08
  2621                           
  2622                           ;main.c: 242:         WaitReedOnFlag_u8 = 1;
  2623     00A9  3001               	movlw	1
  2624     00AA  00F7               	movwf	_WaitReedOnFlag_u8
  2625                           
  2626                           ;main.c: 243:         PowerFSM = Power_Medium;
  2627     00AB  3001               	movlw	1
  2628     00AC  00F5               	movwf	_PowerFSM
  2629     00AD  28DC               	goto	l288
  2630     00AE                     l1010:
  2631                           
  2632                           ;main.c: 248:       if (WaitReedOnFlag_u8)
  2633     00AE  0877               	movf	_WaitReedOnFlag_u8,w
  2634     00AF  1903               	btfsc	3,2
  2635     00B0  28B2               	goto	u181
  2636     00B1  28B3               	goto	u180
  2637     00B2                     u181:
  2638     00B2  28BA               	goto	l282
  2639     00B3                     u180:
  2640     00B3                     l1012:
  2641                           
  2642                           ;main.c: 249:       {;main.c: 250:         if ((0 == PORTAbits.RA2))
  2643     00B3  0140               	movlb	0	; select bank0
  2644     00B4  190C               	btfsc	12,2	;volatile
  2645     00B5  28B7               	goto	u191
  2646     00B6  28B8               	goto	u190
  2647     00B7                     u191:
  2648     00B7  28DC               	goto	l288
  2649     00B8                     u190:
  2650     00B8                     l1014:
  2651                           
  2652                           ;main.c: 251:           WaitReedOnFlag_u8 = 0;
  2653     00B8  01F7               	clrf	_WaitReedOnFlag_u8
  2654     00B9  28DC               	goto	l288
  2655     00BA                     l282:	
  2656                           ;main.c: 253:       else
  2657                           
  2658                           
  2659                           ;main.c: 254:       {;main.c: 255:         if ((0 != PORTAbits.RA2) && (0 != MinOnCycles
      +                          _u08))
  2660     00BA  0140               	movlb	0	; select bank0
  2661     00BB  1D0C               	btfss	12,2	;volatile
  2662     00BC  28BE               	goto	u201
  2663     00BD  28BF               	goto	u200
  2664     00BE                     u201:
  2665     00BE  28DC               	goto	l288
  2666     00BF                     u200:
  2667     00BF                     l1016:
  2668     00BF  087D               	movf	_MinOnCycles_u08,w
  2669     00C0  1903               	btfsc	3,2
  2670     00C1  28C3               	goto	u211
  2671     00C2  28C4               	goto	u210
  2672     00C3                     u211:
  2673     00C3  28DC               	goto	l288
  2674     00C4                     u210:
  2675     00C4                     l1018:
  2676                           
  2677                           ;main.c: 256:           PowerFSM = Power_High;
  2678     00C4  3002               	movlw	2
  2679     00C5  00F5               	movwf	_PowerFSM
  2680     00C6  28DC               	goto	l288
  2681     00C7                     l1020:
  2682                           
  2683                           ;main.c: 265:       PowerFSM = Power_Low;
  2684     00C7  01F5               	clrf	_PowerFSM
  2685                           
  2686                           ;main.c: 266:   }
  2687     00C8  28DC               	goto	l288
  2688     00C9                     l1022:
  2689     00C9  0875               	movf	_PowerFSM,w
  2690     00CA  00FB               	movwf	??_Perform_PowerFSM
  2691     00CB  01FC               	clrf	??_Perform_PowerFSM+1
  2692                           
  2693                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2694                           ; Switch size 1, requested type "simple"
  2695                           ; Number of cases is 1, Range of values is 0 to 0
  2696                           ; switch strategies available:
  2697                           ; Name         Instructions Cycles
  2698                           ; simple_byte            4     3 (average)
  2699                           ; direct_byte            8     6 (fixed)
  2700                           ; jumptable            260     6 (fixed)
  2701                           ;	Chosen strategy is simple_byte
  2702     00CC  087C               	movf	??_Perform_PowerFSM+1,w
  2703     00CD  3A00               	xorlw	0	; case 0
  2704     00CE  1903               	skipnz
  2705     00CF  28D1               	goto	l1378
  2706     00D0  28C7               	goto	l1020
  2707     00D1                     l1378:
  2708                           
  2709                           ; Switch size 1, requested type "simple"
  2710                           ; Number of cases is 3, Range of values is 0 to 2
  2711                           ; switch strategies available:
  2712                           ; Name         Instructions Cycles
  2713                           ; simple_byte           10     6 (average)
  2714                           ; direct_byte           12     6 (fixed)
  2715                           ; jumptable            260     6 (fixed)
  2716                           ;	Chosen strategy is simple_byte
  2717     00D1  087B               	movf	??_Perform_PowerFSM,w
  2718     00D2  3A00               	xorlw	0	; case 0
  2719     00D3  1903               	skipnz
  2720     00D4  289D               	goto	l1004
  2721     00D5  3A01               	xorlw	1	; case 1
  2722     00D6  1903               	skipnz
  2723     00D7  28AE               	goto	l1010
  2724     00D8  3A03               	xorlw	3	; case 2
  2725     00D9  1903               	skipnz
  2726     00DA  28C4               	goto	l1018
  2727     00DB  28C7               	goto	l1020
  2728     00DC                     l288:
  2729     00DC  0008               	return
  2730     00DD                     __end_of_Perform_PowerFSM:
  2731                           
  2732                           	psect	text9
  2733     00DD                     __ptext9:	
  2734 ;; *************** function _Perform_LedPWM *****************
  2735 ;; Defined at:
  2736 ;;		line 114 in file "main.c"
  2737 ;; Parameters:    Size  Location     Type
  2738 ;;		None
  2739 ;; Auto vars:     Size  Location     Type
  2740 ;;		None
  2741 ;; Return value:  Size  Location     Type
  2742 ;;                  1    wreg      void 
  2743 ;; Registers used:
  2744 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2745 ;; Tracked objects:
  2746 ;;		On entry : 0/0
  2747 ;;		On exit  : 0/0
  2748 ;;		Unchanged: 0/0
  2749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2750 ;;      Params:         0       0       0       0
  2751 ;;      Locals:         0       0       0       0
  2752 ;;      Temps:          2       0       0       0
  2753 ;;      Totals:         2       0       0       0
  2754 ;;Total ram usage:        2 bytes
  2755 ;; Hardware stack levels used: 1
  2756 ;; Hardware stack levels required when called: 4
  2757 ;; This function calls:
  2758 ;;		_SetActiveLedsOn
  2759 ;;		_SetLedsOff
  2760 ;; This function is called by:
  2761 ;;		_main
  2762 ;; This function uses a non-reentrant model
  2763 ;;
  2764                           
  2765     00DD                     _Perform_LedPWM:	
  2766                           ;psect for function _Perform_LedPWM
  2767                           
  2768     00DD                     l922:	
  2769                           ;incstack = 0
  2770                           ; Regs used in _Perform_LedPWM: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2771                           
  2772                           
  2773                           ;main.c: 116:   static uint8_t PWMCnt = 0;;main.c: 118:   if (!GreenIsOnFlag_u08) do { L
      +                          ATAbits.LATA4 = 0; } while(0);
  2774     00DD  0879               	movf	_GreenIsOnFlag_u08,w
  2775     00DE  1D03               	btfss	3,2
  2776     00DF  28E1               	goto	u61
  2777     00E0  28E2               	goto	u60
  2778     00E1                     u61:
  2779     00E1  28E4               	goto	l924
  2780     00E2                     u60:
  2781     00E2                     l239:
  2782     00E2  0140               	movlb	0	; select bank0
  2783     00E3  1218               	bcf	24,4	;volatile
  2784     00E4                     l924:
  2785                           
  2786                           ;main.c: 119:   if (!RedIsOnFlag_u08) do { LATAbits.LATA5 = 0; } while(0);
  2787     00E4  0878               	movf	_RedIsOnFlag_u08,w
  2788     00E5  1D03               	btfss	3,2
  2789     00E6  28E8               	goto	u71
  2790     00E7  28E9               	goto	u70
  2791     00E8                     u71:
  2792     00E8  2900               	goto	l942
  2793     00E9                     u70:
  2794     00E9                     l242:
  2795     00E9  0140               	movlb	0	; select bank0
  2796     00EA  1298               	bcf	24,5	;volatile
  2797     00EB  2900               	goto	l942
  2798     00EC                     l926:
  2799                           
  2800                           ;main.c: 123:       if (0==PWMCnt) SetActiveLedsOn();
  2801     00EC  0874               	movf	Perform_LedPWM@PWMCnt,w
  2802     00ED  1D03               	btfss	3,2
  2803     00EE  28F0               	goto	u81
  2804     00EF  28F1               	goto	u80
  2805     00F0                     u81:
  2806     00F0  28F5               	goto	l930
  2807     00F1                     u80:
  2808     00F1                     l928:
  2809     00F1  3181  21C9  3180   	fcall	_SetActiveLedsOn
  2810     00F4  2913               	goto	l944
  2811     00F5                     l930:
  2812     00F5  3182  2203  3180   	fcall	_SetLedsOff
  2813     00F8  2913               	goto	l944
  2814     00F9                     l932:
  2815                           
  2816                           ;main.c: 128:       if (2>PWMCnt) SetActiveLedsOn();
  2817     00F9  3002               	movlw	2
  2818     00FA  0274               	subwf	Perform_LedPWM@PWMCnt,w
  2819     00FB  1803               	skipnc
  2820     00FC  28FE               	goto	u91
  2821     00FD  28FF               	goto	u90
  2822     00FE                     u91:
  2823     00FE  28F5               	goto	l930
  2824     00FF                     u90:
  2825     00FF  28F1               	goto	l928
  2826     0100                     l942:
  2827     0100  0875               	movf	_PowerFSM,w
  2828     0101  00FB               	movwf	??_Perform_LedPWM
  2829     0102  01FC               	clrf	??_Perform_LedPWM+1
  2830                           
  2831                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2832                           ; Switch size 1, requested type "simple"
  2833                           ; Number of cases is 1, Range of values is 0 to 0
  2834                           ; switch strategies available:
  2835                           ; Name         Instructions Cycles
  2836                           ; simple_byte            4     3 (average)
  2837                           ; direct_byte            8     6 (fixed)
  2838                           ; jumptable            260     6 (fixed)
  2839                           ;	Chosen strategy is simple_byte
  2840     0103  087C               	movf	??_Perform_LedPWM+1,w
  2841     0104  3A00               	xorlw	0	; case 0
  2842     0105  1903               	skipnz
  2843     0106  2908               	goto	l1380
  2844     0107  2913               	goto	l944
  2845     0108                     l1380:
  2846                           
  2847                           ; Switch size 1, requested type "simple"
  2848                           ; Number of cases is 3, Range of values is 0 to 2
  2849                           ; switch strategies available:
  2850                           ; Name         Instructions Cycles
  2851                           ; simple_byte           10     6 (average)
  2852                           ; direct_byte           12     6 (fixed)
  2853                           ; jumptable            260     6 (fixed)
  2854                           ;	Chosen strategy is simple_byte
  2855     0108  087B               	movf	??_Perform_LedPWM,w
  2856     0109  3A00               	xorlw	0	; case 0
  2857     010A  1903               	skipnz
  2858     010B  28EC               	goto	l926
  2859     010C  3A01               	xorlw	1	; case 1
  2860     010D  1903               	skipnz
  2861     010E  28F9               	goto	l932
  2862     010F  3A03               	xorlw	3	; case 2
  2863     0110  1903               	skipnz
  2864     0111  28F1               	goto	l928
  2865     0112  2913               	goto	l944
  2866     0113                     l944:
  2867                           
  2868                           ;main.c: 136:   PWMCnt++;
  2869     0113  3001               	movlw	1
  2870     0114  07F4               	addwf	Perform_LedPWM@PWMCnt,f
  2871                           
  2872                           ;main.c: 137:   if (3 == PWMCnt) PWMCnt = 0;
  2873     0115  3003               	movlw	3
  2874     0116  0674               	xorwf	Perform_LedPWM@PWMCnt,w
  2875     0117  1D03               	btfss	3,2
  2876     0118  291A               	goto	u101
  2877     0119  291B               	goto	u100
  2878     011A                     u101:
  2879     011A  291C               	goto	l254
  2880     011B                     u100:
  2881     011B                     l946:
  2882     011B  01F4               	clrf	Perform_LedPWM@PWMCnt
  2883     011C                     l254:
  2884     011C  0008               	return
  2885     011D                     __end_of_Perform_LedPWM:
  2886                           
  2887                           	psect	text10
  2888     0203                     __ptext10:	
  2889 ;; *************** function _SetLedsOff *****************
  2890 ;; Defined at:
  2891 ;;		line 108 in file "main.c"
  2892 ;; Parameters:    Size  Location     Type
  2893 ;;		None
  2894 ;; Auto vars:     Size  Location     Type
  2895 ;;		None
  2896 ;; Return value:  Size  Location     Type
  2897 ;;                  1    wreg      void 
  2898 ;; Registers used:
  2899 ;;		None
  2900 ;; Tracked objects:
  2901 ;;		On entry : 0/0
  2902 ;;		On exit  : 0/0
  2903 ;;		Unchanged: 0/0
  2904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2905 ;;      Params:         0       0       0       0
  2906 ;;      Locals:         0       0       0       0
  2907 ;;      Temps:          0       0       0       0
  2908 ;;      Totals:         0       0       0       0
  2909 ;;Total ram usage:        0 bytes
  2910 ;; Hardware stack levels used: 1
  2911 ;; Hardware stack levels required when called: 3
  2912 ;; This function calls:
  2913 ;;		Nothing
  2914 ;; This function is called by:
  2915 ;;		_Perform_LedPWM
  2916 ;; This function uses a non-reentrant model
  2917 ;;
  2918                           
  2919     0203                     _SetLedsOff:	
  2920                           ;psect for function _SetLedsOff
  2921                           
  2922     0203                     l229:	
  2923                           ;incstack = 0
  2924                           ; Regs used in _SetLedsOff: []
  2925                           ;main.c: 110:   do { LATAbits.LATA4 = 0; } while(0);
  2926                           
  2927     0203  0140               	movlb	0	; select bank0
  2928     0204  1218               	bcf	24,4	;volatile
  2929     0205                     l231:	
  2930                           ;main.c: 111:   do { LATAbits.LATA5 = 0; } while(0);
  2931                           
  2932     0205  1298               	bcf	24,5	;volatile
  2933     0206                     l233:
  2934     0206  0008               	return
  2935     0207                     __end_of_SetLedsOff:
  2936                           
  2937                           	psect	text11
  2938     01C9                     __ptext11:	
  2939 ;; *************** function _SetActiveLedsOn *****************
  2940 ;; Defined at:
  2941 ;;		line 102 in file "main.c"
  2942 ;; Parameters:    Size  Location     Type
  2943 ;;		None
  2944 ;; Auto vars:     Size  Location     Type
  2945 ;;		None
  2946 ;; Return value:  Size  Location     Type
  2947 ;;                  1    wreg      void 
  2948 ;; Registers used:
  2949 ;;		wreg, status,2, status,0
  2950 ;; Tracked objects:
  2951 ;;		On entry : 0/0
  2952 ;;		On exit  : 0/0
  2953 ;;		Unchanged: 0/0
  2954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2955 ;;      Params:         0       0       0       0
  2956 ;;      Locals:         0       0       0       0
  2957 ;;      Temps:          0       0       0       0
  2958 ;;      Totals:         0       0       0       0
  2959 ;;Total ram usage:        0 bytes
  2960 ;; Hardware stack levels used: 1
  2961 ;; Hardware stack levels required when called: 3
  2962 ;; This function calls:
  2963 ;;		Nothing
  2964 ;; This function is called by:
  2965 ;;		_Perform_LedPWM
  2966 ;; This function uses a non-reentrant model
  2967 ;;
  2968                           
  2969     01C9                     _SetActiveLedsOn:	
  2970                           ;psect for function _SetActiveLedsOn
  2971                           
  2972     01C9                     l866:	
  2973                           ;incstack = 0
  2974                           ; Regs used in _SetActiveLedsOn: [wreg+status,2+status,0]
  2975                           
  2976                           
  2977                           ;main.c: 104:   if (GreenIsOnFlag_u08) do { LATAbits.LATA4 = 1; } while(0);
  2978     01C9  0879               	movf	_GreenIsOnFlag_u08,w
  2979     01CA  1903               	btfsc	3,2
  2980     01CB  29CD               	goto	u11
  2981     01CC  29CE               	goto	u10
  2982     01CD                     u11:
  2983     01CD  29D0               	goto	l868
  2984     01CE                     u10:
  2985     01CE                     l221:
  2986     01CE  0140               	movlb	0	; select bank0
  2987     01CF  1618               	bsf	24,4	;volatile
  2988     01D0                     l868:
  2989                           
  2990                           ;main.c: 105:   if (RedIsOnFlag_u08) do { LATAbits.LATA5 = 1; } while(0);
  2991     01D0  0878               	movf	_RedIsOnFlag_u08,w
  2992     01D1  1903               	btfsc	3,2
  2993     01D2  29D4               	goto	u21
  2994     01D3  29D5               	goto	u20
  2995     01D4                     u21:
  2996     01D4  29D7               	goto	l226
  2997     01D5                     u20:
  2998     01D5                     l224:
  2999     01D5  0140               	movlb	0	; select bank0
  3000     01D6  1698               	bsf	24,5	;volatile
  3001     01D7                     l226:
  3002     01D7  0008               	return
  3003     01D8                     __end_of_SetActiveLedsOn:
  3004                           
  3005                           	psect	text12
  3006     0033                     __ptext12:	
  3007 ;; *************** function _Perform_BlinkFSM *****************
  3008 ;; Defined at:
  3009 ;;		line 178 in file "main.c"
  3010 ;; Parameters:    Size  Location     Type
  3011 ;;		None
  3012 ;; Auto vars:     Size  Location     Type
  3013 ;;		None
  3014 ;; Return value:  Size  Location     Type
  3015 ;;                  1    wreg      void 
  3016 ;; Registers used:
  3017 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3018 ;; Tracked objects:
  3019 ;;		On entry : 0/0
  3020 ;;		On exit  : 0/0
  3021 ;;		Unchanged: 0/0
  3022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3023 ;;      Params:         0       0       0       0
  3024 ;;      Locals:         0       0       0       0
  3025 ;;      Temps:          2       0       0       0
  3026 ;;      Totals:         2       0       0       0
  3027 ;;Total ram usage:        2 bytes
  3028 ;; Hardware stack levels used: 1
  3029 ;; Hardware stack levels required when called: 5
  3030 ;; This function calls:
  3031 ;;		_HandlePowerOff
  3032 ;; This function is called by:
  3033 ;;		_main
  3034 ;; This function uses a non-reentrant model
  3035 ;;
  3036                           
  3037     0033                     _Perform_BlinkFSM:	
  3038                           ;psect for function _Perform_BlinkFSM
  3039                           
  3040     0033                     l1228:	
  3041                           ;incstack = 0
  3042                           ; Regs used in _Perform_BlinkFSM: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3043                           
  3044                           
  3045                           ;main.c: 180:   switch (BlinkFSM)
  3046     0033  287D               	goto	l1270
  3047     0034                     l1230:
  3048                           
  3049                           ;main.c: 183:       if ((0 != MinOnCycles_u08))
  3050     0034  087D               	movf	_MinOnCycles_u08,w
  3051     0035  1903               	btfsc	3,2
  3052     0036  2838               	goto	u321
  3053     0037  2839               	goto	u320
  3054     0038                     u321:
  3055     0038  283B               	goto	l1234
  3056     0039                     u320:
  3057     0039                     l1232:
  3058                           
  3059                           ;main.c: 184:         MinOnCycles_u08--;
  3060     0039  3001               	movlw	1
  3061     003A  02FD               	subwf	_MinOnCycles_u08,f
  3062     003B                     l1234:
  3063                           
  3064                           ;main.c: 185:       {SwTimer_u16=OffTime_u16;};
  3065     003B  0140               	movlb	0	; select bank0
  3066     003C  0825               	movf	_OffTime_u16+1,w
  3067     003D  00F1               	movwf	_SwTimer_u16+1
  3068     003E  0824               	movf	_OffTime_u16,w
  3069     003F  00F0               	movwf	_SwTimer_u16
  3070     0040                     l1236:
  3071                           
  3072                           ;main.c: 186:       BlinkFSM = Blink_WaitOffTime;
  3073     0040  3001               	movlw	1
  3074     0041  00F6               	movwf	_BlinkFSM
  3075                           
  3076                           ;main.c: 187:       break;
  3077     0042  2896               	goto	l1272
  3078     0043                     l1238:
  3079                           
  3080                           ;main.c: 190:       HandlePowerOff();
  3081     0043  3181  214B  3180   	fcall	_HandlePowerOff
  3082     0046                     l1240:
  3083                           
  3084                           ;main.c: 191:       if (0==SwTimer_u16)
  3085     0046  0870               	movf	_SwTimer_u16,w
  3086     0047  0471               	iorwf	_SwTimer_u16+1,w
  3087     0048  1D03               	btfss	3,2
  3088     0049  284B               	goto	u331
  3089     004A  284C               	goto	u330
  3090     004B                     u331:
  3091     004B  2896               	goto	l1272
  3092     004C                     u330:
  3093     004C                     l1242:
  3094                           
  3095                           ;main.c: 192:       {;main.c: 193:         GreenIsOnFlag_u08 = 1;
  3096     004C  3001               	movlw	1
  3097     004D  00F9               	movwf	_GreenIsOnFlag_u08
  3098     004E                     l1244:
  3099                           
  3100                           ;main.c: 194:         {SwTimer_u16=50u;};
  3101     004E  3032               	movlw	50
  3102     004F  00F0               	movwf	_SwTimer_u16
  3103     0050  3000               	movlw	0
  3104     0051  00F1               	movwf	_SwTimer_u16+1
  3105     0052                     l1246:
  3106                           
  3107                           ;main.c: 195:         BlinkFSM = Blink_GreenIsOn;
  3108     0052  3002               	movlw	2
  3109     0053  00F6               	movwf	_BlinkFSM
  3110     0054  2896               	goto	l1272
  3111     0055                     l1248:
  3112                           
  3113                           ;main.c: 200:       if (0==SwTimer_u16)
  3114     0055  0870               	movf	_SwTimer_u16,w
  3115     0056  0471               	iorwf	_SwTimer_u16+1,w
  3116     0057  1D03               	btfss	3,2
  3117     0058  285A               	goto	u341
  3118     0059  285B               	goto	u340
  3119     005A                     u341:
  3120     005A  2896               	goto	l1272
  3121     005B                     u340:
  3122     005B                     l1250:
  3123                           
  3124                           ;main.c: 201:       {;main.c: 202:         GreenIsOnFlag_u08 = 0;
  3125     005B  01F9               	clrf	_GreenIsOnFlag_u08
  3126     005C                     l1252:
  3127                           
  3128                           ;main.c: 203:         {SwTimer_u16=300u;};
  3129     005C  302C               	movlw	44
  3130     005D  00F0               	movwf	_SwTimer_u16
  3131     005E  3001               	movlw	1
  3132     005F  00F1               	movwf	_SwTimer_u16+1
  3133     0060                     l1254:
  3134                           
  3135                           ;main.c: 204:         BlinkFSM = Blink_WaitBetweenGreenAndRed;
  3136     0060  3003               	movlw	3
  3137     0061  00F6               	movwf	_BlinkFSM
  3138     0062  2896               	goto	l1272
  3139     0063                     l1256:
  3140                           
  3141                           ;main.c: 209:       if (0==SwTimer_u16)
  3142     0063  0870               	movf	_SwTimer_u16,w
  3143     0064  0471               	iorwf	_SwTimer_u16+1,w
  3144     0065  1D03               	btfss	3,2
  3145     0066  2868               	goto	u351
  3146     0067  2869               	goto	u350
  3147     0068                     u351:
  3148     0068  2896               	goto	l1272
  3149     0069                     u350:
  3150     0069                     l1258:
  3151                           
  3152                           ;main.c: 210:       {;main.c: 211:         RedIsOnFlag_u08 = 1;
  3153     0069  3001               	movlw	1
  3154     006A  00F8               	movwf	_RedIsOnFlag_u08
  3155     006B                     l1260:
  3156                           
  3157                           ;main.c: 212:         {SwTimer_u16=50u;};
  3158     006B  3032               	movlw	50
  3159     006C  00F0               	movwf	_SwTimer_u16
  3160     006D  3000               	movlw	0
  3161     006E  00F1               	movwf	_SwTimer_u16+1
  3162     006F                     l1262:
  3163                           
  3164                           ;main.c: 213:         BlinkFSM = Blink_RedIsOn;
  3165     006F  3004               	movlw	4
  3166     0070  00F6               	movwf	_BlinkFSM
  3167     0071  2896               	goto	l1272
  3168     0072                     l1264:
  3169                           
  3170                           ;main.c: 218:       if (0==SwTimer_u16)
  3171     0072  0870               	movf	_SwTimer_u16,w
  3172     0073  0471               	iorwf	_SwTimer_u16+1,w
  3173     0074  1D03               	btfss	3,2
  3174     0075  2877               	goto	u361
  3175     0076  2878               	goto	u360
  3176     0077                     u361:
  3177     0077  2896               	goto	l1272
  3178     0078                     u360:
  3179     0078                     l1266:
  3180                           
  3181                           ;main.c: 219:       {;main.c: 220:         RedIsOnFlag_u08 = 0;
  3182     0078  01F8               	clrf	_RedIsOnFlag_u08
  3183                           
  3184                           ;main.c: 221:         BlinkFSM = Blink_Init;
  3185     0079  01F6               	clrf	_BlinkFSM
  3186     007A  2896               	goto	l1272
  3187     007B                     l1268:
  3188                           
  3189                           ;main.c: 226:       BlinkFSM = Blink_Init;
  3190     007B  01F6               	clrf	_BlinkFSM
  3191                           
  3192                           ;main.c: 227:   }
  3193     007C  2896               	goto	l1272
  3194     007D                     l1270:
  3195     007D  0876               	movf	_BlinkFSM,w
  3196     007E  00FB               	movwf	??_Perform_BlinkFSM
  3197     007F  01FC               	clrf	??_Perform_BlinkFSM+1
  3198                           
  3199                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3200                           ; Switch size 1, requested type "simple"
  3201                           ; Number of cases is 1, Range of values is 0 to 0
  3202                           ; switch strategies available:
  3203                           ; Name         Instructions Cycles
  3204                           ; simple_byte            4     3 (average)
  3205                           ; direct_byte            8     6 (fixed)
  3206                           ; jumptable            260     6 (fixed)
  3207                           ;	Chosen strategy is simple_byte
  3208     0080  087C               	movf	??_Perform_BlinkFSM+1,w
  3209     0081  3A00               	xorlw	0	; case 0
  3210     0082  1903               	skipnz
  3211     0083  2885               	goto	l1382
  3212     0084  287B               	goto	l1268
  3213     0085                     l1382:
  3214                           
  3215                           ; Switch size 1, requested type "simple"
  3216                           ; Number of cases is 5, Range of values is 0 to 4
  3217                           ; switch strategies available:
  3218                           ; Name         Instructions Cycles
  3219                           ; direct_byte           16     6 (fixed)
  3220                           ; simple_byte           16     9 (average)
  3221                           ; jumptable            260     6 (fixed)
  3222                           ;	Chosen strategy is simple_byte
  3223     0085  087B               	movf	??_Perform_BlinkFSM,w
  3224     0086  3A00               	xorlw	0	; case 0
  3225     0087  1903               	skipnz
  3226     0088  2834               	goto	l1230
  3227     0089  3A01               	xorlw	1	; case 1
  3228     008A  1903               	skipnz
  3229     008B  2843               	goto	l1238
  3230     008C  3A03               	xorlw	3	; case 2
  3231     008D  1903               	skipnz
  3232     008E  2855               	goto	l1248
  3233     008F  3A01               	xorlw	1	; case 3
  3234     0090  1903               	skipnz
  3235     0091  2863               	goto	l1256
  3236     0092  3A07               	xorlw	7	; case 4
  3237     0093  1903               	skipnz
  3238     0094  2872               	goto	l1264
  3239     0095  287B               	goto	l1268
  3240     0096                     l1272:
  3241                           
  3242                           ;main.c: 228:   OffTime_u16 = 2000u;
  3243     0096  30D0               	movlw	208
  3244     0097  0140               	movlb	0	; select bank0
  3245     0098  00A4               	movwf	_OffTime_u16
  3246     0099  3007               	movlw	7
  3247     009A  00A5               	movwf	_OffTime_u16+1
  3248     009B                     l274:
  3249     009B  0008               	return
  3250     009C                     __end_of_Perform_BlinkFSM:
  3251                           
  3252                           	psect	text13
  3253     014B                     __ptext13:	
  3254 ;; *************** function _HandlePowerOff *****************
  3255 ;; Defined at:
  3256 ;;		line 145 in file "main.c"
  3257 ;; Parameters:    Size  Location     Type
  3258 ;;		None
  3259 ;; Auto vars:     Size  Location     Type
  3260 ;;		None
  3261 ;; Return value:  Size  Location     Type
  3262 ;;                  1    wreg      void 
  3263 ;; Registers used:
  3264 ;;		wreg, status,2, status,0, pclath, cstack
  3265 ;; Tracked objects:
  3266 ;;		On entry : 0/0
  3267 ;;		On exit  : 0/0
  3268 ;;		Unchanged: 0/0
  3269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3270 ;;      Params:         0       0       0       0
  3271 ;;      Locals:         0       0       0       0
  3272 ;;      Temps:          0       0       0       0
  3273 ;;      Totals:         0       0       0       0
  3274 ;;Total ram usage:        0 bytes
  3275 ;; Hardware stack levels used: 1
  3276 ;; Hardware stack levels required when called: 4
  3277 ;; This function calls:
  3278 ;;		_TMR0_Start
  3279 ;;		_TMR0_Stop
  3280 ;; This function is called by:
  3281 ;;		_Perform_BlinkFSM
  3282 ;; This function uses a non-reentrant model
  3283 ;;
  3284                           
  3285     014B                     _HandlePowerOff:	
  3286                           ;psect for function _HandlePowerOff
  3287                           
  3288     014B                     l1176:	
  3289                           ;incstack = 0
  3290                           ; Regs used in _HandlePowerOff: [wreg+status,2+status,0+pclath+cstack]
  3291                           
  3292                           
  3293                           ;main.c: 147:   if ((0 != PORTAbits.RA2) && (0 == MinOnCycles_u08))
  3294     014B  0140               	movlb	0	; select bank0
  3295     014C  1D0C               	btfss	12,2	;volatile
  3296     014D  294F               	goto	u291
  3297     014E  2950               	goto	u290
  3298     014F                     u291:
  3299     014F  2975               	goto	l258
  3300     0150                     u290:
  3301     0150                     l1178:
  3302     0150  087D               	movf	_MinOnCycles_u08,w
  3303     0151  1D03               	btfss	3,2
  3304     0152  2954               	goto	u301
  3305     0153  2955               	goto	u300
  3306     0154                     u301:
  3307     0154  2975               	goto	l258
  3308     0155                     u300:
  3309     0155                     l1180:
  3310                           
  3311                           ;main.c: 148:   {;main.c: 150:     TMR0_Stop();
  3312     0155  3182  2207  3181   	fcall	_TMR0_Stop
  3313     0158                     l1182:
  3314                           
  3315                           ;main.c: 151:     GIE = 0;
  3316     0158  138B               	bcf	11,7	;volatile
  3317     0159                     l1184:
  3318                           
  3319                           ;main.c: 152:     PORTA;
  3320     0159  0140               	movlb	0	; select bank0
  3321     015A  080C               	movf	12,w	;volatile
  3322     015B                     l1186:
  3323                           
  3324                           ;main.c: 153:     IOCAF = 0;
  3325     015B  017E               	movlb	62	; select bank62
  3326     015C  01BF               	clrf	63	;volatile
  3327     015D                     l1188:
  3328                           
  3329                           ;main.c: 154:     IOCAN2 = 1;
  3330     015D  153E               	bsf	62,2	;volatile
  3331     015E                     l1190:
  3332                           
  3333                           ;main.c: 155:     IOCIE = 1;
  3334     015E  014E               	movlb	14	; select bank14
  3335     015F  1616               	bsf	22,4	;volatile
  3336     0160  0063               	sleep	;# 
  3337     0161                     l1192:
  3338                           
  3339                           ;main.c: 157:     __nop();
  3340     0161  0000               	nop
  3341     0162                     l1194:
  3342                           
  3343                           ;main.c: 160:     IOCAN2 = 0;
  3344     0162  017E               	movlb	62	; select bank62
  3345     0163  113E               	bcf	62,2	;volatile
  3346     0164                     l1196:
  3347                           
  3348                           ;main.c: 161:     IOCIE = 0;
  3349     0164  014E               	movlb	14	; select bank14
  3350     0165  1216               	bcf	22,4	;volatile
  3351     0166                     l1198:
  3352                           
  3353                           ;main.c: 162:     IOCAF = 0;
  3354     0166  017E               	movlb	62	; select bank62
  3355     0167  01BF               	clrf	63	;volatile
  3356     0168                     l1200:
  3357                           
  3358                           ;main.c: 163:     GIE = 1;
  3359     0168  178B               	bsf	11,7	;volatile
  3360     0169                     l1202:
  3361                           
  3362                           ;main.c: 164:     TMR0_Start();
  3363     0169  3182  220A  3181   	fcall	_TMR0_Start
  3364     016C                     l1204:
  3365                           
  3366                           ;main.c: 167:     MinOnCycles_u08 = 5u;
  3367     016C  3005               	movlw	5
  3368     016D  00FD               	movwf	_MinOnCycles_u08
  3369     016E                     l1206:
  3370                           
  3371                           ;main.c: 168:     WaitReedOnFlag_u8 = 0;
  3372     016E  01F7               	clrf	_WaitReedOnFlag_u8
  3373     016F                     l1208:
  3374                           
  3375                           ;main.c: 169:     OffTime_u16 = 500u;
  3376     016F  30F4               	movlw	244
  3377     0170  0140               	movlb	0	; select bank0
  3378     0171  00A4               	movwf	_OffTime_u16
  3379     0172  3001               	movlw	1
  3380     0173  00A5               	movwf	_OffTime_u16+1
  3381                           
  3382                           ;main.c: 170:     PowerFSM = Power_Low;
  3383     0174  01F5               	clrf	_PowerFSM
  3384     0175                     l258:
  3385     0175  0008               	return
  3386     0176                     __end_of_HandlePowerOff:
  3387                           
  3388                           	psect	text14
  3389     0207                     __ptext14:	
  3390 ;; *************** function _TMR0_Stop *****************
  3391 ;; Defined at:
  3392 ;;		line 99 in file "mcc_generated_files/timer/src/tmr0.c"
  3393 ;; Parameters:    Size  Location     Type
  3394 ;;		None
  3395 ;; Auto vars:     Size  Location     Type
  3396 ;;		None
  3397 ;; Return value:  Size  Location     Type
  3398 ;;                  1    wreg      void 
  3399 ;; Registers used:
  3400 ;;		None
  3401 ;; Tracked objects:
  3402 ;;		On entry : 0/0
  3403 ;;		On exit  : 0/0
  3404 ;;		Unchanged: 0/0
  3405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3406 ;;      Params:         0       0       0       0
  3407 ;;      Locals:         0       0       0       0
  3408 ;;      Temps:          0       0       0       0
  3409 ;;      Totals:         0       0       0       0
  3410 ;;Total ram usage:        0 bytes
  3411 ;; Hardware stack levels used: 1
  3412 ;; Hardware stack levels required when called: 3
  3413 ;; This function calls:
  3414 ;;		Nothing
  3415 ;; This function is called by:
  3416 ;;		_HandlePowerOff
  3417 ;; This function uses a non-reentrant model
  3418 ;;
  3419                           
  3420     0207                     _TMR0_Stop:	
  3421                           ;psect for function _TMR0_Stop
  3422                           
  3423     0207                     l1158:	
  3424                           ;incstack = 0
  3425                           ; Regs used in _TMR0_Stop: []
  3426                           
  3427                           
  3428                           ;mcc_generated_files/timer/src/tmr0.c: 101:     T0CON0bits.T0EN = 0;
  3429     0207  014B               	movlb	11	; select bank11
  3430     0208  139E               	bcf	30,7	;volatile
  3431     0209                     l145:
  3432     0209  0008               	return
  3433     020A                     __end_of_TMR0_Stop:
  3434                           
  3435                           	psect	text15
  3436     020A                     __ptext15:	
  3437 ;; *************** function _TMR0_Start *****************
  3438 ;; Defined at:
  3439 ;;		line 94 in file "mcc_generated_files/timer/src/tmr0.c"
  3440 ;; Parameters:    Size  Location     Type
  3441 ;;		None
  3442 ;; Auto vars:     Size  Location     Type
  3443 ;;		None
  3444 ;; Return value:  Size  Location     Type
  3445 ;;                  1    wreg      void 
  3446 ;; Registers used:
  3447 ;;		None
  3448 ;; Tracked objects:
  3449 ;;		On entry : 0/0
  3450 ;;		On exit  : 0/0
  3451 ;;		Unchanged: 0/0
  3452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3453 ;;      Params:         0       0       0       0
  3454 ;;      Locals:         0       0       0       0
  3455 ;;      Temps:          0       0       0       0
  3456 ;;      Totals:         0       0       0       0
  3457 ;;Total ram usage:        0 bytes
  3458 ;; Hardware stack levels used: 1
  3459 ;; Hardware stack levels required when called: 3
  3460 ;; This function calls:
  3461 ;;		Nothing
  3462 ;; This function is called by:
  3463 ;;		_HandlePowerOff
  3464 ;;		_main
  3465 ;; This function uses a non-reentrant model
  3466 ;;
  3467                           
  3468     020A                     _TMR0_Start:	
  3469                           ;psect for function _TMR0_Start
  3470                           
  3471     020A                     l1156:	
  3472                           ;incstack = 0
  3473                           ; Regs used in _TMR0_Start: []
  3474                           
  3475                           
  3476                           ;mcc_generated_files/timer/src/tmr0.c: 96:     T0CON0bits.T0EN = 1;
  3477     020A  014B               	movlb	11	; select bank11
  3478     020B  179E               	bsf	30,7	;volatile
  3479     020C                     l142:
  3480     020C  0008               	return
  3481     020D                     __end_of_TMR0_Start:
  3482                           
  3483                           	psect	intentry
  3484     0004                     __pintentry:	
  3485 ;; *************** function _INTERRUPT_InterruptManager *****************
  3486 ;; Defined at:
  3487 ;;		line 57 in file "mcc_generated_files/system/src/interrupt.c"
  3488 ;; Parameters:    Size  Location     Type
  3489 ;;		None
  3490 ;; Auto vars:     Size  Location     Type
  3491 ;;		None
  3492 ;; Return value:  Size  Location     Type
  3493 ;;                  1    wreg      void 
  3494 ;; Registers used:
  3495 ;;		wreg, status,2, status,0, pclath, cstack
  3496 ;; Tracked objects:
  3497 ;;		On entry : 0/0
  3498 ;;		On exit  : 0/0
  3499 ;;		Unchanged: 0/0
  3500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3501 ;;      Params:         0       0       0       0
  3502 ;;      Locals:         0       0       0       0
  3503 ;;      Temps:          0       0       0       0
  3504 ;;      Totals:         0       0       0       0
  3505 ;;Total ram usage:        0 bytes
  3506 ;; Hardware stack levels used: 1
  3507 ;; Hardware stack levels required when called: 2
  3508 ;; This function calls:
  3509 ;;		_TMR0_ISR
  3510 ;; This function is called by:
  3511 ;;		Interrupt level 1
  3512 ;; This function uses a non-reentrant model
  3513 ;;
  3514                           
  3515     0004                     _INTERRUPT_InterruptManager:
  3516                           
  3517                           ;incstack = 0
  3518     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  3519                           
  3520                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  3521     0005  3180               	pagesel	$
  3522     0006                     i1l1278:
  3523                           
  3524                           ;mcc_generated_files/system/src/interrupt.c: 60:     if(INTCONbits.PEIE == 1)
  3525     0006  1F0B               	btfss	11,6	;volatile
  3526     0007  2809               	goto	u37_21
  3527     0008  280A               	goto	u37_20
  3528     0009                     u37_21:
  3529     0009  2816               	goto	i1l41
  3530     000A                     u37_20:
  3531     000A                     i1l1280:
  3532                           
  3533                           ;mcc_generated_files/system/src/interrupt.c: 61:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 62:         if(PIE0bits.TMR0IE == 1 && PIR0bits.TMR0IF == 1)
  3534     000A  014E               	movlb	14	; select bank14
  3535     000B  1E96               	btfss	22,5	;volatile
  3536     000C  280E               	goto	u38_21
  3537     000D  280F               	goto	u38_20
  3538     000E                     u38_21:
  3539     000E  2816               	goto	i1l41
  3540     000F                     u38_20:
  3541     000F                     i1l1282:
  3542     000F  1E8C               	btfss	12,5	;volatile
  3543     0010  2812               	goto	u39_21
  3544     0011  2813               	goto	u39_20
  3545     0012                     u39_21:
  3546     0012  2816               	goto	i1l41
  3547     0013                     u39_20:
  3548     0013                     i1l1284:
  3549                           
  3550                           ;mcc_generated_files/system/src/interrupt.c: 63:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 64:             TMR0_ISR();
  3551     0013  3181  21A3  3180   	fcall	_TMR0_ISR
  3552     0016                     i1l41:	
  3553                           ;mcc_generated_files/system/src/interrupt.c: 65:         }
  3554                           
  3555     0016  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3556     0017  0009               	retfie
  3557     0018                     __end_of_INTERRUPT_InterruptManager:
  3558                           
  3559                           	psect	text17
  3560     01A3                     __ptext17:	
  3561 ;; *************** function _TMR0_ISR *****************
  3562 ;; Defined at:
  3563 ;;		line 141 in file "mcc_generated_files/timer/src/tmr0.c"
  3564 ;; Parameters:    Size  Location     Type
  3565 ;;		None
  3566 ;; Auto vars:     Size  Location     Type
  3567 ;;		None
  3568 ;; Return value:  Size  Location     Type
  3569 ;;                  1    wreg      void 
  3570 ;; Registers used:
  3571 ;;		wreg, status,2, status,0, pclath, cstack
  3572 ;; Tracked objects:
  3573 ;;		On entry : 0/0
  3574 ;;		On exit  : 0/0
  3575 ;;		Unchanged: 0/0
  3576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3577 ;;      Params:         0       0       0       0
  3578 ;;      Locals:         0       0       0       0
  3579 ;;      Temps:          0       0       0       0
  3580 ;;      Totals:         0       0       0       0
  3581 ;;Total ram usage:        0 bytes
  3582 ;; Hardware stack levels used: 1
  3583 ;; Hardware stack levels required when called: 1
  3584 ;; This function calls:
  3585 ;;		NULL
  3586 ;;		_MyTmr0
  3587 ;;		_TMR0_DefaultOverflowCallback
  3588 ;; This function is called by:
  3589 ;;		_INTERRUPT_InterruptManager
  3590 ;; This function uses a non-reentrant model
  3591 ;;
  3592                           
  3593     01A3                     _TMR0_ISR:	
  3594                           ;psect for function _TMR0_ISR
  3595                           
  3596     01A3                     i1l1210:	
  3597                           ;incstack = 0
  3598                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  3599                           
  3600                           
  3601                           ;mcc_generated_files/timer/src/tmr0.c: 143:     TMR0H = (uint8_t)(tmr0PeriodCount >> 8);
  3602     01A3  0873               	movf	_tmr0PeriodCount+1,w	;volatile
  3603     01A4  014B               	movlb	11	; select bank11
  3604     01A5  009D               	movwf	29	;volatile
  3605     01A6                     i1l1212:
  3606                           
  3607                           ;mcc_generated_files/timer/src/tmr0.c: 144:     TMR0L = (uint8_t)(tmr0PeriodCount);
  3608     01A6  0872               	movf	_tmr0PeriodCount,w	;volatile
  3609     01A7  009C               	movwf	28	;volatile
  3610     01A8                     i1l1214:
  3611                           
  3612                           ;mcc_generated_files/timer/src/tmr0.c: 146:     if(((void*)0) != TMR0_OverflowCallback)
  3613     01A8  0140               	movlb	0	; select bank0
  3614     01A9  0820               	movf	_TMR0_OverflowCallback,w
  3615     01AA  0421               	iorwf	_TMR0_OverflowCallback+1,w
  3616     01AB  1903               	btfsc	3,2
  3617     01AC  29AE               	goto	u31_21
  3618     01AD  29AF               	goto	u31_20
  3619     01AE                     u31_21:
  3620     01AE  29B4               	goto	i1l1218
  3621     01AF                     u31_20:
  3622     01AF                     i1l1216:
  3623                           
  3624                           ;mcc_generated_files/timer/src/tmr0.c: 147:     {;mcc_generated_files/timer/src/tmr0.c: 
      +                          148:         TMR0_OverflowCallback();
  3625     01AF  0821               	movf	_TMR0_OverflowCallback+1,w
  3626     01B0  008A               	movwf	10
  3627     01B1  0820               	movf	_TMR0_OverflowCallback,w
  3628     01B2  000A               	callw
  3629     01B3  3181               	pagesel	$
  3630     01B4                     i1l1218:
  3631                           
  3632                           ;mcc_generated_files/timer/src/tmr0.c: 150:     PIR0bits.TMR0IF = 0;
  3633     01B4  014E               	movlb	14	; select bank14
  3634     01B5  128C               	bcf	12,5	;volatile
  3635     01B6                     i1l164:
  3636     01B6  0008               	return
  3637     01B7                     __end_of_TMR0_ISR:
  3638                           
  3639                           	psect	text18
  3640     020D                     __ptext18:	
  3641 ;; *************** function _MyTmr0 *****************
  3642 ;; Defined at:
  3643 ;;		line 92 in file "main.c"
  3644 ;; Parameters:    Size  Location     Type
  3645 ;;		None
  3646 ;; Auto vars:     Size  Location     Type
  3647 ;;		None
  3648 ;; Return value:  Size  Location     Type
  3649 ;;                  1    wreg      void 
  3650 ;; Registers used:
  3651 ;;		None
  3652 ;; Tracked objects:
  3653 ;;		On entry : 0/0
  3654 ;;		On exit  : 0/0
  3655 ;;		Unchanged: 0/0
  3656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3657 ;;      Params:         0       0       0       0
  3658 ;;      Locals:         0       0       0       0
  3659 ;;      Temps:          0       0       0       0
  3660 ;;      Totals:         0       0       0       0
  3661 ;;Total ram usage:        0 bytes
  3662 ;; Hardware stack levels used: 1
  3663 ;; This function calls:
  3664 ;;		Nothing
  3665 ;; This function is called by:
  3666 ;;		_main
  3667 ;;		_TMR0_ISR
  3668 ;; This function uses a non-reentrant model
  3669 ;;
  3670                           
  3671     020D                     _MyTmr0:	
  3672                           ;psect for function _MyTmr0
  3673                           
  3674     020D                     i1l1174:	
  3675                           ;incstack = 0
  3676                           ; Regs used in _MyTmr0: []
  3677                           
  3678                           
  3679                           ;main.c: 94:   TimerFlag_u08 = 1;
  3680     020D  3001               	movlw	1
  3681     020E  00FA               	movwf	_TimerFlag_u08
  3682     020F                     i1l217:
  3683     020F  0008               	return
  3684     0210                     __end_of_MyTmr0:
  3685                           
  3686                           	psect	text19
  3687     0213                     __ptext19:	
  3688 ;; *************** function _TMR0_DefaultOverflowCallback *****************
  3689 ;; Defined at:
  3690 ;;		line 158 in file "mcc_generated_files/timer/src/tmr0.c"
  3691 ;; Parameters:    Size  Location     Type
  3692 ;;		None
  3693 ;; Auto vars:     Size  Location     Type
  3694 ;;		None
  3695 ;; Return value:  Size  Location     Type
  3696 ;;                  1    wreg      void 
  3697 ;; Registers used:
  3698 ;;		None
  3699 ;; Tracked objects:
  3700 ;;		On entry : 0/0
  3701 ;;		On exit  : 0/0
  3702 ;;		Unchanged: 0/0
  3703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3704 ;;      Params:         0       0       0       0
  3705 ;;      Locals:         0       0       0       0
  3706 ;;      Temps:          0       0       0       0
  3707 ;;      Totals:         0       0       0       0
  3708 ;;Total ram usage:        0 bytes
  3709 ;; Hardware stack levels used: 1
  3710 ;; This function calls:
  3711 ;;		Nothing
  3712 ;; This function is called by:
  3713 ;;		_TMR0_Initialize
  3714 ;;		_TMR0_ISR
  3715 ;; This function uses a non-reentrant model
  3716 ;;
  3717                           
  3718     0213                     _TMR0_DefaultOverflowCallback:	
  3719                           ;psect for function _TMR0_DefaultOverflowCallback
  3720                           
  3721     0213                     i1l170:	
  3722                           ;incstack = 0
  3723                           ; Regs used in _TMR0_DefaultOverflowCallback: []
  3724                           
  3725     0213  0008               	return
  3726     0214                     __end_of_TMR0_DefaultOverflowCallback:
  3727     0000                     ___latbits      equ	0
  3728     007E                     btemp           set	126	;btemp
  3729     007E                     int$flags       set	126
  3730     007E                     wtemp0          set	126
  3731                           
  3732                           	psect	config
  3733                           
  3734                           ;Config register CONFIG1 @ 0x8007
  3735                           ;	External Oscillator mode selection bits
  3736                           ;	FEXTOSC = OFF, Oscillator not enabled
  3737                           ;	Power-up default value for COSC bits
  3738                           ;	RSTOSC = HFINT32, HFINTOSC with OSCFRQ= 32 MHz and CDIV = 1:1
  3739                           ;	Clock Out Enable bit
  3740                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
  3741                           ;	Clock Switch Enable bit
  3742                           ;	CSWEN = OFF, The NOSC and NDIV bits cannot be changed by user software
  3743                           ;	Fail-Safe Clock Monitor Enable bit
  3744                           ;	FCMEN = OFF, FSCM timer disabled
  3745     8007                     	org	32775
  3746     8007  178C               	dw	6028
  3747                           
  3748                           ;Config register CONFIG2 @ 0x8008
  3749                           ;	Master Clear Enable bit
  3750                           ;	MCLRE = ON, MCLR pin is Master Clear function
  3751                           ;	Power-up Timer Enable bit
  3752                           ;	PWRTE = 0x1, unprogrammed default
  3753                           ;	Low-Power BOR enable bit
  3754                           ;	LPBOREN = OFF, ULPBOR disabled
  3755                           ;	Brown-out reset enable bits
  3756                           ;	BOREN = OFF, Brown-out reset disabled
  3757                           ;	Brown-out Reset Voltage Selection
  3758                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
  3759                           ;	Zero-cross detect disable
  3760                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
  3761                           ;	Peripheral Pin Select one-way control
  3762                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
  3763                           ;	Stack Overflow/Underflow Reset Enable bit
  3764                           ;	STVREN = OFF, Stack Overflow or Underflow will not cause a reset
  3765     8008                     	org	32776
  3766     8008  2F3F               	dw	12095
  3767                           
  3768                           ;Config register CONFIG3 @ 0x8009
  3769                           ;	WDT Period Select bits
  3770                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3771                           ;	WDT operating mode
  3772                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
  3773                           ;	WDT Window Select bits
  3774                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  3775                           ;	WDT input clock selector
  3776                           ;	WDTCCS = SC, Software Control
  3777     8009                     	org	32777
  3778     8009  3F9F               	dw	16287
  3779                           
  3780                           ;Config register CONFIG4 @ 0x800A
  3781                           ;	Boot Block Size Selection bits
  3782                           ;	BBSIZE = BB512, 512 words boot block size
  3783                           ;	Boot Block Enable bit
  3784                           ;	BBEN = OFF, Boot Block disabled
  3785                           ;	SAF Enable bit
  3786                           ;	SAFEN = OFF, SAF disabled
  3787                           ;	Application Block Write Protection bit
  3788                           ;	WRTAPP = OFF, Application Block not write protected
  3789                           ;	Boot Block Write Protection bit
  3790                           ;	WRTB = OFF, Boot Block not write protected
  3791                           ;	Configuration Register Write Protection bit
  3792                           ;	WRTC = OFF, Configuration Register not write protected
  3793                           ;	Storage Area Flash Write Protection bit
  3794                           ;	WRTSAF = OFF, SAF not write protected
  3795                           ;	Low Voltage Programming Enable bit
  3796                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
  3797     800A                     	org	32778
  3798     800A  3FFF               	dw	16383
  3799                           
  3800                           ;Config register CONFIG5 @ 0x800B
  3801                           ;	UserNVM Program memory code protection bit
  3802                           ;	CP = OFF, UserNVM code protection disabled
  3803     800B                     	org	32779
  3804     800B  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    22
    Data        3
    BSS         11
    Persistent  36
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2      14
    BANK0            80      0       6
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), NULL(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), 

    MainTimer$CounterGet	PTR FTN()unsigned long  size(2) Largest target is 4
		 -> TMR0_CounterGet(), 

    MainTimer$CounterSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> TMR0_CounterSet(), 

    MainTimer$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Deinitialize(), 

    MainTimer$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Initialize(), 

    MainTimer$MaxCountGet	PTR FTN()unsigned long  size(2) Largest target is 4
		 -> TMR0_MaxCountGet(), 

    MainTimer$PeriodGet	PTR FTN()unsigned long  size(2) Largest target is 4
		 -> TMR0_PeriodGet(), 

    MainTimer$PeriodSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> TMR0_PeriodSet(), 

    MainTimer$Start	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Start(), 

    MainTimer$Stop	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Stop(), 

    MainTimer$Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    MainTimer$TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> TMR0_OverflowCallbackRegister(), 

    S155$9$0	PTR FTN()void  size(2) Largest target is 1
		 -> MyTmr0(), 

    S155TIMER_INTERFACE$CounterGet	PTR FTN()unsigned long  size(2) Largest target is 4
		 -> TMR0_CounterGet(), 

    S155TIMER_INTERFACE$CounterSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> TMR0_CounterSet(), 

    S155TIMER_INTERFACE$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Deinitialize(), 

    S155TIMER_INTERFACE$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Initialize(), 

    S155TIMER_INTERFACE$MaxCountGet	PTR FTN()unsigned long  size(2) Largest target is 4
		 -> TMR0_MaxCountGet(), 

    S155TIMER_INTERFACE$PeriodGet	PTR FTN()unsigned long  size(2) Largest target is 4
		 -> TMR0_PeriodGet(), 

    S155TIMER_INTERFACE$PeriodSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> TMR0_PeriodSet(), 

    S155TIMER_INTERFACE$Start	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Start(), 

    S155TIMER_INTERFACE$Stop	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Stop(), 

    S155TIMER_INTERFACE$Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S155TIMER_INTERFACE$TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> TMR0_OverflowCallbackRegister(), 

    TMR0_OverflowCallback	PTR FTN()void  size(2) Largest target is 1
		 -> MyTmr0(), TMR0_DefaultOverflowCallback(), NULL(), 

    TMR0_OverflowCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> MyTmr0(), 


Critical Paths under _main in COMMON

    _main->_Perform_BlinkFSM
    _main->_Perform_LedPWM
    _main->_Perform_PowerFSM
    _main->_TMR0_OverflowCallbackRegister
    _INTERRUPT_Initialize->_INT_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      46
                   _Perform_BlinkFSM
                     _Perform_LedPWM
                   _Perform_PowerFSM
                  _SYSTEM_Initialize
      _TMR0_OverflowCallbackRegister
                         _TMR0_Start
 ---------------------------------------------------------------------------------
 (1) _TMR0_OverflowCallbackRegister                        2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      23
                   _CLOCK_Initialize
               _INTERRUPT_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0      23
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Perform_PowerFSM                                     2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Perform_LedPWM                                       2     2      0       0
                                              0 COMMON     2     2      0
                    _SetActiveLedsOn
                         _SetLedsOff
 ---------------------------------------------------------------------------------
 (2) _SetLedsOff                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SetActiveLedsOn                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Perform_BlinkFSM                                     2     2      0       0
                                              0 COMMON     2     2      0
                     _HandlePowerOff
 ---------------------------------------------------------------------------------
 (2) _HandlePowerOff                                       0     0      0       0
                         _TMR0_Start
                          _TMR0_Stop
 ---------------------------------------------------------------------------------
 (3) _TMR0_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0       0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
                                NULL *
                             _MyTmr0 *
       _TMR0_DefaultOverflowCallback *
 ---------------------------------------------------------------------------------
 (6) _TMR0_DefaultOverflowCallback                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _MyTmr0                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (6) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Perform_BlinkFSM
     _HandlePowerOff
       _TMR0_Start
       _TMR0_Stop
   _Perform_LedPWM
     _SetActiveLedsOn
     _SetLedsOff
   _Perform_PowerFSM
   _SYSTEM_Initialize
     _CLOCK_Initialize
     _INTERRUPT_Initialize
       _INT_SetInterruptHandler
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
   _TMR0_OverflowCallbackRegister
   _TMR0_Start

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     NULL(Fake) *
     _MyTmr0 *
     _TMR0_DefaultOverflowCallback *

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BIGRAM             240      0       0      0.0%
COMMON              14      2      14    100.0%
BANK0               80      0       6      7.5%
BANK1               80      0       0      0.0%
BANK2               80      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      20      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Mon Jul 07 10:04:21 2025

                                          l13 01F6                                            l32 01EE  
                                          l51 0202                                            l65 01E4  
                                          l88 01C8                                            u10 01CE  
                                          u11 01CD                                            u20 01D5  
                                          u21 01D4                                            u60 00E2  
                                          u61 00E1                                            u70 00E9  
                                          u71 00E8                                            u80 00F1  
                                          u81 00F0                                            u90 00FF  
                                          u91 00FE                                           l221 01CE  
                                         l142 020C                                           l231 0205  
                                         l224 01D5                                           l136 018C  
                                         l145 0209                                           l233 0206  
                                         l226 01D7                                           l242 00E9  
                                         l229 0203                                           l254 011C  
                                         l239 00E2                                           l167 01FC  
                                         l258 0175                                           l274 009B  
                                         l282 00BA                                           l295 0131  
                                         l288 00DC                                           l930 00F5  
                                         l922 00DD                                           l834 01EF  
                                         l850 01C1                                           l842 01B7  
                                         l932 00F9                                           l924 00E4  
                                         l836 01F2                                           l852 01C3  
                                         l844 01B9                                           l926 00EC  
                                         l942 0100                                           l846 01BB  
                                         l944 0113                                           l928 00F1  
                                         l848 01BE                                           l866 01C9  
                                         l946 011B                                           l868 01D0  
                                         _GIE 005F                                           u100 011B  
                                         u101 011A                                           u200 00BF  
                                         u201 00BE                                           u210 00C4  
                                         u211 00C3                                           u300 0155  
                                         u301 0154                                           u320 0039  
                                         u160 00A2                                           u321 0038  
                                         u161 00A1                                           u330 004C  
                                         u170 00A7                                           u410 0131  
                                         u331 004B                                           u171 00A6  
                                         u411 0130                                           u340 005B  
                                         u180 00B3                                           u420 013A  
                                         u341 005A                                           u181 00B2  
                                         u421 0139                                           u350 0069  
                                         u190 00B8                                           u351 0068  
                                         u191 00B7                                           u360 0078  
                                         u361 0077                                           u290 0150  
                                         u291 014F                               _MinOnCycles_u08 007D  
                             _RedIsOnFlag_u08 0078                                          l1010 00AE  
                                        l1002 009C                                          l1020 00C7  
                                        l1012 00B3                                          l1004 009D  
                                        l1014 00B8                                          l1006 00A2  
                                        l1022 00C9                                          l1200 0168  
                                        l1016 00BF                                          l1008 00A7  
                                        l1202 0169                                          l1018 00C4  
                                        l1204 016C                                          l1220 01D8  
                                        l1300 0129                                          l1206 016E  
                                        l1230 0034                                          l1222 01DE  
                                        l1310 013E                                          l1302 012C  
                                        l1208 016F                                          l1240 0046  
                                        l1232 0039                                          l1160 01E5  
                                        l1224 01E1                                          l1312 0141  
                                        l1304 0133                                          l1250 005B  
                                        l1242 004C                                          l1234 003B  
                                        l1154 01FD                                          l1162 01E7  
                                        l1170 0188                                          l1226 01F7  
                                        l1314 0144                                          l1306 0134  
                                        l1156 020A                                          l1180 0155  
                                        l1260 006B                                          l1252 005C  
                                        l1244 004E                                          l1236 0040  
                                        l1228 0033                                          l1172 0189  
                                        l1164 0176                                          l1316 0147  
                                        l1308 013A                                          l1158 0207  
                                        l1190 015E                                          l1182 0158  
                                        l1262 006F                                          l1254 0060  
                                        l1246 0052                                          l1238 0043  
                                        l1270 007D                                          l1166 017D  
                                        l1192 0161                                          l1184 0159  
                                        l1176 014B                                          l1264 0072  
                                        l1256 0063                                          l1248 0055  
                                        l1272 0096                                          l1168 0186  
                                        l1194 0162                                          l1186 015B  
                                        l1178 0150                                          l1266 0078  
                                        l1258 0069                                          l1196 0164  
                                        l1188 015D                                          l1268 007B  
                                        l1380 0108                                          l1198 0166  
                                        l1382 0085                                          l1294 011D  
                                        l1296 0127                                          l1378 00D1  
                                        l1298 0128                                          _LATA 0018  
                                        i1l41 0016                                          _WPUA 1F39  
                                        _main 011D                                          btemp 007E  
                 _INT_DefaultInterruptHandler 0000                                          start 0018  
                           _WaitReedOnFlag_u8 0077               __end_of_INT_SetInterruptHandler 0203  
                     __end_of_TMR0_Initialize 018D                                         ?_main 007B  
                                       _IOCAF 1F3F                                         _IOCAN 1F3E  
                                       _IOCAP 1F3D                                         _IOCIE 38B4  
                                       i1l217 020F                                         i1l170 0213  
                                       i1l164 01B6                                         _OSCEN 0891  
                                       u31_20 01AF                                         u31_21 01AE  
                                       _TMR0H 059D                                         _TMR0L 059C  
                                       _PORTA 000C                                         u37_20 000A  
                                       u37_21 0009                                         u38_20 000F  
                                       u38_21 000E                                         u39_20 0013  
                                       u39_21 0012                                         _TRISA 0012  
                        Perform_LedPWM@PWMCnt 0074                              __end_of_TMR0_ISR 01B7  
                                 ?_TMR0_Start 007B                                         pclath 000A  
                             _tmr0PeriodCount 0072                                         status 0003  
                                       wtemp0 007E                               __initialization 0019  
                                __end_of_main 014B                   ?_INTERRUPT_InterruptManager 007B  
                                      ??_main 007D  TMR0_OverflowCallbackRegister@callbackHandler 007B  
                                  _SetLedsOff 0203                                        _ANSELA 1F38  
                                      _T0CON0 059E                                        _T0CON1 059F  
                                      _IOCAN2 F9F2                                        i1l1210 01A3  
                                      i1l1212 01A6                                        i1l1214 01A8  
                                      i1l1216 01AF                                        i1l1218 01B4  
                                      i1l1174 020D                                        i1l1280 000A  
                                      _ODCONA 1F3A                                        i1l1282 000F  
                                      i1l1284 0013                                        i1l1278 0006  
                                      _INLVLA 1F3C                                        _OSCFRQ 0893  
                                      _MyTmr0 020D                             __end_of_TMR0_Stop 020A  
                              _HandlePowerOff 014B                              ??_Perform_LedPWM 007B  
                            ?_TMR0_Initialize 007B                             ?_CLOCK_Initialize 007B  
                             _SetActiveLedsOn 01C9                                  __pdataCOMMON 007D  
                          ??_CLOCK_Initialize 007B       INT_SetInterruptHandler@InterruptHandler 007B  
                                 _OffTime_u16 0024                             _SYSTEM_Initialize 01D8  
                     __end_of__initialization 0030                            ?_SYSTEM_Initialize 007B  
                      __end_of_HandlePowerOff 0176                                __pcstackCOMMON 007B  
                                __pidataBANK0 0210                           ??_SYSTEM_Initialize 007D  
                                   ?_TMR0_ISR 007B                             __end_of_MainTimer 01A3  
                                 ?_SetLedsOff 007B                     __end_of_SYSTEM_Initialize 01E5  
                       _TMR0_OverflowCallback 0020                              _Perform_BlinkFSM 0033  
                                     ?_MyTmr0 007B                                    __pmaintext 011D  
                             ?_HandlePowerOff 007B                                    ??_TMR0_ISR 007B  
                     __end_of_SetActiveLedsOn 01D8                                    __pintentry 0004  
                                     _OSCCON1 088D                                       _OSCCON3 088F  
                            _Perform_PowerFSM 009C                                       _OSCTUNE 0892  
                                ??_TMR0_Start 007B                                       _SLRCONA 1F3B  
                          __end_of_TMR0_Start 020D                                       __ptext1 01F7  
                                     __ptext2 01D8                                       __ptext3 0176  
                                     __ptext4 01B7                                       __ptext5 01E5  
                                     __ptext6 01FD                                       __ptext7 01EF  
                                     __ptext8 009C                                       __ptext9 00DD  
                                 _SwTimer_u16 0070                      ??_PIN_MANAGER_Initialize 007B  
                     _INT_SetInterruptHandler 01FD                          end_of_initialization 0030  
                            ?_SetActiveLedsOn 007B                                     _PORTAbits 000C  
                                   _TMR0_Stop 0207         __end_of_TMR0_OverflowCallbackRegister 01FD  
               _TMR0_OverflowCallbackRegister 01F7                                _TMR0_PeriodGet 0000  
                              _TMR0_PeriodSet 0000                             _TMR0_Deinitialize 0000  
        __end_of_TMR0_DefaultOverflowCallback 0214                  _TMR0_DefaultOverflowCallback 0213  
                              __end_of_MyTmr0 0210                  __end_of_INTERRUPT_Initialize 01EF  
                               __pidataCOMMON 0212                                    ?_TMR0_Stop 007B  
                                   _MainTimer 018D                     ??_INT_SetInterruptHandler 007D  
                         start_initialization 0019                      __end_of_Perform_BlinkFSM 009C  
                                ??_SetLedsOff 007B                              ??_HandlePowerOff 007B  
               ?_TMR0_DefaultOverflowCallback 007B                                      ??_MyTmr0 007B  
                    __end_of_Perform_PowerFSM 00DD                                   __pdataBANK0 0024  
                          __end_of_SetLedsOff 0207                                   __pbssCOMMON 0070  
                                   ___latbits 0000                ?_TMR0_OverflowCallbackRegister 007B  
                               _TimerFlag_u08 007A                                     __pnvBANK0 0020  
                      _PIN_MANAGER_Initialize 01B7                  ??_INTERRUPT_InterruptManager 007B  
                                 ??_TMR0_Stop 007B                          _INTERRUPT_Initialize 01E5  
                            _CLOCK_Initialize 01EF                             ??_TMR0_Initialize 007B  
                                    _LATAbits 0018                                      _PIE0bits 0716  
                                    _PIR0bits 070C                                      _TMR0_ISR 01A3  
              ??_TMR0_DefaultOverflowCallback 007B                                      _BlinkFSM 0076  
                       ?_INTERRUPT_Initialize 007B                                      _PowerFSM 0075  
                                  _T0CON0bits 059E                                _Perform_LedPWM 00DD  
                           ?_Perform_BlinkFSM 007B                                      __ptext10 0203  
                                    __ptext11 01C9                                      __ptext12 0033  
                                    __ptext13 014B                                      __ptext14 0207  
                                    __ptext15 020A                                      __ptext17 01A3  
                                    __ptext18 020D                                      __ptext19 0213  
                          ??_Perform_BlinkFSM 007B                              _TMR0_MaxCountGet 0000  
                           ?_Perform_PowerFSM 007B                                      int$flags 007E  
          __end_of_INTERRUPT_InterruptManager 0018                    _INTERRUPT_InterruptManager 0004  
                          ??_Perform_PowerFSM 007B                        __end_of_Perform_LedPWM 011D  
                                  _INTCONbits 000B                          _INT_InterruptHandler 0022  
                      ??_INTERRUPT_Initialize 007D                             _GreenIsOnFlag_u08 0079  
                                    intlevel1 0000                       ?_PIN_MANAGER_Initialize 007B  
             ??_TMR0_OverflowCallbackRegister 007D                               _TMR0_CounterGet 0000  
                             _TMR0_CounterSet 0000                      ?_INT_SetInterruptHandler 007B  
                    __end_of_CLOCK_Initialize 01F7                                 __pstringtext1 018D  
                             ?_Perform_LedPWM 007B                               _TMR0_Initialize 0176  
                                  _TMR0_Start 020A                __end_of_PIN_MANAGER_Initialize 01C9  
                           ??_SetActiveLedsOn 007B  
