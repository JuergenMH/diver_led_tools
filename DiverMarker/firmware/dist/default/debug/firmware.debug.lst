

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Sat May 10 22:48:58 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F15313
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,space=0,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,space=0,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,space=0,delta=2,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
    10                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	intentry,global,class=CODE,space=0,delta=2
    28                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    32                           	dabs	1,0x7E,2
    33     0000                     
    34                           ; Generated 11/01/2024 GMT
    35                           ; 
    36                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution. Publication is not required when
    50                           ;        this file is used in an embedded application.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC16F15313 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68     0008                     bsr             equ	8
    69     0005                     fsr0h           equ	5
    70     0004                     fsr0l           equ	4
    71     0007                     fsr1h           equ	7
    72     0006                     fsr1l           equ	6
    73     0000                     indf            equ	0
    74     0000                     indf0           equ	0
    75     0001                     indf1           equ	1
    76     000B                     intcon          equ	11
    77     0002                     pc              equ	2
    78     0002                     pcl             equ	2
    79     000A                     pclath          equ	10
    80     0003                     status          equ	3
    81     0009                     wreg            equ	9
    82     0000                     INDF0           equ	0	;# 
    83     0001                     INDF1           equ	1	;# 
    84     0002                     PCL             equ	2	;# 
    85     0003                     STATUS          equ	3	;# 
    86     0004                     FSR0L           equ	4	;# 
    87     0005                     FSR0H           equ	5	;# 
    88     0006                     FSR1L           equ	6	;# 
    89     0007                     FSR1H           equ	7	;# 
    90     0008                     BSR             equ	8	;# 
    91     0009                     WREG            equ	9	;# 
    92     000A                     PCLATH          equ	10	;# 
    93     000B                     INTCON          equ	11	;# 
    94     000C                     PORTA           equ	12	;# 
    95     0012                     TRISA           equ	18	;# 
    96     0018                     LATA            equ	24	;# 
    97     009B                     ADRES           equ	155	;# 
    98     009B                     ADRESL          equ	155	;# 
    99     009C                     ADRESH          equ	156	;# 
   100     009D                     ADCON0          equ	157	;# 
   101     009E                     ADCON1          equ	158	;# 
   102     009F                     ADACT           equ	159	;# 
   103     0119                     RC1REG          equ	281	;# 
   104     0119                     RCREG           equ	281	;# 
   105     0119                     RCREG1          equ	281	;# 
   106     011A                     TX1REG          equ	282	;# 
   107     011A                     TXREG1          equ	282	;# 
   108     011A                     TXREG           equ	282	;# 
   109     011B                     SP1BRG          equ	283	;# 
   110     011B                     SPBRG           equ	283	;# 
   111     011B                     SP1BRGL         equ	283	;# 
   112     011B                     SPBRG1          equ	283	;# 
   113     011B                     SPBRGL          equ	283	;# 
   114     011C                     SP1BRGH         equ	284	;# 
   115     011C                     SPBRGH          equ	284	;# 
   116     011C                     SPBRGH1         equ	284	;# 
   117     011D                     RC1STA          equ	285	;# 
   118     011D                     RCSTA1          equ	285	;# 
   119     011D                     RCSTA           equ	285	;# 
   120     011E                     TX1STA          equ	286	;# 
   121     011E                     TXSTA1          equ	286	;# 
   122     011E                     TXSTA           equ	286	;# 
   123     011F                     BAUD1CON        equ	287	;# 
   124     011F                     BAUDCON1        equ	287	;# 
   125     011F                     BAUDCTL1        equ	287	;# 
   126     011F                     BAUDCON         equ	287	;# 
   127     011F                     BAUDCTL         equ	287	;# 
   128     018C                     SSP1BUF         equ	396	;# 
   129     018D                     SSP1ADD         equ	397	;# 
   130     018E                     SSP1MSK         equ	398	;# 
   131     018F                     SSP1STAT        equ	399	;# 
   132     0190                     SSP1CON1        equ	400	;# 
   133     0191                     SSP1CON2        equ	401	;# 
   134     0192                     SSP1CON3        equ	402	;# 
   135     020C                     TMR1            equ	524	;# 
   136     020C                     TMR1L           equ	524	;# 
   137     020D                     TMR1H           equ	525	;# 
   138     020E                     T1CON           equ	526	;# 
   139     020F                     T1GCON          equ	527	;# 
   140     020F                     PR1             equ	527	;# 
   141     0210                     T1GATE          equ	528	;# 
   142     0210                     TMR1GATE        equ	528	;# 
   143     0211                     T1CLK           equ	529	;# 
   144     0211                     TMR1CLK         equ	529	;# 
   145     028C                     T2TMR           equ	652	;# 
   146     028C                     TMR2            equ	652	;# 
   147     028D                     T2PR            equ	653	;# 
   148     028D                     PR2             equ	653	;# 
   149     028E                     T2CON           equ	654	;# 
   150     028F                     T2HLT           equ	655	;# 
   151     0290                     T2CLKCON        equ	656	;# 
   152     0291                     T2RST           equ	657	;# 
   153     030C                     CCPR1           equ	780	;# 
   154     030C                     CCPR1L          equ	780	;# 
   155     030D                     CCPR1H          equ	781	;# 
   156     030E                     CCP1CON         equ	782	;# 
   157     030F                     CCP1CAP         equ	783	;# 
   158     0310                     CCPR2           equ	784	;# 
   159     0310                     CCPR2L          equ	784	;# 
   160     0311                     CCPR2H          equ	785	;# 
   161     0312                     CCP2CON         equ	786	;# 
   162     0313                     CCP2CAP         equ	787	;# 
   163     0314                     PWM3DC          equ	788	;# 
   164     0314                     PWM3DCL         equ	788	;# 
   165     0315                     PWM3DCH         equ	789	;# 
   166     0316                     PWM3CON         equ	790	;# 
   167     0318                     PWM4DC          equ	792	;# 
   168     0318                     PWM4DCL         equ	792	;# 
   169     0319                     PWM4DCH         equ	793	;# 
   170     031A                     PWM4CON         equ	794	;# 
   171     031C                     PWM5DC          equ	796	;# 
   172     031C                     PWM5DCL         equ	796	;# 
   173     031D                     PWM5DCH         equ	797	;# 
   174     031E                     PWM5CON         equ	798	;# 
   175     038C                     PWM6DC          equ	908	;# 
   176     038C                     PWM6DCL         equ	908	;# 
   177     038D                     PWM6DCH         equ	909	;# 
   178     038E                     PWM6CON         equ	910	;# 
   179     058C                     NCO1ACC         equ	1420	;# 
   180     058C                     NCO1ACCL        equ	1420	;# 
   181     058D                     NCO1ACCH        equ	1421	;# 
   182     058E                     NCO1ACCU        equ	1422	;# 
   183     058F                     NCO1INC         equ	1423	;# 
   184     058F                     NCO1INCL        equ	1423	;# 
   185     0590                     NCO1INCH        equ	1424	;# 
   186     0591                     NCO1INCU        equ	1425	;# 
   187     0592                     NCO1CON         equ	1426	;# 
   188     0593                     NCO1CLK         equ	1427	;# 
   189     059C                     TMR0L           equ	1436	;# 
   190     059C                     TMR0            equ	1436	;# 
   191     059D                     TMR0H           equ	1437	;# 
   192     059D                     PR0             equ	1437	;# 
   193     059E                     T0CON0          equ	1438	;# 
   194     059F                     T0CON1          equ	1439	;# 
   195     060C                     CWG1CLKCON      equ	1548	;# 
   196     060D                     CWG1DAT         equ	1549	;# 
   197     060E                     CWG1DBR         equ	1550	;# 
   198     060F                     CWG1DBF         equ	1551	;# 
   199     0610                     CWG1CON0        equ	1552	;# 
   200     0611                     CWG1CON1        equ	1553	;# 
   201     0612                     CWG1AS0         equ	1554	;# 
   202     0613                     CWG1AS1         equ	1555	;# 
   203     0614                     CWG1STR         equ	1556	;# 
   204     070C                     PIR0            equ	1804	;# 
   205     070D                     PIR1            equ	1805	;# 
   206     070E                     PIR2            equ	1806	;# 
   207     070F                     PIR3            equ	1807	;# 
   208     0710                     PIR4            equ	1808	;# 
   209     0711                     PIR5            equ	1809	;# 
   210     0712                     PIR6            equ	1810	;# 
   211     0713                     PIR7            equ	1811	;# 
   212     0716                     PIE0            equ	1814	;# 
   213     0717                     PIE1            equ	1815	;# 
   214     0718                     PIE2            equ	1816	;# 
   215     0719                     PIE3            equ	1817	;# 
   216     071A                     PIE4            equ	1818	;# 
   217     071B                     PIE5            equ	1819	;# 
   218     071C                     PIE6            equ	1820	;# 
   219     071D                     PIE7            equ	1821	;# 
   220     0796                     PMD0            equ	1942	;# 
   221     0797                     PMD1            equ	1943	;# 
   222     0798                     PMD2            equ	1944	;# 
   223     0799                     PMD3            equ	1945	;# 
   224     079A                     PMD4            equ	1946	;# 
   225     079B                     PMD5            equ	1947	;# 
   226     080C                     WDTCON0         equ	2060	;# 
   227     080D                     WDTCON1         equ	2061	;# 
   228     080E                     WDTPSL          equ	2062	;# 
   229     080F                     WDTPSH          equ	2063	;# 
   230     0810                     WDTTMR          equ	2064	;# 
   231     0811                     BORCON          equ	2065	;# 
   232     0812                     VREGCON         equ	2066	;# 
   233     0813                     PCON0           equ	2067	;# 
   234     0814                     PCON1           equ	2068	;# 
   235     081A                     NVMADR          equ	2074	;# 
   236     081A                     NVMADRL         equ	2074	;# 
   237     081B                     NVMADRH         equ	2075	;# 
   238     081C                     NVMDAT          equ	2076	;# 
   239     081C                     NVMDATL         equ	2076	;# 
   240     081D                     NVMDATH         equ	2077	;# 
   241     081E                     NVMCON1         equ	2078	;# 
   242     081F                     NVMCON2         equ	2079	;# 
   243     088C                     CPUDOZE         equ	2188	;# 
   244     088D                     OSCCON1         equ	2189	;# 
   245     088E                     OSCCON2         equ	2190	;# 
   246     088F                     OSCCON3         equ	2191	;# 
   247     0890                     OSCSTAT         equ	2192	;# 
   248     0891                     OSCEN           equ	2193	;# 
   249     0892                     OSCTUNE         equ	2194	;# 
   250     0893                     OSCFRQ          equ	2195	;# 
   251     0895                     CLKRCON         equ	2197	;# 
   252     0896                     CLKRCLK         equ	2198	;# 
   253     090C                     FVRCON          equ	2316	;# 
   254     090E                     DAC1CON0        equ	2318	;# 
   255     090F                     DAC1CON1        equ	2319	;# 
   256     091F                     ZCDCON          equ	2335	;# 
   257     098F                     CMOUT           equ	2447	;# 
   258     098F                     CMSTAT          equ	2447	;# 
   259     0990                     CM1CON0         equ	2448	;# 
   260     0991                     CM1CON1         equ	2449	;# 
   261     0992                     CM1NCH          equ	2450	;# 
   262     0993                     CM1PCH          equ	2451	;# 
   263     1E0F                     CLCDATA         equ	7695	;# 
   264     1E10                     CLC1CON         equ	7696	;# 
   265     1E11                     CLC1POL         equ	7697	;# 
   266     1E12                     CLC1SEL0        equ	7698	;# 
   267     1E13                     CLC1SEL1        equ	7699	;# 
   268     1E14                     CLC1SEL2        equ	7700	;# 
   269     1E15                     CLC1SEL3        equ	7701	;# 
   270     1E16                     CLC1GLS0        equ	7702	;# 
   271     1E17                     CLC1GLS1        equ	7703	;# 
   272     1E18                     CLC1GLS2        equ	7704	;# 
   273     1E19                     CLC1GLS3        equ	7705	;# 
   274     1E1A                     CLC2CON         equ	7706	;# 
   275     1E1B                     CLC2POL         equ	7707	;# 
   276     1E1C                     CLC2SEL0        equ	7708	;# 
   277     1E1D                     CLC2SEL1        equ	7709	;# 
   278     1E1E                     CLC2SEL2        equ	7710	;# 
   279     1E1F                     CLC2SEL3        equ	7711	;# 
   280     1E20                     CLC2GLS0        equ	7712	;# 
   281     1E21                     CLC2GLS1        equ	7713	;# 
   282     1E22                     CLC2GLS2        equ	7714	;# 
   283     1E23                     CLC2GLS3        equ	7715	;# 
   284     1E24                     CLC3CON         equ	7716	;# 
   285     1E25                     CLC3POL         equ	7717	;# 
   286     1E26                     CLC3SEL0        equ	7718	;# 
   287     1E27                     CLC3SEL1        equ	7719	;# 
   288     1E28                     CLC3SEL2        equ	7720	;# 
   289     1E29                     CLC3SEL3        equ	7721	;# 
   290     1E2A                     CLC3GLS0        equ	7722	;# 
   291     1E2B                     CLC3GLS1        equ	7723	;# 
   292     1E2C                     CLC3GLS2        equ	7724	;# 
   293     1E2D                     CLC3GLS3        equ	7725	;# 
   294     1E2E                     CLC4CON         equ	7726	;# 
   295     1E2F                     CLC4POL         equ	7727	;# 
   296     1E30                     CLC4SEL0        equ	7728	;# 
   297     1E31                     CLC4SEL1        equ	7729	;# 
   298     1E32                     CLC4SEL2        equ	7730	;# 
   299     1E33                     CLC4SEL3        equ	7731	;# 
   300     1E34                     CLC4GLS0        equ	7732	;# 
   301     1E35                     CLC4GLS1        equ	7733	;# 
   302     1E36                     CLC4GLS2        equ	7734	;# 
   303     1E37                     CLC4GLS3        equ	7735	;# 
   304     1E8F                     PPSLOCK         equ	7823	;# 
   305     1E90                     INTPPS          equ	7824	;# 
   306     1E91                     T0CKIPPS        equ	7825	;# 
   307     1E92                     T1CKIPPS        equ	7826	;# 
   308     1E93                     T1GPPS          equ	7827	;# 
   309     1E9C                     T2INPPS         equ	7836	;# 
   310     1EA1                     CCP1PPS         equ	7841	;# 
   311     1EA2                     CCP2PPS         equ	7842	;# 
   312     1EB1                     CWG1PPS         equ	7857	;# 
   313     1EBB                     CLCIN0PPS       equ	7867	;# 
   314     1EBC                     CLCIN1PPS       equ	7868	;# 
   315     1EBD                     CLCIN2PPS       equ	7869	;# 
   316     1EBE                     CLCIN3PPS       equ	7870	;# 
   317     1EC3                     ADACTPPS        equ	7875	;# 
   318     1EC5                     SSP1CLKPPS      equ	7877	;# 
   319     1EC6                     SSP1DATPPS      equ	7878	;# 
   320     1EC7                     SSP1SSPPS       equ	7879	;# 
   321     1ECB                     RX1DTPPS        equ	7883	;# 
   322     1ECC                     TX1CKPPS        equ	7884	;# 
   323     1F10                     RA0PPS          equ	7952	;# 
   324     1F11                     RA1PPS          equ	7953	;# 
   325     1F12                     RA2PPS          equ	7954	;# 
   326     1F13                     RA3PPS          equ	7955	;# 
   327     1F14                     RA4PPS          equ	7956	;# 
   328     1F15                     RA5PPS          equ	7957	;# 
   329     1F38                     ANSELA          equ	7992	;# 
   330     1F39                     WPUA            equ	7993	;# 
   331     1F3A                     ODCONA          equ	7994	;# 
   332     1F3B                     SLRCONA         equ	7995	;# 
   333     1F3C                     INLVLA          equ	7996	;# 
   334     1F3D                     IOCAP           equ	7997	;# 
   335     1F3E                     IOCAN           equ	7998	;# 
   336     1F3F                     IOCAF           equ	7999	;# 
   337     1FE4                     STATUS_SHAD     equ	8164	;# 
   338     1FE5                     WREG_SHAD       equ	8165	;# 
   339     1FE6                     BSR_SHAD        equ	8166	;# 
   340     1FE7                     PCLATH_SHAD     equ	8167	;# 
   341     1FE8                     FSR0_SHAD       equ	8168	;# 
   342     1FE8                     FSR0L_SHAD      equ	8168	;# 
   343     1FE9                     FSR0H_SHAD      equ	8169	;# 
   344     1FEA                     FSR1_SHAD       equ	8170	;# 
   345     1FEA                     FSR1L_SHAD      equ	8170	;# 
   346     1FEB                     FSR1H_SHAD      equ	8171	;# 
   347     1FED                     STKPTR          equ	8173	;# 
   348     1FEE                     TOSL            equ	8174	;# 
   349     1FEF                     TOSH            equ	8175	;# 
   350     0000                     INDF0           equ	0	;# 
   351     0001                     INDF1           equ	1	;# 
   352     0002                     PCL             equ	2	;# 
   353     0003                     STATUS          equ	3	;# 
   354     0004                     FSR0L           equ	4	;# 
   355     0005                     FSR0H           equ	5	;# 
   356     0006                     FSR1L           equ	6	;# 
   357     0007                     FSR1H           equ	7	;# 
   358     0008                     BSR             equ	8	;# 
   359     0009                     WREG            equ	9	;# 
   360     000A                     PCLATH          equ	10	;# 
   361     000B                     INTCON          equ	11	;# 
   362     000C                     PORTA           equ	12	;# 
   363     0012                     TRISA           equ	18	;# 
   364     0018                     LATA            equ	24	;# 
   365     009B                     ADRES           equ	155	;# 
   366     009B                     ADRESL          equ	155	;# 
   367     009C                     ADRESH          equ	156	;# 
   368     009D                     ADCON0          equ	157	;# 
   369     009E                     ADCON1          equ	158	;# 
   370     009F                     ADACT           equ	159	;# 
   371     0119                     RC1REG          equ	281	;# 
   372     0119                     RCREG           equ	281	;# 
   373     0119                     RCREG1          equ	281	;# 
   374     011A                     TX1REG          equ	282	;# 
   375     011A                     TXREG1          equ	282	;# 
   376     011A                     TXREG           equ	282	;# 
   377     011B                     SP1BRG          equ	283	;# 
   378     011B                     SPBRG           equ	283	;# 
   379     011B                     SP1BRGL         equ	283	;# 
   380     011B                     SPBRG1          equ	283	;# 
   381     011B                     SPBRGL          equ	283	;# 
   382     011C                     SP1BRGH         equ	284	;# 
   383     011C                     SPBRGH          equ	284	;# 
   384     011C                     SPBRGH1         equ	284	;# 
   385     011D                     RC1STA          equ	285	;# 
   386     011D                     RCSTA1          equ	285	;# 
   387     011D                     RCSTA           equ	285	;# 
   388     011E                     TX1STA          equ	286	;# 
   389     011E                     TXSTA1          equ	286	;# 
   390     011E                     TXSTA           equ	286	;# 
   391     011F                     BAUD1CON        equ	287	;# 
   392     011F                     BAUDCON1        equ	287	;# 
   393     011F                     BAUDCTL1        equ	287	;# 
   394     011F                     BAUDCON         equ	287	;# 
   395     011F                     BAUDCTL         equ	287	;# 
   396     018C                     SSP1BUF         equ	396	;# 
   397     018D                     SSP1ADD         equ	397	;# 
   398     018E                     SSP1MSK         equ	398	;# 
   399     018F                     SSP1STAT        equ	399	;# 
   400     0190                     SSP1CON1        equ	400	;# 
   401     0191                     SSP1CON2        equ	401	;# 
   402     0192                     SSP1CON3        equ	402	;# 
   403     020C                     TMR1            equ	524	;# 
   404     020C                     TMR1L           equ	524	;# 
   405     020D                     TMR1H           equ	525	;# 
   406     020E                     T1CON           equ	526	;# 
   407     020F                     T1GCON          equ	527	;# 
   408     020F                     PR1             equ	527	;# 
   409     0210                     T1GATE          equ	528	;# 
   410     0210                     TMR1GATE        equ	528	;# 
   411     0211                     T1CLK           equ	529	;# 
   412     0211                     TMR1CLK         equ	529	;# 
   413     028C                     T2TMR           equ	652	;# 
   414     028C                     TMR2            equ	652	;# 
   415     028D                     T2PR            equ	653	;# 
   416     028D                     PR2             equ	653	;# 
   417     028E                     T2CON           equ	654	;# 
   418     028F                     T2HLT           equ	655	;# 
   419     0290                     T2CLKCON        equ	656	;# 
   420     0291                     T2RST           equ	657	;# 
   421     030C                     CCPR1           equ	780	;# 
   422     030C                     CCPR1L          equ	780	;# 
   423     030D                     CCPR1H          equ	781	;# 
   424     030E                     CCP1CON         equ	782	;# 
   425     030F                     CCP1CAP         equ	783	;# 
   426     0310                     CCPR2           equ	784	;# 
   427     0310                     CCPR2L          equ	784	;# 
   428     0311                     CCPR2H          equ	785	;# 
   429     0312                     CCP2CON         equ	786	;# 
   430     0313                     CCP2CAP         equ	787	;# 
   431     0314                     PWM3DC          equ	788	;# 
   432     0314                     PWM3DCL         equ	788	;# 
   433     0315                     PWM3DCH         equ	789	;# 
   434     0316                     PWM3CON         equ	790	;# 
   435     0318                     PWM4DC          equ	792	;# 
   436     0318                     PWM4DCL         equ	792	;# 
   437     0319                     PWM4DCH         equ	793	;# 
   438     031A                     PWM4CON         equ	794	;# 
   439     031C                     PWM5DC          equ	796	;# 
   440     031C                     PWM5DCL         equ	796	;# 
   441     031D                     PWM5DCH         equ	797	;# 
   442     031E                     PWM5CON         equ	798	;# 
   443     038C                     PWM6DC          equ	908	;# 
   444     038C                     PWM6DCL         equ	908	;# 
   445     038D                     PWM6DCH         equ	909	;# 
   446     038E                     PWM6CON         equ	910	;# 
   447     058C                     NCO1ACC         equ	1420	;# 
   448     058C                     NCO1ACCL        equ	1420	;# 
   449     058D                     NCO1ACCH        equ	1421	;# 
   450     058E                     NCO1ACCU        equ	1422	;# 
   451     058F                     NCO1INC         equ	1423	;# 
   452     058F                     NCO1INCL        equ	1423	;# 
   453     0590                     NCO1INCH        equ	1424	;# 
   454     0591                     NCO1INCU        equ	1425	;# 
   455     0592                     NCO1CON         equ	1426	;# 
   456     0593                     NCO1CLK         equ	1427	;# 
   457     059C                     TMR0L           equ	1436	;# 
   458     059C                     TMR0            equ	1436	;# 
   459     059D                     TMR0H           equ	1437	;# 
   460     059D                     PR0             equ	1437	;# 
   461     059E                     T0CON0          equ	1438	;# 
   462     059F                     T0CON1          equ	1439	;# 
   463     060C                     CWG1CLKCON      equ	1548	;# 
   464     060D                     CWG1DAT         equ	1549	;# 
   465     060E                     CWG1DBR         equ	1550	;# 
   466     060F                     CWG1DBF         equ	1551	;# 
   467     0610                     CWG1CON0        equ	1552	;# 
   468     0611                     CWG1CON1        equ	1553	;# 
   469     0612                     CWG1AS0         equ	1554	;# 
   470     0613                     CWG1AS1         equ	1555	;# 
   471     0614                     CWG1STR         equ	1556	;# 
   472     070C                     PIR0            equ	1804	;# 
   473     070D                     PIR1            equ	1805	;# 
   474     070E                     PIR2            equ	1806	;# 
   475     070F                     PIR3            equ	1807	;# 
   476     0710                     PIR4            equ	1808	;# 
   477     0711                     PIR5            equ	1809	;# 
   478     0712                     PIR6            equ	1810	;# 
   479     0713                     PIR7            equ	1811	;# 
   480     0716                     PIE0            equ	1814	;# 
   481     0717                     PIE1            equ	1815	;# 
   482     0718                     PIE2            equ	1816	;# 
   483     0719                     PIE3            equ	1817	;# 
   484     071A                     PIE4            equ	1818	;# 
   485     071B                     PIE5            equ	1819	;# 
   486     071C                     PIE6            equ	1820	;# 
   487     071D                     PIE7            equ	1821	;# 
   488     0796                     PMD0            equ	1942	;# 
   489     0797                     PMD1            equ	1943	;# 
   490     0798                     PMD2            equ	1944	;# 
   491     0799                     PMD3            equ	1945	;# 
   492     079A                     PMD4            equ	1946	;# 
   493     079B                     PMD5            equ	1947	;# 
   494     080C                     WDTCON0         equ	2060	;# 
   495     080D                     WDTCON1         equ	2061	;# 
   496     080E                     WDTPSL          equ	2062	;# 
   497     080F                     WDTPSH          equ	2063	;# 
   498     0810                     WDTTMR          equ	2064	;# 
   499     0811                     BORCON          equ	2065	;# 
   500     0812                     VREGCON         equ	2066	;# 
   501     0813                     PCON0           equ	2067	;# 
   502     0814                     PCON1           equ	2068	;# 
   503     081A                     NVMADR          equ	2074	;# 
   504     081A                     NVMADRL         equ	2074	;# 
   505     081B                     NVMADRH         equ	2075	;# 
   506     081C                     NVMDAT          equ	2076	;# 
   507     081C                     NVMDATL         equ	2076	;# 
   508     081D                     NVMDATH         equ	2077	;# 
   509     081E                     NVMCON1         equ	2078	;# 
   510     081F                     NVMCON2         equ	2079	;# 
   511     088C                     CPUDOZE         equ	2188	;# 
   512     088D                     OSCCON1         equ	2189	;# 
   513     088E                     OSCCON2         equ	2190	;# 
   514     088F                     OSCCON3         equ	2191	;# 
   515     0890                     OSCSTAT         equ	2192	;# 
   516     0891                     OSCEN           equ	2193	;# 
   517     0892                     OSCTUNE         equ	2194	;# 
   518     0893                     OSCFRQ          equ	2195	;# 
   519     0895                     CLKRCON         equ	2197	;# 
   520     0896                     CLKRCLK         equ	2198	;# 
   521     090C                     FVRCON          equ	2316	;# 
   522     090E                     DAC1CON0        equ	2318	;# 
   523     090F                     DAC1CON1        equ	2319	;# 
   524     091F                     ZCDCON          equ	2335	;# 
   525     098F                     CMOUT           equ	2447	;# 
   526     098F                     CMSTAT          equ	2447	;# 
   527     0990                     CM1CON0         equ	2448	;# 
   528     0991                     CM1CON1         equ	2449	;# 
   529     0992                     CM1NCH          equ	2450	;# 
   530     0993                     CM1PCH          equ	2451	;# 
   531     1E0F                     CLCDATA         equ	7695	;# 
   532     1E10                     CLC1CON         equ	7696	;# 
   533     1E11                     CLC1POL         equ	7697	;# 
   534     1E12                     CLC1SEL0        equ	7698	;# 
   535     1E13                     CLC1SEL1        equ	7699	;# 
   536     1E14                     CLC1SEL2        equ	7700	;# 
   537     1E15                     CLC1SEL3        equ	7701	;# 
   538     1E16                     CLC1GLS0        equ	7702	;# 
   539     1E17                     CLC1GLS1        equ	7703	;# 
   540     1E18                     CLC1GLS2        equ	7704	;# 
   541     1E19                     CLC1GLS3        equ	7705	;# 
   542     1E1A                     CLC2CON         equ	7706	;# 
   543     1E1B                     CLC2POL         equ	7707	;# 
   544     1E1C                     CLC2SEL0        equ	7708	;# 
   545     1E1D                     CLC2SEL1        equ	7709	;# 
   546     1E1E                     CLC2SEL2        equ	7710	;# 
   547     1E1F                     CLC2SEL3        equ	7711	;# 
   548     1E20                     CLC2GLS0        equ	7712	;# 
   549     1E21                     CLC2GLS1        equ	7713	;# 
   550     1E22                     CLC2GLS2        equ	7714	;# 
   551     1E23                     CLC2GLS3        equ	7715	;# 
   552     1E24                     CLC3CON         equ	7716	;# 
   553     1E25                     CLC3POL         equ	7717	;# 
   554     1E26                     CLC3SEL0        equ	7718	;# 
   555     1E27                     CLC3SEL1        equ	7719	;# 
   556     1E28                     CLC3SEL2        equ	7720	;# 
   557     1E29                     CLC3SEL3        equ	7721	;# 
   558     1E2A                     CLC3GLS0        equ	7722	;# 
   559     1E2B                     CLC3GLS1        equ	7723	;# 
   560     1E2C                     CLC3GLS2        equ	7724	;# 
   561     1E2D                     CLC3GLS3        equ	7725	;# 
   562     1E2E                     CLC4CON         equ	7726	;# 
   563     1E2F                     CLC4POL         equ	7727	;# 
   564     1E30                     CLC4SEL0        equ	7728	;# 
   565     1E31                     CLC4SEL1        equ	7729	;# 
   566     1E32                     CLC4SEL2        equ	7730	;# 
   567     1E33                     CLC4SEL3        equ	7731	;# 
   568     1E34                     CLC4GLS0        equ	7732	;# 
   569     1E35                     CLC4GLS1        equ	7733	;# 
   570     1E36                     CLC4GLS2        equ	7734	;# 
   571     1E37                     CLC4GLS3        equ	7735	;# 
   572     1E8F                     PPSLOCK         equ	7823	;# 
   573     1E90                     INTPPS          equ	7824	;# 
   574     1E91                     T0CKIPPS        equ	7825	;# 
   575     1E92                     T1CKIPPS        equ	7826	;# 
   576     1E93                     T1GPPS          equ	7827	;# 
   577     1E9C                     T2INPPS         equ	7836	;# 
   578     1EA1                     CCP1PPS         equ	7841	;# 
   579     1EA2                     CCP2PPS         equ	7842	;# 
   580     1EB1                     CWG1PPS         equ	7857	;# 
   581     1EBB                     CLCIN0PPS       equ	7867	;# 
   582     1EBC                     CLCIN1PPS       equ	7868	;# 
   583     1EBD                     CLCIN2PPS       equ	7869	;# 
   584     1EBE                     CLCIN3PPS       equ	7870	;# 
   585     1EC3                     ADACTPPS        equ	7875	;# 
   586     1EC5                     SSP1CLKPPS      equ	7877	;# 
   587     1EC6                     SSP1DATPPS      equ	7878	;# 
   588     1EC7                     SSP1SSPPS       equ	7879	;# 
   589     1ECB                     RX1DTPPS        equ	7883	;# 
   590     1ECC                     TX1CKPPS        equ	7884	;# 
   591     1F10                     RA0PPS          equ	7952	;# 
   592     1F11                     RA1PPS          equ	7953	;# 
   593     1F12                     RA2PPS          equ	7954	;# 
   594     1F13                     RA3PPS          equ	7955	;# 
   595     1F14                     RA4PPS          equ	7956	;# 
   596     1F15                     RA5PPS          equ	7957	;# 
   597     1F38                     ANSELA          equ	7992	;# 
   598     1F39                     WPUA            equ	7993	;# 
   599     1F3A                     ODCONA          equ	7994	;# 
   600     1F3B                     SLRCONA         equ	7995	;# 
   601     1F3C                     INLVLA          equ	7996	;# 
   602     1F3D                     IOCAP           equ	7997	;# 
   603     1F3E                     IOCAN           equ	7998	;# 
   604     1F3F                     IOCAF           equ	7999	;# 
   605     1FE4                     STATUS_SHAD     equ	8164	;# 
   606     1FE5                     WREG_SHAD       equ	8165	;# 
   607     1FE6                     BSR_SHAD        equ	8166	;# 
   608     1FE7                     PCLATH_SHAD     equ	8167	;# 
   609     1FE8                     FSR0_SHAD       equ	8168	;# 
   610     1FE8                     FSR0L_SHAD      equ	8168	;# 
   611     1FE9                     FSR0H_SHAD      equ	8169	;# 
   612     1FEA                     FSR1_SHAD       equ	8170	;# 
   613     1FEA                     FSR1L_SHAD      equ	8170	;# 
   614     1FEB                     FSR1H_SHAD      equ	8171	;# 
   615     1FED                     STKPTR          equ	8173	;# 
   616     1FEE                     TOSL            equ	8174	;# 
   617     1FEF                     TOSH            equ	8175	;# 
   618     0000                     INDF0           equ	0	;# 
   619     0001                     INDF1           equ	1	;# 
   620     0002                     PCL             equ	2	;# 
   621     0003                     STATUS          equ	3	;# 
   622     0004                     FSR0L           equ	4	;# 
   623     0005                     FSR0H           equ	5	;# 
   624     0006                     FSR1L           equ	6	;# 
   625     0007                     FSR1H           equ	7	;# 
   626     0008                     BSR             equ	8	;# 
   627     0009                     WREG            equ	9	;# 
   628     000A                     PCLATH          equ	10	;# 
   629     000B                     INTCON          equ	11	;# 
   630     000C                     PORTA           equ	12	;# 
   631     0012                     TRISA           equ	18	;# 
   632     0018                     LATA            equ	24	;# 
   633     009B                     ADRES           equ	155	;# 
   634     009B                     ADRESL          equ	155	;# 
   635     009C                     ADRESH          equ	156	;# 
   636     009D                     ADCON0          equ	157	;# 
   637     009E                     ADCON1          equ	158	;# 
   638     009F                     ADACT           equ	159	;# 
   639     0119                     RC1REG          equ	281	;# 
   640     0119                     RCREG           equ	281	;# 
   641     0119                     RCREG1          equ	281	;# 
   642     011A                     TX1REG          equ	282	;# 
   643     011A                     TXREG1          equ	282	;# 
   644     011A                     TXREG           equ	282	;# 
   645     011B                     SP1BRG          equ	283	;# 
   646     011B                     SPBRG           equ	283	;# 
   647     011B                     SP1BRGL         equ	283	;# 
   648     011B                     SPBRG1          equ	283	;# 
   649     011B                     SPBRGL          equ	283	;# 
   650     011C                     SP1BRGH         equ	284	;# 
   651     011C                     SPBRGH          equ	284	;# 
   652     011C                     SPBRGH1         equ	284	;# 
   653     011D                     RC1STA          equ	285	;# 
   654     011D                     RCSTA1          equ	285	;# 
   655     011D                     RCSTA           equ	285	;# 
   656     011E                     TX1STA          equ	286	;# 
   657     011E                     TXSTA1          equ	286	;# 
   658     011E                     TXSTA           equ	286	;# 
   659     011F                     BAUD1CON        equ	287	;# 
   660     011F                     BAUDCON1        equ	287	;# 
   661     011F                     BAUDCTL1        equ	287	;# 
   662     011F                     BAUDCON         equ	287	;# 
   663     011F                     BAUDCTL         equ	287	;# 
   664     018C                     SSP1BUF         equ	396	;# 
   665     018D                     SSP1ADD         equ	397	;# 
   666     018E                     SSP1MSK         equ	398	;# 
   667     018F                     SSP1STAT        equ	399	;# 
   668     0190                     SSP1CON1        equ	400	;# 
   669     0191                     SSP1CON2        equ	401	;# 
   670     0192                     SSP1CON3        equ	402	;# 
   671     020C                     TMR1            equ	524	;# 
   672     020C                     TMR1L           equ	524	;# 
   673     020D                     TMR1H           equ	525	;# 
   674     020E                     T1CON           equ	526	;# 
   675     020F                     T1GCON          equ	527	;# 
   676     020F                     PR1             equ	527	;# 
   677     0210                     T1GATE          equ	528	;# 
   678     0210                     TMR1GATE        equ	528	;# 
   679     0211                     T1CLK           equ	529	;# 
   680     0211                     TMR1CLK         equ	529	;# 
   681     028C                     T2TMR           equ	652	;# 
   682     028C                     TMR2            equ	652	;# 
   683     028D                     T2PR            equ	653	;# 
   684     028D                     PR2             equ	653	;# 
   685     028E                     T2CON           equ	654	;# 
   686     028F                     T2HLT           equ	655	;# 
   687     0290                     T2CLKCON        equ	656	;# 
   688     0291                     T2RST           equ	657	;# 
   689     030C                     CCPR1           equ	780	;# 
   690     030C                     CCPR1L          equ	780	;# 
   691     030D                     CCPR1H          equ	781	;# 
   692     030E                     CCP1CON         equ	782	;# 
   693     030F                     CCP1CAP         equ	783	;# 
   694     0310                     CCPR2           equ	784	;# 
   695     0310                     CCPR2L          equ	784	;# 
   696     0311                     CCPR2H          equ	785	;# 
   697     0312                     CCP2CON         equ	786	;# 
   698     0313                     CCP2CAP         equ	787	;# 
   699     0314                     PWM3DC          equ	788	;# 
   700     0314                     PWM3DCL         equ	788	;# 
   701     0315                     PWM3DCH         equ	789	;# 
   702     0316                     PWM3CON         equ	790	;# 
   703     0318                     PWM4DC          equ	792	;# 
   704     0318                     PWM4DCL         equ	792	;# 
   705     0319                     PWM4DCH         equ	793	;# 
   706     031A                     PWM4CON         equ	794	;# 
   707     031C                     PWM5DC          equ	796	;# 
   708     031C                     PWM5DCL         equ	796	;# 
   709     031D                     PWM5DCH         equ	797	;# 
   710     031E                     PWM5CON         equ	798	;# 
   711     038C                     PWM6DC          equ	908	;# 
   712     038C                     PWM6DCL         equ	908	;# 
   713     038D                     PWM6DCH         equ	909	;# 
   714     038E                     PWM6CON         equ	910	;# 
   715     058C                     NCO1ACC         equ	1420	;# 
   716     058C                     NCO1ACCL        equ	1420	;# 
   717     058D                     NCO1ACCH        equ	1421	;# 
   718     058E                     NCO1ACCU        equ	1422	;# 
   719     058F                     NCO1INC         equ	1423	;# 
   720     058F                     NCO1INCL        equ	1423	;# 
   721     0590                     NCO1INCH        equ	1424	;# 
   722     0591                     NCO1INCU        equ	1425	;# 
   723     0592                     NCO1CON         equ	1426	;# 
   724     0593                     NCO1CLK         equ	1427	;# 
   725     059C                     TMR0L           equ	1436	;# 
   726     059C                     TMR0            equ	1436	;# 
   727     059D                     TMR0H           equ	1437	;# 
   728     059D                     PR0             equ	1437	;# 
   729     059E                     T0CON0          equ	1438	;# 
   730     059F                     T0CON1          equ	1439	;# 
   731     060C                     CWG1CLKCON      equ	1548	;# 
   732     060D                     CWG1DAT         equ	1549	;# 
   733     060E                     CWG1DBR         equ	1550	;# 
   734     060F                     CWG1DBF         equ	1551	;# 
   735     0610                     CWG1CON0        equ	1552	;# 
   736     0611                     CWG1CON1        equ	1553	;# 
   737     0612                     CWG1AS0         equ	1554	;# 
   738     0613                     CWG1AS1         equ	1555	;# 
   739     0614                     CWG1STR         equ	1556	;# 
   740     070C                     PIR0            equ	1804	;# 
   741     070D                     PIR1            equ	1805	;# 
   742     070E                     PIR2            equ	1806	;# 
   743     070F                     PIR3            equ	1807	;# 
   744     0710                     PIR4            equ	1808	;# 
   745     0711                     PIR5            equ	1809	;# 
   746     0712                     PIR6            equ	1810	;# 
   747     0713                     PIR7            equ	1811	;# 
   748     0716                     PIE0            equ	1814	;# 
   749     0717                     PIE1            equ	1815	;# 
   750     0718                     PIE2            equ	1816	;# 
   751     0719                     PIE3            equ	1817	;# 
   752     071A                     PIE4            equ	1818	;# 
   753     071B                     PIE5            equ	1819	;# 
   754     071C                     PIE6            equ	1820	;# 
   755     071D                     PIE7            equ	1821	;# 
   756     0796                     PMD0            equ	1942	;# 
   757     0797                     PMD1            equ	1943	;# 
   758     0798                     PMD2            equ	1944	;# 
   759     0799                     PMD3            equ	1945	;# 
   760     079A                     PMD4            equ	1946	;# 
   761     079B                     PMD5            equ	1947	;# 
   762     080C                     WDTCON0         equ	2060	;# 
   763     080D                     WDTCON1         equ	2061	;# 
   764     080E                     WDTPSL          equ	2062	;# 
   765     080F                     WDTPSH          equ	2063	;# 
   766     0810                     WDTTMR          equ	2064	;# 
   767     0811                     BORCON          equ	2065	;# 
   768     0812                     VREGCON         equ	2066	;# 
   769     0813                     PCON0           equ	2067	;# 
   770     0814                     PCON1           equ	2068	;# 
   771     081A                     NVMADR          equ	2074	;# 
   772     081A                     NVMADRL         equ	2074	;# 
   773     081B                     NVMADRH         equ	2075	;# 
   774     081C                     NVMDAT          equ	2076	;# 
   775     081C                     NVMDATL         equ	2076	;# 
   776     081D                     NVMDATH         equ	2077	;# 
   777     081E                     NVMCON1         equ	2078	;# 
   778     081F                     NVMCON2         equ	2079	;# 
   779     088C                     CPUDOZE         equ	2188	;# 
   780     088D                     OSCCON1         equ	2189	;# 
   781     088E                     OSCCON2         equ	2190	;# 
   782     088F                     OSCCON3         equ	2191	;# 
   783     0890                     OSCSTAT         equ	2192	;# 
   784     0891                     OSCEN           equ	2193	;# 
   785     0892                     OSCTUNE         equ	2194	;# 
   786     0893                     OSCFRQ          equ	2195	;# 
   787     0895                     CLKRCON         equ	2197	;# 
   788     0896                     CLKRCLK         equ	2198	;# 
   789     090C                     FVRCON          equ	2316	;# 
   790     090E                     DAC1CON0        equ	2318	;# 
   791     090F                     DAC1CON1        equ	2319	;# 
   792     091F                     ZCDCON          equ	2335	;# 
   793     098F                     CMOUT           equ	2447	;# 
   794     098F                     CMSTAT          equ	2447	;# 
   795     0990                     CM1CON0         equ	2448	;# 
   796     0991                     CM1CON1         equ	2449	;# 
   797     0992                     CM1NCH          equ	2450	;# 
   798     0993                     CM1PCH          equ	2451	;# 
   799     1E0F                     CLCDATA         equ	7695	;# 
   800     1E10                     CLC1CON         equ	7696	;# 
   801     1E11                     CLC1POL         equ	7697	;# 
   802     1E12                     CLC1SEL0        equ	7698	;# 
   803     1E13                     CLC1SEL1        equ	7699	;# 
   804     1E14                     CLC1SEL2        equ	7700	;# 
   805     1E15                     CLC1SEL3        equ	7701	;# 
   806     1E16                     CLC1GLS0        equ	7702	;# 
   807     1E17                     CLC1GLS1        equ	7703	;# 
   808     1E18                     CLC1GLS2        equ	7704	;# 
   809     1E19                     CLC1GLS3        equ	7705	;# 
   810     1E1A                     CLC2CON         equ	7706	;# 
   811     1E1B                     CLC2POL         equ	7707	;# 
   812     1E1C                     CLC2SEL0        equ	7708	;# 
   813     1E1D                     CLC2SEL1        equ	7709	;# 
   814     1E1E                     CLC2SEL2        equ	7710	;# 
   815     1E1F                     CLC2SEL3        equ	7711	;# 
   816     1E20                     CLC2GLS0        equ	7712	;# 
   817     1E21                     CLC2GLS1        equ	7713	;# 
   818     1E22                     CLC2GLS2        equ	7714	;# 
   819     1E23                     CLC2GLS3        equ	7715	;# 
   820     1E24                     CLC3CON         equ	7716	;# 
   821     1E25                     CLC3POL         equ	7717	;# 
   822     1E26                     CLC3SEL0        equ	7718	;# 
   823     1E27                     CLC3SEL1        equ	7719	;# 
   824     1E28                     CLC3SEL2        equ	7720	;# 
   825     1E29                     CLC3SEL3        equ	7721	;# 
   826     1E2A                     CLC3GLS0        equ	7722	;# 
   827     1E2B                     CLC3GLS1        equ	7723	;# 
   828     1E2C                     CLC3GLS2        equ	7724	;# 
   829     1E2D                     CLC3GLS3        equ	7725	;# 
   830     1E2E                     CLC4CON         equ	7726	;# 
   831     1E2F                     CLC4POL         equ	7727	;# 
   832     1E30                     CLC4SEL0        equ	7728	;# 
   833     1E31                     CLC4SEL1        equ	7729	;# 
   834     1E32                     CLC4SEL2        equ	7730	;# 
   835     1E33                     CLC4SEL3        equ	7731	;# 
   836     1E34                     CLC4GLS0        equ	7732	;# 
   837     1E35                     CLC4GLS1        equ	7733	;# 
   838     1E36                     CLC4GLS2        equ	7734	;# 
   839     1E37                     CLC4GLS3        equ	7735	;# 
   840     1E8F                     PPSLOCK         equ	7823	;# 
   841     1E90                     INTPPS          equ	7824	;# 
   842     1E91                     T0CKIPPS        equ	7825	;# 
   843     1E92                     T1CKIPPS        equ	7826	;# 
   844     1E93                     T1GPPS          equ	7827	;# 
   845     1E9C                     T2INPPS         equ	7836	;# 
   846     1EA1                     CCP1PPS         equ	7841	;# 
   847     1EA2                     CCP2PPS         equ	7842	;# 
   848     1EB1                     CWG1PPS         equ	7857	;# 
   849     1EBB                     CLCIN0PPS       equ	7867	;# 
   850     1EBC                     CLCIN1PPS       equ	7868	;# 
   851     1EBD                     CLCIN2PPS       equ	7869	;# 
   852     1EBE                     CLCIN3PPS       equ	7870	;# 
   853     1EC3                     ADACTPPS        equ	7875	;# 
   854     1EC5                     SSP1CLKPPS      equ	7877	;# 
   855     1EC6                     SSP1DATPPS      equ	7878	;# 
   856     1EC7                     SSP1SSPPS       equ	7879	;# 
   857     1ECB                     RX1DTPPS        equ	7883	;# 
   858     1ECC                     TX1CKPPS        equ	7884	;# 
   859     1F10                     RA0PPS          equ	7952	;# 
   860     1F11                     RA1PPS          equ	7953	;# 
   861     1F12                     RA2PPS          equ	7954	;# 
   862     1F13                     RA3PPS          equ	7955	;# 
   863     1F14                     RA4PPS          equ	7956	;# 
   864     1F15                     RA5PPS          equ	7957	;# 
   865     1F38                     ANSELA          equ	7992	;# 
   866     1F39                     WPUA            equ	7993	;# 
   867     1F3A                     ODCONA          equ	7994	;# 
   868     1F3B                     SLRCONA         equ	7995	;# 
   869     1F3C                     INLVLA          equ	7996	;# 
   870     1F3D                     IOCAP           equ	7997	;# 
   871     1F3E                     IOCAN           equ	7998	;# 
   872     1F3F                     IOCAF           equ	7999	;# 
   873     1FE4                     STATUS_SHAD     equ	8164	;# 
   874     1FE5                     WREG_SHAD       equ	8165	;# 
   875     1FE6                     BSR_SHAD        equ	8166	;# 
   876     1FE7                     PCLATH_SHAD     equ	8167	;# 
   877     1FE8                     FSR0_SHAD       equ	8168	;# 
   878     1FE8                     FSR0L_SHAD      equ	8168	;# 
   879     1FE9                     FSR0H_SHAD      equ	8169	;# 
   880     1FEA                     FSR1_SHAD       equ	8170	;# 
   881     1FEA                     FSR1L_SHAD      equ	8170	;# 
   882     1FEB                     FSR1H_SHAD      equ	8171	;# 
   883     1FED                     STKPTR          equ	8173	;# 
   884     1FEE                     TOSL            equ	8174	;# 
   885     1FEF                     TOSH            equ	8175	;# 
   886     0000                     INDF0           equ	0	;# 
   887     0001                     INDF1           equ	1	;# 
   888     0002                     PCL             equ	2	;# 
   889     0003                     STATUS          equ	3	;# 
   890     0004                     FSR0L           equ	4	;# 
   891     0005                     FSR0H           equ	5	;# 
   892     0006                     FSR1L           equ	6	;# 
   893     0007                     FSR1H           equ	7	;# 
   894     0008                     BSR             equ	8	;# 
   895     0009                     WREG            equ	9	;# 
   896     000A                     PCLATH          equ	10	;# 
   897     000B                     INTCON          equ	11	;# 
   898     000C                     PORTA           equ	12	;# 
   899     0012                     TRISA           equ	18	;# 
   900     0018                     LATA            equ	24	;# 
   901     009B                     ADRES           equ	155	;# 
   902     009B                     ADRESL          equ	155	;# 
   903     009C                     ADRESH          equ	156	;# 
   904     009D                     ADCON0          equ	157	;# 
   905     009E                     ADCON1          equ	158	;# 
   906     009F                     ADACT           equ	159	;# 
   907     0119                     RC1REG          equ	281	;# 
   908     0119                     RCREG           equ	281	;# 
   909     0119                     RCREG1          equ	281	;# 
   910     011A                     TX1REG          equ	282	;# 
   911     011A                     TXREG1          equ	282	;# 
   912     011A                     TXREG           equ	282	;# 
   913     011B                     SP1BRG          equ	283	;# 
   914     011B                     SPBRG           equ	283	;# 
   915     011B                     SP1BRGL         equ	283	;# 
   916     011B                     SPBRG1          equ	283	;# 
   917     011B                     SPBRGL          equ	283	;# 
   918     011C                     SP1BRGH         equ	284	;# 
   919     011C                     SPBRGH          equ	284	;# 
   920     011C                     SPBRGH1         equ	284	;# 
   921     011D                     RC1STA          equ	285	;# 
   922     011D                     RCSTA1          equ	285	;# 
   923     011D                     RCSTA           equ	285	;# 
   924     011E                     TX1STA          equ	286	;# 
   925     011E                     TXSTA1          equ	286	;# 
   926     011E                     TXSTA           equ	286	;# 
   927     011F                     BAUD1CON        equ	287	;# 
   928     011F                     BAUDCON1        equ	287	;# 
   929     011F                     BAUDCTL1        equ	287	;# 
   930     011F                     BAUDCON         equ	287	;# 
   931     011F                     BAUDCTL         equ	287	;# 
   932     018C                     SSP1BUF         equ	396	;# 
   933     018D                     SSP1ADD         equ	397	;# 
   934     018E                     SSP1MSK         equ	398	;# 
   935     018F                     SSP1STAT        equ	399	;# 
   936     0190                     SSP1CON1        equ	400	;# 
   937     0191                     SSP1CON2        equ	401	;# 
   938     0192                     SSP1CON3        equ	402	;# 
   939     020C                     TMR1            equ	524	;# 
   940     020C                     TMR1L           equ	524	;# 
   941     020D                     TMR1H           equ	525	;# 
   942     020E                     T1CON           equ	526	;# 
   943     020F                     T1GCON          equ	527	;# 
   944     020F                     PR1             equ	527	;# 
   945     0210                     T1GATE          equ	528	;# 
   946     0210                     TMR1GATE        equ	528	;# 
   947     0211                     T1CLK           equ	529	;# 
   948     0211                     TMR1CLK         equ	529	;# 
   949     028C                     T2TMR           equ	652	;# 
   950     028C                     TMR2            equ	652	;# 
   951     028D                     T2PR            equ	653	;# 
   952     028D                     PR2             equ	653	;# 
   953     028E                     T2CON           equ	654	;# 
   954     028F                     T2HLT           equ	655	;# 
   955     0290                     T2CLKCON        equ	656	;# 
   956     0291                     T2RST           equ	657	;# 
   957     030C                     CCPR1           equ	780	;# 
   958     030C                     CCPR1L          equ	780	;# 
   959     030D                     CCPR1H          equ	781	;# 
   960     030E                     CCP1CON         equ	782	;# 
   961     030F                     CCP1CAP         equ	783	;# 
   962     0310                     CCPR2           equ	784	;# 
   963     0310                     CCPR2L          equ	784	;# 
   964     0311                     CCPR2H          equ	785	;# 
   965     0312                     CCP2CON         equ	786	;# 
   966     0313                     CCP2CAP         equ	787	;# 
   967     0314                     PWM3DC          equ	788	;# 
   968     0314                     PWM3DCL         equ	788	;# 
   969     0315                     PWM3DCH         equ	789	;# 
   970     0316                     PWM3CON         equ	790	;# 
   971     0318                     PWM4DC          equ	792	;# 
   972     0318                     PWM4DCL         equ	792	;# 
   973     0319                     PWM4DCH         equ	793	;# 
   974     031A                     PWM4CON         equ	794	;# 
   975     031C                     PWM5DC          equ	796	;# 
   976     031C                     PWM5DCL         equ	796	;# 
   977     031D                     PWM5DCH         equ	797	;# 
   978     031E                     PWM5CON         equ	798	;# 
   979     038C                     PWM6DC          equ	908	;# 
   980     038C                     PWM6DCL         equ	908	;# 
   981     038D                     PWM6DCH         equ	909	;# 
   982     038E                     PWM6CON         equ	910	;# 
   983     058C                     NCO1ACC         equ	1420	;# 
   984     058C                     NCO1ACCL        equ	1420	;# 
   985     058D                     NCO1ACCH        equ	1421	;# 
   986     058E                     NCO1ACCU        equ	1422	;# 
   987     058F                     NCO1INC         equ	1423	;# 
   988     058F                     NCO1INCL        equ	1423	;# 
   989     0590                     NCO1INCH        equ	1424	;# 
   990     0591                     NCO1INCU        equ	1425	;# 
   991     0592                     NCO1CON         equ	1426	;# 
   992     0593                     NCO1CLK         equ	1427	;# 
   993     059C                     TMR0L           equ	1436	;# 
   994     059C                     TMR0            equ	1436	;# 
   995     059D                     TMR0H           equ	1437	;# 
   996     059D                     PR0             equ	1437	;# 
   997     059E                     T0CON0          equ	1438	;# 
   998     059F                     T0CON1          equ	1439	;# 
   999     060C                     CWG1CLKCON      equ	1548	;# 
  1000     060D                     CWG1DAT         equ	1549	;# 
  1001     060E                     CWG1DBR         equ	1550	;# 
  1002     060F                     CWG1DBF         equ	1551	;# 
  1003     0610                     CWG1CON0        equ	1552	;# 
  1004     0611                     CWG1CON1        equ	1553	;# 
  1005     0612                     CWG1AS0         equ	1554	;# 
  1006     0613                     CWG1AS1         equ	1555	;# 
  1007     0614                     CWG1STR         equ	1556	;# 
  1008     070C                     PIR0            equ	1804	;# 
  1009     070D                     PIR1            equ	1805	;# 
  1010     070E                     PIR2            equ	1806	;# 
  1011     070F                     PIR3            equ	1807	;# 
  1012     0710                     PIR4            equ	1808	;# 
  1013     0711                     PIR5            equ	1809	;# 
  1014     0712                     PIR6            equ	1810	;# 
  1015     0713                     PIR7            equ	1811	;# 
  1016     0716                     PIE0            equ	1814	;# 
  1017     0717                     PIE1            equ	1815	;# 
  1018     0718                     PIE2            equ	1816	;# 
  1019     0719                     PIE3            equ	1817	;# 
  1020     071A                     PIE4            equ	1818	;# 
  1021     071B                     PIE5            equ	1819	;# 
  1022     071C                     PIE6            equ	1820	;# 
  1023     071D                     PIE7            equ	1821	;# 
  1024     0796                     PMD0            equ	1942	;# 
  1025     0797                     PMD1            equ	1943	;# 
  1026     0798                     PMD2            equ	1944	;# 
  1027     0799                     PMD3            equ	1945	;# 
  1028     079A                     PMD4            equ	1946	;# 
  1029     079B                     PMD5            equ	1947	;# 
  1030     080C                     WDTCON0         equ	2060	;# 
  1031     080D                     WDTCON1         equ	2061	;# 
  1032     080E                     WDTPSL          equ	2062	;# 
  1033     080F                     WDTPSH          equ	2063	;# 
  1034     0810                     WDTTMR          equ	2064	;# 
  1035     0811                     BORCON          equ	2065	;# 
  1036     0812                     VREGCON         equ	2066	;# 
  1037     0813                     PCON0           equ	2067	;# 
  1038     0814                     PCON1           equ	2068	;# 
  1039     081A                     NVMADR          equ	2074	;# 
  1040     081A                     NVMADRL         equ	2074	;# 
  1041     081B                     NVMADRH         equ	2075	;# 
  1042     081C                     NVMDAT          equ	2076	;# 
  1043     081C                     NVMDATL         equ	2076	;# 
  1044     081D                     NVMDATH         equ	2077	;# 
  1045     081E                     NVMCON1         equ	2078	;# 
  1046     081F                     NVMCON2         equ	2079	;# 
  1047     088C                     CPUDOZE         equ	2188	;# 
  1048     088D                     OSCCON1         equ	2189	;# 
  1049     088E                     OSCCON2         equ	2190	;# 
  1050     088F                     OSCCON3         equ	2191	;# 
  1051     0890                     OSCSTAT         equ	2192	;# 
  1052     0891                     OSCEN           equ	2193	;# 
  1053     0892                     OSCTUNE         equ	2194	;# 
  1054     0893                     OSCFRQ          equ	2195	;# 
  1055     0895                     CLKRCON         equ	2197	;# 
  1056     0896                     CLKRCLK         equ	2198	;# 
  1057     090C                     FVRCON          equ	2316	;# 
  1058     090E                     DAC1CON0        equ	2318	;# 
  1059     090F                     DAC1CON1        equ	2319	;# 
  1060     091F                     ZCDCON          equ	2335	;# 
  1061     098F                     CMOUT           equ	2447	;# 
  1062     098F                     CMSTAT          equ	2447	;# 
  1063     0990                     CM1CON0         equ	2448	;# 
  1064     0991                     CM1CON1         equ	2449	;# 
  1065     0992                     CM1NCH          equ	2450	;# 
  1066     0993                     CM1PCH          equ	2451	;# 
  1067     1E0F                     CLCDATA         equ	7695	;# 
  1068     1E10                     CLC1CON         equ	7696	;# 
  1069     1E11                     CLC1POL         equ	7697	;# 
  1070     1E12                     CLC1SEL0        equ	7698	;# 
  1071     1E13                     CLC1SEL1        equ	7699	;# 
  1072     1E14                     CLC1SEL2        equ	7700	;# 
  1073     1E15                     CLC1SEL3        equ	7701	;# 
  1074     1E16                     CLC1GLS0        equ	7702	;# 
  1075     1E17                     CLC1GLS1        equ	7703	;# 
  1076     1E18                     CLC1GLS2        equ	7704	;# 
  1077     1E19                     CLC1GLS3        equ	7705	;# 
  1078     1E1A                     CLC2CON         equ	7706	;# 
  1079     1E1B                     CLC2POL         equ	7707	;# 
  1080     1E1C                     CLC2SEL0        equ	7708	;# 
  1081     1E1D                     CLC2SEL1        equ	7709	;# 
  1082     1E1E                     CLC2SEL2        equ	7710	;# 
  1083     1E1F                     CLC2SEL3        equ	7711	;# 
  1084     1E20                     CLC2GLS0        equ	7712	;# 
  1085     1E21                     CLC2GLS1        equ	7713	;# 
  1086     1E22                     CLC2GLS2        equ	7714	;# 
  1087     1E23                     CLC2GLS3        equ	7715	;# 
  1088     1E24                     CLC3CON         equ	7716	;# 
  1089     1E25                     CLC3POL         equ	7717	;# 
  1090     1E26                     CLC3SEL0        equ	7718	;# 
  1091     1E27                     CLC3SEL1        equ	7719	;# 
  1092     1E28                     CLC3SEL2        equ	7720	;# 
  1093     1E29                     CLC3SEL3        equ	7721	;# 
  1094     1E2A                     CLC3GLS0        equ	7722	;# 
  1095     1E2B                     CLC3GLS1        equ	7723	;# 
  1096     1E2C                     CLC3GLS2        equ	7724	;# 
  1097     1E2D                     CLC3GLS3        equ	7725	;# 
  1098     1E2E                     CLC4CON         equ	7726	;# 
  1099     1E2F                     CLC4POL         equ	7727	;# 
  1100     1E30                     CLC4SEL0        equ	7728	;# 
  1101     1E31                     CLC4SEL1        equ	7729	;# 
  1102     1E32                     CLC4SEL2        equ	7730	;# 
  1103     1E33                     CLC4SEL3        equ	7731	;# 
  1104     1E34                     CLC4GLS0        equ	7732	;# 
  1105     1E35                     CLC4GLS1        equ	7733	;# 
  1106     1E36                     CLC4GLS2        equ	7734	;# 
  1107     1E37                     CLC4GLS3        equ	7735	;# 
  1108     1E8F                     PPSLOCK         equ	7823	;# 
  1109     1E90                     INTPPS          equ	7824	;# 
  1110     1E91                     T0CKIPPS        equ	7825	;# 
  1111     1E92                     T1CKIPPS        equ	7826	;# 
  1112     1E93                     T1GPPS          equ	7827	;# 
  1113     1E9C                     T2INPPS         equ	7836	;# 
  1114     1EA1                     CCP1PPS         equ	7841	;# 
  1115     1EA2                     CCP2PPS         equ	7842	;# 
  1116     1EB1                     CWG1PPS         equ	7857	;# 
  1117     1EBB                     CLCIN0PPS       equ	7867	;# 
  1118     1EBC                     CLCIN1PPS       equ	7868	;# 
  1119     1EBD                     CLCIN2PPS       equ	7869	;# 
  1120     1EBE                     CLCIN3PPS       equ	7870	;# 
  1121     1EC3                     ADACTPPS        equ	7875	;# 
  1122     1EC5                     SSP1CLKPPS      equ	7877	;# 
  1123     1EC6                     SSP1DATPPS      equ	7878	;# 
  1124     1EC7                     SSP1SSPPS       equ	7879	;# 
  1125     1ECB                     RX1DTPPS        equ	7883	;# 
  1126     1ECC                     TX1CKPPS        equ	7884	;# 
  1127     1F10                     RA0PPS          equ	7952	;# 
  1128     1F11                     RA1PPS          equ	7953	;# 
  1129     1F12                     RA2PPS          equ	7954	;# 
  1130     1F13                     RA3PPS          equ	7955	;# 
  1131     1F14                     RA4PPS          equ	7956	;# 
  1132     1F15                     RA5PPS          equ	7957	;# 
  1133     1F38                     ANSELA          equ	7992	;# 
  1134     1F39                     WPUA            equ	7993	;# 
  1135     1F3A                     ODCONA          equ	7994	;# 
  1136     1F3B                     SLRCONA         equ	7995	;# 
  1137     1F3C                     INLVLA          equ	7996	;# 
  1138     1F3D                     IOCAP           equ	7997	;# 
  1139     1F3E                     IOCAN           equ	7998	;# 
  1140     1F3F                     IOCAF           equ	7999	;# 
  1141     1FE4                     STATUS_SHAD     equ	8164	;# 
  1142     1FE5                     WREG_SHAD       equ	8165	;# 
  1143     1FE6                     BSR_SHAD        equ	8166	;# 
  1144     1FE7                     PCLATH_SHAD     equ	8167	;# 
  1145     1FE8                     FSR0_SHAD       equ	8168	;# 
  1146     1FE8                     FSR0L_SHAD      equ	8168	;# 
  1147     1FE9                     FSR0H_SHAD      equ	8169	;# 
  1148     1FEA                     FSR1_SHAD       equ	8170	;# 
  1149     1FEA                     FSR1L_SHAD      equ	8170	;# 
  1150     1FEB                     FSR1H_SHAD      equ	8171	;# 
  1151     1FED                     STKPTR          equ	8173	;# 
  1152     1FEE                     TOSL            equ	8174	;# 
  1153     1FEF                     TOSH            equ	8175	;# 
  1154     0000                     INDF0           equ	0	;# 
  1155     0001                     INDF1           equ	1	;# 
  1156     0002                     PCL             equ	2	;# 
  1157     0003                     STATUS          equ	3	;# 
  1158     0004                     FSR0L           equ	4	;# 
  1159     0005                     FSR0H           equ	5	;# 
  1160     0006                     FSR1L           equ	6	;# 
  1161     0007                     FSR1H           equ	7	;# 
  1162     0008                     BSR             equ	8	;# 
  1163     0009                     WREG            equ	9	;# 
  1164     000A                     PCLATH          equ	10	;# 
  1165     000B                     INTCON          equ	11	;# 
  1166     000C                     PORTA           equ	12	;# 
  1167     0012                     TRISA           equ	18	;# 
  1168     0018                     LATA            equ	24	;# 
  1169     009B                     ADRES           equ	155	;# 
  1170     009B                     ADRESL          equ	155	;# 
  1171     009C                     ADRESH          equ	156	;# 
  1172     009D                     ADCON0          equ	157	;# 
  1173     009E                     ADCON1          equ	158	;# 
  1174     009F                     ADACT           equ	159	;# 
  1175     0119                     RC1REG          equ	281	;# 
  1176     0119                     RCREG           equ	281	;# 
  1177     0119                     RCREG1          equ	281	;# 
  1178     011A                     TX1REG          equ	282	;# 
  1179     011A                     TXREG1          equ	282	;# 
  1180     011A                     TXREG           equ	282	;# 
  1181     011B                     SP1BRG          equ	283	;# 
  1182     011B                     SPBRG           equ	283	;# 
  1183     011B                     SP1BRGL         equ	283	;# 
  1184     011B                     SPBRG1          equ	283	;# 
  1185     011B                     SPBRGL          equ	283	;# 
  1186     011C                     SP1BRGH         equ	284	;# 
  1187     011C                     SPBRGH          equ	284	;# 
  1188     011C                     SPBRGH1         equ	284	;# 
  1189     011D                     RC1STA          equ	285	;# 
  1190     011D                     RCSTA1          equ	285	;# 
  1191     011D                     RCSTA           equ	285	;# 
  1192     011E                     TX1STA          equ	286	;# 
  1193     011E                     TXSTA1          equ	286	;# 
  1194     011E                     TXSTA           equ	286	;# 
  1195     011F                     BAUD1CON        equ	287	;# 
  1196     011F                     BAUDCON1        equ	287	;# 
  1197     011F                     BAUDCTL1        equ	287	;# 
  1198     011F                     BAUDCON         equ	287	;# 
  1199     011F                     BAUDCTL         equ	287	;# 
  1200     018C                     SSP1BUF         equ	396	;# 
  1201     018D                     SSP1ADD         equ	397	;# 
  1202     018E                     SSP1MSK         equ	398	;# 
  1203     018F                     SSP1STAT        equ	399	;# 
  1204     0190                     SSP1CON1        equ	400	;# 
  1205     0191                     SSP1CON2        equ	401	;# 
  1206     0192                     SSP1CON3        equ	402	;# 
  1207     020C                     TMR1            equ	524	;# 
  1208     020C                     TMR1L           equ	524	;# 
  1209     020D                     TMR1H           equ	525	;# 
  1210     020E                     T1CON           equ	526	;# 
  1211     020F                     T1GCON          equ	527	;# 
  1212     020F                     PR1             equ	527	;# 
  1213     0210                     T1GATE          equ	528	;# 
  1214     0210                     TMR1GATE        equ	528	;# 
  1215     0211                     T1CLK           equ	529	;# 
  1216     0211                     TMR1CLK         equ	529	;# 
  1217     028C                     T2TMR           equ	652	;# 
  1218     028C                     TMR2            equ	652	;# 
  1219     028D                     T2PR            equ	653	;# 
  1220     028D                     PR2             equ	653	;# 
  1221     028E                     T2CON           equ	654	;# 
  1222     028F                     T2HLT           equ	655	;# 
  1223     0290                     T2CLKCON        equ	656	;# 
  1224     0291                     T2RST           equ	657	;# 
  1225     030C                     CCPR1           equ	780	;# 
  1226     030C                     CCPR1L          equ	780	;# 
  1227     030D                     CCPR1H          equ	781	;# 
  1228     030E                     CCP1CON         equ	782	;# 
  1229     030F                     CCP1CAP         equ	783	;# 
  1230     0310                     CCPR2           equ	784	;# 
  1231     0310                     CCPR2L          equ	784	;# 
  1232     0311                     CCPR2H          equ	785	;# 
  1233     0312                     CCP2CON         equ	786	;# 
  1234     0313                     CCP2CAP         equ	787	;# 
  1235     0314                     PWM3DC          equ	788	;# 
  1236     0314                     PWM3DCL         equ	788	;# 
  1237     0315                     PWM3DCH         equ	789	;# 
  1238     0316                     PWM3CON         equ	790	;# 
  1239     0318                     PWM4DC          equ	792	;# 
  1240     0318                     PWM4DCL         equ	792	;# 
  1241     0319                     PWM4DCH         equ	793	;# 
  1242     031A                     PWM4CON         equ	794	;# 
  1243     031C                     PWM5DC          equ	796	;# 
  1244     031C                     PWM5DCL         equ	796	;# 
  1245     031D                     PWM5DCH         equ	797	;# 
  1246     031E                     PWM5CON         equ	798	;# 
  1247     038C                     PWM6DC          equ	908	;# 
  1248     038C                     PWM6DCL         equ	908	;# 
  1249     038D                     PWM6DCH         equ	909	;# 
  1250     038E                     PWM6CON         equ	910	;# 
  1251     058C                     NCO1ACC         equ	1420	;# 
  1252     058C                     NCO1ACCL        equ	1420	;# 
  1253     058D                     NCO1ACCH        equ	1421	;# 
  1254     058E                     NCO1ACCU        equ	1422	;# 
  1255     058F                     NCO1INC         equ	1423	;# 
  1256     058F                     NCO1INCL        equ	1423	;# 
  1257     0590                     NCO1INCH        equ	1424	;# 
  1258     0591                     NCO1INCU        equ	1425	;# 
  1259     0592                     NCO1CON         equ	1426	;# 
  1260     0593                     NCO1CLK         equ	1427	;# 
  1261     059C                     TMR0L           equ	1436	;# 
  1262     059C                     TMR0            equ	1436	;# 
  1263     059D                     TMR0H           equ	1437	;# 
  1264     059D                     PR0             equ	1437	;# 
  1265     059E                     T0CON0          equ	1438	;# 
  1266     059F                     T0CON1          equ	1439	;# 
  1267     060C                     CWG1CLKCON      equ	1548	;# 
  1268     060D                     CWG1DAT         equ	1549	;# 
  1269     060E                     CWG1DBR         equ	1550	;# 
  1270     060F                     CWG1DBF         equ	1551	;# 
  1271     0610                     CWG1CON0        equ	1552	;# 
  1272     0611                     CWG1CON1        equ	1553	;# 
  1273     0612                     CWG1AS0         equ	1554	;# 
  1274     0613                     CWG1AS1         equ	1555	;# 
  1275     0614                     CWG1STR         equ	1556	;# 
  1276     070C                     PIR0            equ	1804	;# 
  1277     070D                     PIR1            equ	1805	;# 
  1278     070E                     PIR2            equ	1806	;# 
  1279     070F                     PIR3            equ	1807	;# 
  1280     0710                     PIR4            equ	1808	;# 
  1281     0711                     PIR5            equ	1809	;# 
  1282     0712                     PIR6            equ	1810	;# 
  1283     0713                     PIR7            equ	1811	;# 
  1284     0716                     PIE0            equ	1814	;# 
  1285     0717                     PIE1            equ	1815	;# 
  1286     0718                     PIE2            equ	1816	;# 
  1287     0719                     PIE3            equ	1817	;# 
  1288     071A                     PIE4            equ	1818	;# 
  1289     071B                     PIE5            equ	1819	;# 
  1290     071C                     PIE6            equ	1820	;# 
  1291     071D                     PIE7            equ	1821	;# 
  1292     0796                     PMD0            equ	1942	;# 
  1293     0797                     PMD1            equ	1943	;# 
  1294     0798                     PMD2            equ	1944	;# 
  1295     0799                     PMD3            equ	1945	;# 
  1296     079A                     PMD4            equ	1946	;# 
  1297     079B                     PMD5            equ	1947	;# 
  1298     080C                     WDTCON0         equ	2060	;# 
  1299     080D                     WDTCON1         equ	2061	;# 
  1300     080E                     WDTPSL          equ	2062	;# 
  1301     080F                     WDTPSH          equ	2063	;# 
  1302     0810                     WDTTMR          equ	2064	;# 
  1303     0811                     BORCON          equ	2065	;# 
  1304     0812                     VREGCON         equ	2066	;# 
  1305     0813                     PCON0           equ	2067	;# 
  1306     0814                     PCON1           equ	2068	;# 
  1307     081A                     NVMADR          equ	2074	;# 
  1308     081A                     NVMADRL         equ	2074	;# 
  1309     081B                     NVMADRH         equ	2075	;# 
  1310     081C                     NVMDAT          equ	2076	;# 
  1311     081C                     NVMDATL         equ	2076	;# 
  1312     081D                     NVMDATH         equ	2077	;# 
  1313     081E                     NVMCON1         equ	2078	;# 
  1314     081F                     NVMCON2         equ	2079	;# 
  1315     088C                     CPUDOZE         equ	2188	;# 
  1316     088D                     OSCCON1         equ	2189	;# 
  1317     088E                     OSCCON2         equ	2190	;# 
  1318     088F                     OSCCON3         equ	2191	;# 
  1319     0890                     OSCSTAT         equ	2192	;# 
  1320     0891                     OSCEN           equ	2193	;# 
  1321     0892                     OSCTUNE         equ	2194	;# 
  1322     0893                     OSCFRQ          equ	2195	;# 
  1323     0895                     CLKRCON         equ	2197	;# 
  1324     0896                     CLKRCLK         equ	2198	;# 
  1325     090C                     FVRCON          equ	2316	;# 
  1326     090E                     DAC1CON0        equ	2318	;# 
  1327     090F                     DAC1CON1        equ	2319	;# 
  1328     091F                     ZCDCON          equ	2335	;# 
  1329     098F                     CMOUT           equ	2447	;# 
  1330     098F                     CMSTAT          equ	2447	;# 
  1331     0990                     CM1CON0         equ	2448	;# 
  1332     0991                     CM1CON1         equ	2449	;# 
  1333     0992                     CM1NCH          equ	2450	;# 
  1334     0993                     CM1PCH          equ	2451	;# 
  1335     1E0F                     CLCDATA         equ	7695	;# 
  1336     1E10                     CLC1CON         equ	7696	;# 
  1337     1E11                     CLC1POL         equ	7697	;# 
  1338     1E12                     CLC1SEL0        equ	7698	;# 
  1339     1E13                     CLC1SEL1        equ	7699	;# 
  1340     1E14                     CLC1SEL2        equ	7700	;# 
  1341     1E15                     CLC1SEL3        equ	7701	;# 
  1342     1E16                     CLC1GLS0        equ	7702	;# 
  1343     1E17                     CLC1GLS1        equ	7703	;# 
  1344     1E18                     CLC1GLS2        equ	7704	;# 
  1345     1E19                     CLC1GLS3        equ	7705	;# 
  1346     1E1A                     CLC2CON         equ	7706	;# 
  1347     1E1B                     CLC2POL         equ	7707	;# 
  1348     1E1C                     CLC2SEL0        equ	7708	;# 
  1349     1E1D                     CLC2SEL1        equ	7709	;# 
  1350     1E1E                     CLC2SEL2        equ	7710	;# 
  1351     1E1F                     CLC2SEL3        equ	7711	;# 
  1352     1E20                     CLC2GLS0        equ	7712	;# 
  1353     1E21                     CLC2GLS1        equ	7713	;# 
  1354     1E22                     CLC2GLS2        equ	7714	;# 
  1355     1E23                     CLC2GLS3        equ	7715	;# 
  1356     1E24                     CLC3CON         equ	7716	;# 
  1357     1E25                     CLC3POL         equ	7717	;# 
  1358     1E26                     CLC3SEL0        equ	7718	;# 
  1359     1E27                     CLC3SEL1        equ	7719	;# 
  1360     1E28                     CLC3SEL2        equ	7720	;# 
  1361     1E29                     CLC3SEL3        equ	7721	;# 
  1362     1E2A                     CLC3GLS0        equ	7722	;# 
  1363     1E2B                     CLC3GLS1        equ	7723	;# 
  1364     1E2C                     CLC3GLS2        equ	7724	;# 
  1365     1E2D                     CLC3GLS3        equ	7725	;# 
  1366     1E2E                     CLC4CON         equ	7726	;# 
  1367     1E2F                     CLC4POL         equ	7727	;# 
  1368     1E30                     CLC4SEL0        equ	7728	;# 
  1369     1E31                     CLC4SEL1        equ	7729	;# 
  1370     1E32                     CLC4SEL2        equ	7730	;# 
  1371     1E33                     CLC4SEL3        equ	7731	;# 
  1372     1E34                     CLC4GLS0        equ	7732	;# 
  1373     1E35                     CLC4GLS1        equ	7733	;# 
  1374     1E36                     CLC4GLS2        equ	7734	;# 
  1375     1E37                     CLC4GLS3        equ	7735	;# 
  1376     1E8F                     PPSLOCK         equ	7823	;# 
  1377     1E90                     INTPPS          equ	7824	;# 
  1378     1E91                     T0CKIPPS        equ	7825	;# 
  1379     1E92                     T1CKIPPS        equ	7826	;# 
  1380     1E93                     T1GPPS          equ	7827	;# 
  1381     1E9C                     T2INPPS         equ	7836	;# 
  1382     1EA1                     CCP1PPS         equ	7841	;# 
  1383     1EA2                     CCP2PPS         equ	7842	;# 
  1384     1EB1                     CWG1PPS         equ	7857	;# 
  1385     1EBB                     CLCIN0PPS       equ	7867	;# 
  1386     1EBC                     CLCIN1PPS       equ	7868	;# 
  1387     1EBD                     CLCIN2PPS       equ	7869	;# 
  1388     1EBE                     CLCIN3PPS       equ	7870	;# 
  1389     1EC3                     ADACTPPS        equ	7875	;# 
  1390     1EC5                     SSP1CLKPPS      equ	7877	;# 
  1391     1EC6                     SSP1DATPPS      equ	7878	;# 
  1392     1EC7                     SSP1SSPPS       equ	7879	;# 
  1393     1ECB                     RX1DTPPS        equ	7883	;# 
  1394     1ECC                     TX1CKPPS        equ	7884	;# 
  1395     1F10                     RA0PPS          equ	7952	;# 
  1396     1F11                     RA1PPS          equ	7953	;# 
  1397     1F12                     RA2PPS          equ	7954	;# 
  1398     1F13                     RA3PPS          equ	7955	;# 
  1399     1F14                     RA4PPS          equ	7956	;# 
  1400     1F15                     RA5PPS          equ	7957	;# 
  1401     1F38                     ANSELA          equ	7992	;# 
  1402     1F39                     WPUA            equ	7993	;# 
  1403     1F3A                     ODCONA          equ	7994	;# 
  1404     1F3B                     SLRCONA         equ	7995	;# 
  1405     1F3C                     INLVLA          equ	7996	;# 
  1406     1F3D                     IOCAP           equ	7997	;# 
  1407     1F3E                     IOCAN           equ	7998	;# 
  1408     1F3F                     IOCAF           equ	7999	;# 
  1409     1FE4                     STATUS_SHAD     equ	8164	;# 
  1410     1FE5                     WREG_SHAD       equ	8165	;# 
  1411     1FE6                     BSR_SHAD        equ	8166	;# 
  1412     1FE7                     PCLATH_SHAD     equ	8167	;# 
  1413     1FE8                     FSR0_SHAD       equ	8168	;# 
  1414     1FE8                     FSR0L_SHAD      equ	8168	;# 
  1415     1FE9                     FSR0H_SHAD      equ	8169	;# 
  1416     1FEA                     FSR1_SHAD       equ	8170	;# 
  1417     1FEA                     FSR1L_SHAD      equ	8170	;# 
  1418     1FEB                     FSR1H_SHAD      equ	8171	;# 
  1419     1FED                     STKPTR          equ	8173	;# 
  1420     1FEE                     TOSL            equ	8174	;# 
  1421     1FEF                     TOSH            equ	8175	;# 
  1422     0000                     INDF0           equ	0	;# 
  1423     0001                     INDF1           equ	1	;# 
  1424     0002                     PCL             equ	2	;# 
  1425     0003                     STATUS          equ	3	;# 
  1426     0004                     FSR0L           equ	4	;# 
  1427     0005                     FSR0H           equ	5	;# 
  1428     0006                     FSR1L           equ	6	;# 
  1429     0007                     FSR1H           equ	7	;# 
  1430     0008                     BSR             equ	8	;# 
  1431     0009                     WREG            equ	9	;# 
  1432     000A                     PCLATH          equ	10	;# 
  1433     000B                     INTCON          equ	11	;# 
  1434     000C                     PORTA           equ	12	;# 
  1435     0012                     TRISA           equ	18	;# 
  1436     0018                     LATA            equ	24	;# 
  1437     009B                     ADRES           equ	155	;# 
  1438     009B                     ADRESL          equ	155	;# 
  1439     009C                     ADRESH          equ	156	;# 
  1440     009D                     ADCON0          equ	157	;# 
  1441     009E                     ADCON1          equ	158	;# 
  1442     009F                     ADACT           equ	159	;# 
  1443     0119                     RC1REG          equ	281	;# 
  1444     0119                     RCREG           equ	281	;# 
  1445     0119                     RCREG1          equ	281	;# 
  1446     011A                     TX1REG          equ	282	;# 
  1447     011A                     TXREG1          equ	282	;# 
  1448     011A                     TXREG           equ	282	;# 
  1449     011B                     SP1BRG          equ	283	;# 
  1450     011B                     SPBRG           equ	283	;# 
  1451     011B                     SP1BRGL         equ	283	;# 
  1452     011B                     SPBRG1          equ	283	;# 
  1453     011B                     SPBRGL          equ	283	;# 
  1454     011C                     SP1BRGH         equ	284	;# 
  1455     011C                     SPBRGH          equ	284	;# 
  1456     011C                     SPBRGH1         equ	284	;# 
  1457     011D                     RC1STA          equ	285	;# 
  1458     011D                     RCSTA1          equ	285	;# 
  1459     011D                     RCSTA           equ	285	;# 
  1460     011E                     TX1STA          equ	286	;# 
  1461     011E                     TXSTA1          equ	286	;# 
  1462     011E                     TXSTA           equ	286	;# 
  1463     011F                     BAUD1CON        equ	287	;# 
  1464     011F                     BAUDCON1        equ	287	;# 
  1465     011F                     BAUDCTL1        equ	287	;# 
  1466     011F                     BAUDCON         equ	287	;# 
  1467     011F                     BAUDCTL         equ	287	;# 
  1468     018C                     SSP1BUF         equ	396	;# 
  1469     018D                     SSP1ADD         equ	397	;# 
  1470     018E                     SSP1MSK         equ	398	;# 
  1471     018F                     SSP1STAT        equ	399	;# 
  1472     0190                     SSP1CON1        equ	400	;# 
  1473     0191                     SSP1CON2        equ	401	;# 
  1474     0192                     SSP1CON3        equ	402	;# 
  1475     020C                     TMR1            equ	524	;# 
  1476     020C                     TMR1L           equ	524	;# 
  1477     020D                     TMR1H           equ	525	;# 
  1478     020E                     T1CON           equ	526	;# 
  1479     020F                     T1GCON          equ	527	;# 
  1480     020F                     PR1             equ	527	;# 
  1481     0210                     T1GATE          equ	528	;# 
  1482     0210                     TMR1GATE        equ	528	;# 
  1483     0211                     T1CLK           equ	529	;# 
  1484     0211                     TMR1CLK         equ	529	;# 
  1485     028C                     T2TMR           equ	652	;# 
  1486     028C                     TMR2            equ	652	;# 
  1487     028D                     T2PR            equ	653	;# 
  1488     028D                     PR2             equ	653	;# 
  1489     028E                     T2CON           equ	654	;# 
  1490     028F                     T2HLT           equ	655	;# 
  1491     0290                     T2CLKCON        equ	656	;# 
  1492     0291                     T2RST           equ	657	;# 
  1493     030C                     CCPR1           equ	780	;# 
  1494     030C                     CCPR1L          equ	780	;# 
  1495     030D                     CCPR1H          equ	781	;# 
  1496     030E                     CCP1CON         equ	782	;# 
  1497     030F                     CCP1CAP         equ	783	;# 
  1498     0310                     CCPR2           equ	784	;# 
  1499     0310                     CCPR2L          equ	784	;# 
  1500     0311                     CCPR2H          equ	785	;# 
  1501     0312                     CCP2CON         equ	786	;# 
  1502     0313                     CCP2CAP         equ	787	;# 
  1503     0314                     PWM3DC          equ	788	;# 
  1504     0314                     PWM3DCL         equ	788	;# 
  1505     0315                     PWM3DCH         equ	789	;# 
  1506     0316                     PWM3CON         equ	790	;# 
  1507     0318                     PWM4DC          equ	792	;# 
  1508     0318                     PWM4DCL         equ	792	;# 
  1509     0319                     PWM4DCH         equ	793	;# 
  1510     031A                     PWM4CON         equ	794	;# 
  1511     031C                     PWM5DC          equ	796	;# 
  1512     031C                     PWM5DCL         equ	796	;# 
  1513     031D                     PWM5DCH         equ	797	;# 
  1514     031E                     PWM5CON         equ	798	;# 
  1515     038C                     PWM6DC          equ	908	;# 
  1516     038C                     PWM6DCL         equ	908	;# 
  1517     038D                     PWM6DCH         equ	909	;# 
  1518     038E                     PWM6CON         equ	910	;# 
  1519     058C                     NCO1ACC         equ	1420	;# 
  1520     058C                     NCO1ACCL        equ	1420	;# 
  1521     058D                     NCO1ACCH        equ	1421	;# 
  1522     058E                     NCO1ACCU        equ	1422	;# 
  1523     058F                     NCO1INC         equ	1423	;# 
  1524     058F                     NCO1INCL        equ	1423	;# 
  1525     0590                     NCO1INCH        equ	1424	;# 
  1526     0591                     NCO1INCU        equ	1425	;# 
  1527     0592                     NCO1CON         equ	1426	;# 
  1528     0593                     NCO1CLK         equ	1427	;# 
  1529     059C                     TMR0L           equ	1436	;# 
  1530     059C                     TMR0            equ	1436	;# 
  1531     059D                     TMR0H           equ	1437	;# 
  1532     059D                     PR0             equ	1437	;# 
  1533     059E                     T0CON0          equ	1438	;# 
  1534     059F                     T0CON1          equ	1439	;# 
  1535     060C                     CWG1CLKCON      equ	1548	;# 
  1536     060D                     CWG1DAT         equ	1549	;# 
  1537     060E                     CWG1DBR         equ	1550	;# 
  1538     060F                     CWG1DBF         equ	1551	;# 
  1539     0610                     CWG1CON0        equ	1552	;# 
  1540     0611                     CWG1CON1        equ	1553	;# 
  1541     0612                     CWG1AS0         equ	1554	;# 
  1542     0613                     CWG1AS1         equ	1555	;# 
  1543     0614                     CWG1STR         equ	1556	;# 
  1544     070C                     PIR0            equ	1804	;# 
  1545     070D                     PIR1            equ	1805	;# 
  1546     070E                     PIR2            equ	1806	;# 
  1547     070F                     PIR3            equ	1807	;# 
  1548     0710                     PIR4            equ	1808	;# 
  1549     0711                     PIR5            equ	1809	;# 
  1550     0712                     PIR6            equ	1810	;# 
  1551     0713                     PIR7            equ	1811	;# 
  1552     0716                     PIE0            equ	1814	;# 
  1553     0717                     PIE1            equ	1815	;# 
  1554     0718                     PIE2            equ	1816	;# 
  1555     0719                     PIE3            equ	1817	;# 
  1556     071A                     PIE4            equ	1818	;# 
  1557     071B                     PIE5            equ	1819	;# 
  1558     071C                     PIE6            equ	1820	;# 
  1559     071D                     PIE7            equ	1821	;# 
  1560     0796                     PMD0            equ	1942	;# 
  1561     0797                     PMD1            equ	1943	;# 
  1562     0798                     PMD2            equ	1944	;# 
  1563     0799                     PMD3            equ	1945	;# 
  1564     079A                     PMD4            equ	1946	;# 
  1565     079B                     PMD5            equ	1947	;# 
  1566     080C                     WDTCON0         equ	2060	;# 
  1567     080D                     WDTCON1         equ	2061	;# 
  1568     080E                     WDTPSL          equ	2062	;# 
  1569     080F                     WDTPSH          equ	2063	;# 
  1570     0810                     WDTTMR          equ	2064	;# 
  1571     0811                     BORCON          equ	2065	;# 
  1572     0812                     VREGCON         equ	2066	;# 
  1573     0813                     PCON0           equ	2067	;# 
  1574     0814                     PCON1           equ	2068	;# 
  1575     081A                     NVMADR          equ	2074	;# 
  1576     081A                     NVMADRL         equ	2074	;# 
  1577     081B                     NVMADRH         equ	2075	;# 
  1578     081C                     NVMDAT          equ	2076	;# 
  1579     081C                     NVMDATL         equ	2076	;# 
  1580     081D                     NVMDATH         equ	2077	;# 
  1581     081E                     NVMCON1         equ	2078	;# 
  1582     081F                     NVMCON2         equ	2079	;# 
  1583     088C                     CPUDOZE         equ	2188	;# 
  1584     088D                     OSCCON1         equ	2189	;# 
  1585     088E                     OSCCON2         equ	2190	;# 
  1586     088F                     OSCCON3         equ	2191	;# 
  1587     0890                     OSCSTAT         equ	2192	;# 
  1588     0891                     OSCEN           equ	2193	;# 
  1589     0892                     OSCTUNE         equ	2194	;# 
  1590     0893                     OSCFRQ          equ	2195	;# 
  1591     0895                     CLKRCON         equ	2197	;# 
  1592     0896                     CLKRCLK         equ	2198	;# 
  1593     090C                     FVRCON          equ	2316	;# 
  1594     090E                     DAC1CON0        equ	2318	;# 
  1595     090F                     DAC1CON1        equ	2319	;# 
  1596     091F                     ZCDCON          equ	2335	;# 
  1597     098F                     CMOUT           equ	2447	;# 
  1598     098F                     CMSTAT          equ	2447	;# 
  1599     0990                     CM1CON0         equ	2448	;# 
  1600     0991                     CM1CON1         equ	2449	;# 
  1601     0992                     CM1NCH          equ	2450	;# 
  1602     0993                     CM1PCH          equ	2451	;# 
  1603     1E0F                     CLCDATA         equ	7695	;# 
  1604     1E10                     CLC1CON         equ	7696	;# 
  1605     1E11                     CLC1POL         equ	7697	;# 
  1606     1E12                     CLC1SEL0        equ	7698	;# 
  1607     1E13                     CLC1SEL1        equ	7699	;# 
  1608     1E14                     CLC1SEL2        equ	7700	;# 
  1609     1E15                     CLC1SEL3        equ	7701	;# 
  1610     1E16                     CLC1GLS0        equ	7702	;# 
  1611     1E17                     CLC1GLS1        equ	7703	;# 
  1612     1E18                     CLC1GLS2        equ	7704	;# 
  1613     1E19                     CLC1GLS3        equ	7705	;# 
  1614     1E1A                     CLC2CON         equ	7706	;# 
  1615     1E1B                     CLC2POL         equ	7707	;# 
  1616     1E1C                     CLC2SEL0        equ	7708	;# 
  1617     1E1D                     CLC2SEL1        equ	7709	;# 
  1618     1E1E                     CLC2SEL2        equ	7710	;# 
  1619     1E1F                     CLC2SEL3        equ	7711	;# 
  1620     1E20                     CLC2GLS0        equ	7712	;# 
  1621     1E21                     CLC2GLS1        equ	7713	;# 
  1622     1E22                     CLC2GLS2        equ	7714	;# 
  1623     1E23                     CLC2GLS3        equ	7715	;# 
  1624     1E24                     CLC3CON         equ	7716	;# 
  1625     1E25                     CLC3POL         equ	7717	;# 
  1626     1E26                     CLC3SEL0        equ	7718	;# 
  1627     1E27                     CLC3SEL1        equ	7719	;# 
  1628     1E28                     CLC3SEL2        equ	7720	;# 
  1629     1E29                     CLC3SEL3        equ	7721	;# 
  1630     1E2A                     CLC3GLS0        equ	7722	;# 
  1631     1E2B                     CLC3GLS1        equ	7723	;# 
  1632     1E2C                     CLC3GLS2        equ	7724	;# 
  1633     1E2D                     CLC3GLS3        equ	7725	;# 
  1634     1E2E                     CLC4CON         equ	7726	;# 
  1635     1E2F                     CLC4POL         equ	7727	;# 
  1636     1E30                     CLC4SEL0        equ	7728	;# 
  1637     1E31                     CLC4SEL1        equ	7729	;# 
  1638     1E32                     CLC4SEL2        equ	7730	;# 
  1639     1E33                     CLC4SEL3        equ	7731	;# 
  1640     1E34                     CLC4GLS0        equ	7732	;# 
  1641     1E35                     CLC4GLS1        equ	7733	;# 
  1642     1E36                     CLC4GLS2        equ	7734	;# 
  1643     1E37                     CLC4GLS3        equ	7735	;# 
  1644     1E8F                     PPSLOCK         equ	7823	;# 
  1645     1E90                     INTPPS          equ	7824	;# 
  1646     1E91                     T0CKIPPS        equ	7825	;# 
  1647     1E92                     T1CKIPPS        equ	7826	;# 
  1648     1E93                     T1GPPS          equ	7827	;# 
  1649     1E9C                     T2INPPS         equ	7836	;# 
  1650     1EA1                     CCP1PPS         equ	7841	;# 
  1651     1EA2                     CCP2PPS         equ	7842	;# 
  1652     1EB1                     CWG1PPS         equ	7857	;# 
  1653     1EBB                     CLCIN0PPS       equ	7867	;# 
  1654     1EBC                     CLCIN1PPS       equ	7868	;# 
  1655     1EBD                     CLCIN2PPS       equ	7869	;# 
  1656     1EBE                     CLCIN3PPS       equ	7870	;# 
  1657     1EC3                     ADACTPPS        equ	7875	;# 
  1658     1EC5                     SSP1CLKPPS      equ	7877	;# 
  1659     1EC6                     SSP1DATPPS      equ	7878	;# 
  1660     1EC7                     SSP1SSPPS       equ	7879	;# 
  1661     1ECB                     RX1DTPPS        equ	7883	;# 
  1662     1ECC                     TX1CKPPS        equ	7884	;# 
  1663     1F10                     RA0PPS          equ	7952	;# 
  1664     1F11                     RA1PPS          equ	7953	;# 
  1665     1F12                     RA2PPS          equ	7954	;# 
  1666     1F13                     RA3PPS          equ	7955	;# 
  1667     1F14                     RA4PPS          equ	7956	;# 
  1668     1F15                     RA5PPS          equ	7957	;# 
  1669     1F38                     ANSELA          equ	7992	;# 
  1670     1F39                     WPUA            equ	7993	;# 
  1671     1F3A                     ODCONA          equ	7994	;# 
  1672     1F3B                     SLRCONA         equ	7995	;# 
  1673     1F3C                     INLVLA          equ	7996	;# 
  1674     1F3D                     IOCAP           equ	7997	;# 
  1675     1F3E                     IOCAN           equ	7998	;# 
  1676     1F3F                     IOCAF           equ	7999	;# 
  1677     1FE4                     STATUS_SHAD     equ	8164	;# 
  1678     1FE5                     WREG_SHAD       equ	8165	;# 
  1679     1FE6                     BSR_SHAD        equ	8166	;# 
  1680     1FE7                     PCLATH_SHAD     equ	8167	;# 
  1681     1FE8                     FSR0_SHAD       equ	8168	;# 
  1682     1FE8                     FSR0L_SHAD      equ	8168	;# 
  1683     1FE9                     FSR0H_SHAD      equ	8169	;# 
  1684     1FEA                     FSR1_SHAD       equ	8170	;# 
  1685     1FEA                     FSR1L_SHAD      equ	8170	;# 
  1686     1FEB                     FSR1H_SHAD      equ	8171	;# 
  1687     1FED                     STKPTR          equ	8173	;# 
  1688     1FEE                     TOSL            equ	8174	;# 
  1689     1FEF                     TOSH            equ	8175	;# 
  1690                           
  1691 ;; Function _INT_DefaultInterruptHandler is unused but had its address taken
  1692     0000                     _INT_DefaultInterruptHandler equ	0
  1693                           
  1694 ;; Function _TMR0_Deinitialize is unused but had its address taken
  1695     0000                     _TMR0_Deinitialize equ	0
  1696                           
  1697 ;; Function _TMR0_CounterGet is unused but had its address taken
  1698     0000                     _TMR0_CounterGet equ	0
  1699                           
  1700 ;; Function _TMR0_CounterSet is unused but had its address taken
  1701     0000                     _TMR0_CounterSet equ	0
  1702                           
  1703 ;; Function _TMR0_PeriodSet is unused but had its address taken
  1704     0000                     _TMR0_PeriodSet equ	0
  1705                           
  1706 ;; Function _TMR0_PeriodGet is unused but had its address taken
  1707     0000                     _TMR0_PeriodGet equ	0
  1708                           
  1709 ;; Function _TMR0_MaxCountGet is unused but had its address taken
  1710     0000                     _TMR0_MaxCountGet equ	0
  1711                           
  1712                           	psect	idataCOMMON
  1713     01B8                     __pidataCOMMON:
  1714                           
  1715                           ;initializer for _MinOnCycles_u08
  1716     01B8  3406               	retlw	6
  1717                           
  1718                           	psect	stringtext1
  1719     0116                     __pstringtext1:
  1720     0116                     _MainTimer:
  1721     0116  342C               	retlw	low _TMR0_Initialize
  1722     0117  3401               	retlw	high _TMR0_Initialize
  1723     0118  3400               	retlw	0
  1724     0119  3400               	retlw	0
  1725     011A  34B2               	retlw	low _TMR0_Start
  1726     011B  3401               	retlw	high _TMR0_Start
  1727     011C  34AF               	retlw	low _TMR0_Stop
  1728     011D  3401               	retlw	high _TMR0_Stop
  1729     011E  3400               	retlw	0
  1730     011F  3400               	retlw	0
  1731     0120  3400               	retlw	0
  1732     0121  3400               	retlw	0
  1733     0122  3400               	retlw	0
  1734     0123  3400               	retlw	0
  1735     0124  3400               	retlw	0
  1736     0125  3400               	retlw	0
  1737     0126  3400               	retlw	0
  1738     0127  3400               	retlw	0
  1739     0128  349D               	retlw	low _TMR0_OverflowCallbackRegister
  1740     0129  3401               	retlw	high _TMR0_OverflowCallbackRegister
  1741     012A  3400               	retlw	0
  1742     012B  3400               	retlw	0
  1743     012C                     __end_of_MainTimer:
  1744                           
  1745                           	psect	stringtext2
  1746     01A9                     __pstringtext2:
  1747     01A9                     _RedTimes:
  1748     01A9  3400               	retlw	0
  1749     01AA  3400               	retlw	0
  1750     01AB  342C               	retlw	44
  1751     01AC                     __end_of_RedTimes:
  1752                           
  1753                           	psect	stringtext3
  1754     01AC                     __pstringtext3:
  1755     01AC                     _GreenTimes:
  1756     01AC  3400               	retlw	0
  1757     01AD  3405               	retlw	5
  1758     01AE  342C               	retlw	44
  1759     01AF                     __end_of_GreenTimes:
  1760                           
  1761                           	psect	nvBANK0
  1762     0020                     __pnvBANK0:
  1763     0020                     _TMR0_OverflowCallback:
  1764     0020                     	ds	2
  1765     0022                     _INT_InterruptHandler:
  1766     0022                     	ds	2
  1767     0018                     _LATAbits       set	24
  1768     000C                     _PORTA          set	12
  1769     000C                     _PORTAbits      set	12
  1770     0012                     _TRISA          set	18
  1771     0018                     _LATA           set	24
  1772     000B                     _INTCONbits     set	11
  1773     005F                     _GIE            set	95
  1774     059E                     _T0CON0bits     set	1438
  1775     059E                     _T0CON0         set	1438
  1776     059F                     _T0CON1         set	1439
  1777     059C                     _TMR0L          set	1436
  1778     059D                     _TMR0H          set	1437
  1779     0716                     _PIE0bits       set	1814
  1780     070C                     _PIR0bits       set	1804
  1781     38B4                     _IOCIE          set	14516
  1782     0892                     _OSCTUNE        set	2194
  1783     0893                     _OSCFRQ         set	2195
  1784     0891                     _OSCEN          set	2193
  1785     088F                     _OSCCON3        set	2191
  1786     088D                     _OSCCON1        set	2189
  1787     1F3F                     _IOCAF          set	7999
  1788     1F3E                     _IOCAN          set	7998
  1789     1F3D                     _IOCAP          set	7997
  1790     1F3C                     _INLVLA         set	7996
  1791     1F3B                     _SLRCONA        set	7995
  1792     1F3A                     _ODCONA         set	7994
  1793     1F39                     _WPUA           set	7993
  1794     1F38                     _ANSELA         set	7992
  1795     F9F2                     _IOCAN2         set	63986
  1796                           
  1797                           	psect	cinit
  1798     0019                     start_initialization:	
  1799                           ; #config settings
  1800                           
  1801     0019                     __initialization:
  1802                           
  1803                           ; Initialize objects allocated to COMMON
  1804     0019  3181  21B8  3180   	fcall	__pidataCOMMON	;fetch initializer
  1805     001C  00FD               	movwf	__pdataCOMMON& (0+127)
  1806                           
  1807                           ; Clear objects allocated to COMMON
  1808     001D  01F0               	clrf	__pbssCOMMON& (0+127)
  1809     001E  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  1810     001F  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  1811     0020  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  1812     0021  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  1813     0022  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  1814     0023  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
  1815     0024  01F7               	clrf	(__pbssCOMMON+7)& (0+127)
  1816     0025  01F8               	clrf	(__pbssCOMMON+8)& (0+127)
  1817     0026  01F9               	clrf	(__pbssCOMMON+9)& (0+127)
  1818     0027  01FA               	clrf	(__pbssCOMMON+10)& (0+127)
  1819     0028                     end_of_initialization:	
  1820                           ;End of C runtime variable initialization code
  1821                           
  1822     0028                     __end_of__initialization:
  1823     0028  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1824     0029  0140               	movlb	0
  1825     002A  28F6               	ljmp	_main	;jump to C main() function
  1826                           
  1827                           	psect	bssCOMMON
  1828     0070                     __pbssCOMMON:
  1829     0070                     _SwTimer2_u16:
  1830     0070                     	ds	2
  1831     0072                     _SwTimer1_u16:
  1832     0072                     	ds	2
  1833     0074                     _tmr0PeriodCount:
  1834     0074                     	ds	2
  1835     0076                     _PowerFSM:
  1836     0076                     	ds	1
  1837     0077                     _BlinkFSM:
  1838     0077                     	ds	1
  1839     0078                     _RedOnTime_u08:
  1840     0078                     	ds	1
  1841     0079                     _GreenOnTime_u08:
  1842     0079                     	ds	1
  1843     007A                     _TimerFlag_u08:
  1844     007A                     	ds	1
  1845                           
  1846                           	psect	dataCOMMON
  1847     007D                     __pdataCOMMON:
  1848     007D                     _MinOnCycles_u08:
  1849     007D                     	ds	1
  1850                           
  1851                           	psect	cstackCOMMON
  1852     007B                     __pcstackCOMMON:
  1853     007B                     ?_INT_SetInterruptHandler:
  1854     007B                     ?_TMR0_ISR:	
  1855                           ; 1 bytes @ 0x0
  1856                           
  1857     007B                     ?_PIN_MANAGER_Initialize:	
  1858                           ; 1 bytes @ 0x0
  1859                           
  1860     007B                     ?_TMR0_Initialize:	
  1861                           ; 1 bytes @ 0x0
  1862                           
  1863     007B                     ?_TMR0_Start:	
  1864                           ; 1 bytes @ 0x0
  1865                           
  1866     007B                     ?_TMR0_Stop:	
  1867                           ; 1 bytes @ 0x0
  1868                           
  1869     007B                     ?_TMR0_OverflowCallbackRegister:	
  1870                           ; 1 bytes @ 0x0
  1871                           
  1872     007B                     ?_TMR0_DefaultOverflowCallback:	
  1873                           ; 1 bytes @ 0x0
  1874                           
  1875     007B                     ?_CLOCK_Initialize:	
  1876                           ; 1 bytes @ 0x0
  1877                           
  1878     007B                     ?_INTERRUPT_Initialize:	
  1879                           ; 1 bytes @ 0x0
  1880                           
  1881     007B                     ?_INTERRUPT_InterruptManager:	
  1882                           ; 1 bytes @ 0x0
  1883                           
  1884     007B                     ?_SYSTEM_Initialize:	
  1885                           ; 1 bytes @ 0x0
  1886                           
  1887     007B                     ?_MyTmr0:	
  1888                           ; 1 bytes @ 0x0
  1889                           
  1890     007B                     ?_PerformSWTimer:	
  1891                           ; 1 bytes @ 0x0
  1892                           
  1893     007B                     ?_HandlePowerOff:	
  1894                           ; 1 bytes @ 0x0
  1895                           
  1896     007B                     ?_PerformBlinkFSM:	
  1897                           ; 1 bytes @ 0x0
  1898                           
  1899     007B                     ?_PerformPowerFSM:	
  1900                           ; 1 bytes @ 0x0
  1901                           
  1902     007B                     ?_main:	
  1903                           ; 1 bytes @ 0x0
  1904                           
  1905     007B                     INT_SetInterruptHandler@InterruptHandler:	
  1906                           ; 2 bytes @ 0x0
  1907                           
  1908     007B                     TMR0_OverflowCallbackRegister@callbackHandler:	
  1909                           ; 2 bytes @ 0x0
  1910                           
  1911     007B                     ??_TMR0_ISR:	
  1912                           ; 2 bytes @ 0x0
  1913                           
  1914     007B                     ??_PIN_MANAGER_Initialize:	
  1915                           ; 1 bytes @ 0x0
  1916                           
  1917     007B                     ??_TMR0_Initialize:	
  1918                           ; 1 bytes @ 0x0
  1919                           
  1920     007B                     ??_TMR0_Start:	
  1921                           ; 1 bytes @ 0x0
  1922                           
  1923     007B                     ??_TMR0_Stop:	
  1924                           ; 1 bytes @ 0x0
  1925                           
  1926     007B                     ??_TMR0_DefaultOverflowCallback:	
  1927                           ; 1 bytes @ 0x0
  1928                           
  1929     007B                     ??_CLOCK_Initialize:	
  1930                           ; 1 bytes @ 0x0
  1931                           
  1932     007B                     ??_INTERRUPT_InterruptManager:	
  1933                           ; 1 bytes @ 0x0
  1934                           
  1935     007B                     ??_MyTmr0:	
  1936                           ; 1 bytes @ 0x0
  1937                           
  1938     007B                     ??_PerformSWTimer:	
  1939                           ; 1 bytes @ 0x0
  1940                           
  1941     007B                     ??_HandlePowerOff:	
  1942                           ; 1 bytes @ 0x0
  1943                           
  1944     007B                     ??_PerformBlinkFSM:	
  1945                           ; 1 bytes @ 0x0
  1946                           
  1947     007B                     ??_PerformPowerFSM:	
  1948                           ; 1 bytes @ 0x0
  1949                           
  1950                           
  1951                           ; 1 bytes @ 0x0
  1952     007B                     	ds	2
  1953     007D                     ??_INT_SetInterruptHandler:
  1954     007D                     ??_TMR0_OverflowCallbackRegister:	
  1955                           ; 1 bytes @ 0x2
  1956                           
  1957     007D                     ??_INTERRUPT_Initialize:	
  1958                           ; 1 bytes @ 0x2
  1959                           
  1960     007D                     ??_SYSTEM_Initialize:	
  1961                           ; 1 bytes @ 0x2
  1962                           
  1963     007D                     ??_main:	
  1964                           ; 1 bytes @ 0x2
  1965                           
  1966                           
  1967                           	psect	maintext
  1968     00F6                     __pmaintext:	
  1969                           ; 1 bytes @ 0x2
  1970 ;;
  1971 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1972 ;;
  1973 ;; *************** function _main *****************
  1974 ;; Defined at:
  1975 ;;		line 169 in file "main.c"
  1976 ;; Parameters:    Size  Location     Type
  1977 ;;		None
  1978 ;; Auto vars:     Size  Location     Type
  1979 ;;		None
  1980 ;; Return value:  Size  Location     Type
  1981 ;;                  2  266[None  ] int 
  1982 ;; Registers used:
  1983 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1984 ;; Tracked objects:
  1985 ;;		On entry : B3F/0
  1986 ;;		On exit  : 0/0
  1987 ;;		Unchanged: 0/0
  1988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1989 ;;      Params:         0       0       0       0
  1990 ;;      Locals:         0       0       0       0
  1991 ;;      Temps:          0       0       0       0
  1992 ;;      Totals:         0       0       0       0
  1993 ;;Total ram usage:        0 bytes
  1994 ;; Hardware stack levels required when called: 6
  1995 ;; This function calls:
  1996 ;;		_PerformBlinkFSM
  1997 ;;		_PerformPowerFSM
  1998 ;;		_PerformSWTimer
  1999 ;;		_SYSTEM_Initialize
  2000 ;;		_TMR0_OverflowCallbackRegister
  2001 ;;		_TMR0_Start
  2002 ;; This function is called by:
  2003 ;;		Startup code after reset
  2004 ;; This function uses a non-reentrant model
  2005 ;;
  2006                           
  2007     00F6                     _main:	
  2008                           ;psect for function _main
  2009                           
  2010     00F6                     l1117:	
  2011                           ;incstack = 0
  2012                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2013                           
  2014                           
  2015                           ;main.c: 171:    SYSTEM_Initialize();
  2016     00F6  3181  217D  3180   	fcall	_SYSTEM_Initialize
  2017                           
  2018                           ;main.c: 172:     TMR0_OverflowCallbackRegister(MyTmr0);
  2019     00F9  30B5               	movlw	low _MyTmr0
  2020     00FA  00FB               	movwf	TMR0_OverflowCallbackRegister@callbackHandler
  2021     00FB  3001               	movlw	high _MyTmr0
  2022     00FC  00FC               	movwf	TMR0_OverflowCallbackRegister@callbackHandler+1
  2023     00FD  3181  219D  3180   	fcall	_TMR0_OverflowCallbackRegister
  2024     0100                     l1119:
  2025                           
  2026                           ;main.c: 173:     (INTCONbits.GIE = 1);
  2027     0100  178B               	bsf	11,7	;volatile
  2028     0101                     l1121:
  2029                           
  2030                           ;main.c: 174:     (INTCONbits.PEIE = 1);
  2031     0101  170B               	bsf	11,6	;volatile
  2032     0102                     l1123:
  2033                           
  2034                           ;main.c: 175:     TMR0_Start();
  2035     0102  3181  21B2  3180   	fcall	_TMR0_Start
  2036     0105                     l1125:
  2037                           
  2038                           ;main.c: 178:     {;main.c: 179:       if (0 != TimerFlag_u08)
  2039     0105  087A               	movf	_TimerFlag_u08,w
  2040     0106  1903               	btfsc	3,2
  2041     0107  2909               	goto	u241
  2042     0108  290A               	goto	u240
  2043     0109                     u241:
  2044     0109  2905               	goto	l1125
  2045     010A                     u240:
  2046     010A                     l1127:
  2047                           
  2048                           ;main.c: 180:       {;main.c: 181:         TimerFlag_u08 = 0;
  2049     010A  01FA               	clrf	_TimerFlag_u08
  2050     010B                     l1129:
  2051                           
  2052                           ;main.c: 182:         PerformSWTimer();
  2053     010B  3181  2142  3180   	fcall	_PerformSWTimer
  2054     010E                     l1131:
  2055                           
  2056                           ;main.c: 183:         PerformPowerFSM();
  2057     010E  3180  2094  3180   	fcall	_PerformPowerFSM
  2058     0111                     l1133:
  2059                           
  2060                           ;main.c: 184:         PerformBlinkFSM();
  2061     0111  3180  202B  3180   	fcall	_PerformBlinkFSM
  2062     0114  2905               	goto	l1125
  2063     0115  2818               	ljmp	start
  2064     0116                     __end_of_main:
  2065                           
  2066                           	psect	text1
  2067     019D                     __ptext1:	
  2068 ;; *************** function _TMR0_OverflowCallbackRegister *****************
  2069 ;; Defined at:
  2070 ;;		line 153 in file "mcc_generated_files/timer/src/tmr0.c"
  2071 ;; Parameters:    Size  Location     Type
  2072 ;;  callbackHand    2    0[COMMON] PTR FTN()void 
  2073 ;;		 -> MyTmr0(1), 
  2074 ;; Auto vars:     Size  Location     Type
  2075 ;;		None
  2076 ;; Return value:  Size  Location     Type
  2077 ;;                  1    wreg      void 
  2078 ;; Registers used:
  2079 ;;		wreg
  2080 ;; Tracked objects:
  2081 ;;		On entry : 0/0
  2082 ;;		On exit  : 0/0
  2083 ;;		Unchanged: 0/0
  2084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2085 ;;      Params:         2       0       0       0
  2086 ;;      Locals:         0       0       0       0
  2087 ;;      Temps:          0       0       0       0
  2088 ;;      Totals:         2       0       0       0
  2089 ;;Total ram usage:        2 bytes
  2090 ;; Hardware stack levels used: 1
  2091 ;; Hardware stack levels required when called: 3
  2092 ;; This function calls:
  2093 ;;		Nothing
  2094 ;; This function is called by:
  2095 ;;		_main
  2096 ;; This function uses a non-reentrant model
  2097 ;;
  2098                           
  2099     019D                     _TMR0_OverflowCallbackRegister:	
  2100                           ;psect for function _TMR0_OverflowCallbackRegister
  2101                           
  2102     019D                     l1099:	
  2103                           ;incstack = 0
  2104                           ; Regs used in _TMR0_OverflowCallbackRegister: [wreg]
  2105                           
  2106                           
  2107                           ;mcc_generated_files/timer/src/tmr0.c: 153: void TMR0_OverflowCallbackRegister(void (* c
      +                          allbackHandler)(void));mcc_generated_files/timer/src/tmr0.c: 154: {;mcc_generated_files/
      +                          timer/src/tmr0.c: 155:     TMR0_OverflowCallback = callbackHandler;
  2108     019D  087C               	movf	TMR0_OverflowCallbackRegister@callbackHandler+1,w
  2109     019E  0140               	movlb	0	; select bank0
  2110     019F  00A1               	movwf	_TMR0_OverflowCallback+1
  2111     01A0  087B               	movf	TMR0_OverflowCallbackRegister@callbackHandler,w
  2112     01A1  00A0               	movwf	_TMR0_OverflowCallback
  2113     01A2                     l167:
  2114     01A2  0008               	return
  2115     01A3                     __end_of_TMR0_OverflowCallbackRegister:
  2116                           
  2117                           	psect	text2
  2118     017D                     __ptext2:	
  2119 ;; *************** function _SYSTEM_Initialize *****************
  2120 ;; Defined at:
  2121 ;;		line 39 in file "mcc_generated_files/system/src/system.c"
  2122 ;; Parameters:    Size  Location     Type
  2123 ;;		None
  2124 ;; Auto vars:     Size  Location     Type
  2125 ;;		None
  2126 ;; Return value:  Size  Location     Type
  2127 ;;                  1    wreg      void 
  2128 ;; Registers used:
  2129 ;;		wreg, status,2, status,0, pclath, cstack
  2130 ;; Tracked objects:
  2131 ;;		On entry : 0/0
  2132 ;;		On exit  : 0/0
  2133 ;;		Unchanged: 0/0
  2134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2135 ;;      Params:         0       0       0       0
  2136 ;;      Locals:         0       0       0       0
  2137 ;;      Temps:          0       0       0       0
  2138 ;;      Totals:         0       0       0       0
  2139 ;;Total ram usage:        0 bytes
  2140 ;; Hardware stack levels used: 1
  2141 ;; Hardware stack levels required when called: 5
  2142 ;; This function calls:
  2143 ;;		_CLOCK_Initialize
  2144 ;;		_INTERRUPT_Initialize
  2145 ;;		_PIN_MANAGER_Initialize
  2146 ;;		_TMR0_Initialize
  2147 ;; This function is called by:
  2148 ;;		_main
  2149 ;; This function uses a non-reentrant model
  2150 ;;
  2151                           
  2152     017D                     _SYSTEM_Initialize:	
  2153                           ;psect for function _SYSTEM_Initialize
  2154                           
  2155     017D                     l1093:	
  2156                           ;incstack = 0
  2157                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2158                           
  2159                           
  2160                           ;mcc_generated_files/system/src/system.c: 41:     CLOCK_Initialize();
  2161     017D  3181  2194  3181   	fcall	_CLOCK_Initialize
  2162                           
  2163                           ;mcc_generated_files/system/src/system.c: 42:     PIN_MANAGER_Initialize();
  2164     0180  3181  216B  3181   	fcall	_PIN_MANAGER_Initialize
  2165     0183                     l1095:
  2166                           
  2167                           ;mcc_generated_files/system/src/system.c: 43:     TMR0_Initialize();
  2168     0183  3181  212C  3181   	fcall	_TMR0_Initialize
  2169     0186                     l1097:
  2170                           
  2171                           ;mcc_generated_files/system/src/system.c: 44:     INTERRUPT_Initialize();
  2172     0186  3181  218A  3181   	fcall	_INTERRUPT_Initialize
  2173     0189                     l65:
  2174     0189  0008               	return
  2175     018A                     __end_of_SYSTEM_Initialize:
  2176                           
  2177                           	psect	text3
  2178     012C                     __ptext3:	
  2179 ;; *************** function _TMR0_Initialize *****************
  2180 ;; Defined at:
  2181 ;;		line 60 in file "mcc_generated_files/timer/src/tmr0.c"
  2182 ;; Parameters:    Size  Location     Type
  2183 ;;		None
  2184 ;; Auto vars:     Size  Location     Type
  2185 ;;		None
  2186 ;; Return value:  Size  Location     Type
  2187 ;;                  1    wreg      void 
  2188 ;; Registers used:
  2189 ;;		wreg, status,2
  2190 ;; Tracked objects:
  2191 ;;		On entry : 0/0
  2192 ;;		On exit  : 0/0
  2193 ;;		Unchanged: 0/0
  2194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2195 ;;      Params:         0       0       0       0
  2196 ;;      Locals:         0       0       0       0
  2197 ;;      Temps:          0       0       0       0
  2198 ;;      Totals:         0       0       0       0
  2199 ;;Total ram usage:        0 bytes
  2200 ;; Hardware stack levels used: 1
  2201 ;; Hardware stack levels required when called: 3
  2202 ;; This function calls:
  2203 ;;		Nothing
  2204 ;; This function is called by:
  2205 ;;		_SYSTEM_Initialize
  2206 ;; This function uses a non-reentrant model
  2207 ;;
  2208                           
  2209     012C                     _TMR0_Initialize:	
  2210                           ;psect for function _TMR0_Initialize
  2211                           
  2212     012C                     l1065:	
  2213                           ;incstack = 0
  2214                           ; Regs used in _TMR0_Initialize: [wreg+status,2]
  2215                           
  2216                           
  2217                           ;mcc_generated_files/timer/src/tmr0.c: 62:     TMR0H = 0x83;
  2218     012C  3083               	movlw	131
  2219     012D  014B               	movlb	11	; select bank11
  2220     012E  009D               	movwf	29	;volatile
  2221     012F                     l1067:
  2222                           
  2223                           ;mcc_generated_files/timer/src/tmr0.c: 63:     TMR0L = 0x0;
  2224     012F  019C               	clrf	28	;volatile
  2225     0130                     l1069:
  2226                           
  2227                           ;mcc_generated_files/timer/src/tmr0.c: 65:     T0CON1 = (3 << 0x5)
  2228     0130  3070               	movlw	112
  2229     0131  009F               	movwf	31	;volatile
  2230     0132                     l1071:
  2231                           
  2232                           ;mcc_generated_files/timer/src/tmr0.c: 69:     tmr0PeriodCount = ((uint16_t)TMR0H << 8) 
      +                          | TMR0L;
  2233     0132  081D               	movf	29,w	;volatile
  2234     0133  00F5               	movwf	_tmr0PeriodCount+1	;volatile
  2235     0134  081C               	movf	28,w	;volatile
  2236     0135  00F4               	movwf	_tmr0PeriodCount	;volatile
  2237     0136                     l1073:
  2238                           
  2239                           ;mcc_generated_files/timer/src/tmr0.c: 71:     TMR0_OverflowCallback = TMR0_DefaultOverf
      +                          lowCallback;
  2240     0136  30B9               	movlw	low _TMR0_DefaultOverflowCallback
  2241     0137  0140               	movlb	0	; select bank0
  2242     0138  00A0               	movwf	_TMR0_OverflowCallback
  2243     0139  3001               	movlw	high _TMR0_DefaultOverflowCallback
  2244     013A  00A1               	movwf	_TMR0_OverflowCallback+1
  2245     013B                     l1075:
  2246                           
  2247                           ;mcc_generated_files/timer/src/tmr0.c: 73:     PIR0bits.TMR0IF = 0;
  2248     013B  014E               	movlb	14	; select bank14
  2249     013C  128C               	bcf	12,5	;volatile
  2250     013D                     l1077:
  2251                           
  2252                           ;mcc_generated_files/timer/src/tmr0.c: 74:     PIE0bits.TMR0IE = 1;
  2253     013D  1696               	bsf	22,5	;volatile
  2254     013E                     l1079:
  2255                           
  2256                           ;mcc_generated_files/timer/src/tmr0.c: 76:     T0CON0 = (0 << 0x0)
  2257     013E  3090               	movlw	144
  2258     013F  014B               	movlb	11	; select bank11
  2259     0140  009E               	movwf	30	;volatile
  2260     0141                     l136:
  2261     0141  0008               	return
  2262     0142                     __end_of_TMR0_Initialize:
  2263                           
  2264                           	psect	text4
  2265     016B                     __ptext4:	
  2266 ;; *************** function _PIN_MANAGER_Initialize *****************
  2267 ;; Defined at:
  2268 ;;		line 38 in file "mcc_generated_files/system/src/pins.c"
  2269 ;; Parameters:    Size  Location     Type
  2270 ;;		None
  2271 ;; Auto vars:     Size  Location     Type
  2272 ;;		None
  2273 ;; Return value:  Size  Location     Type
  2274 ;;                  1    wreg      void 
  2275 ;; Registers used:
  2276 ;;		status,2
  2277 ;; Tracked objects:
  2278 ;;		On entry : 0/0
  2279 ;;		On exit  : 0/0
  2280 ;;		Unchanged: 0/0
  2281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2282 ;;      Params:         0       0       0       0
  2283 ;;      Locals:         0       0       0       0
  2284 ;;      Temps:          0       0       0       0
  2285 ;;      Totals:         0       0       0       0
  2286 ;;Total ram usage:        0 bytes
  2287 ;; Hardware stack levels used: 1
  2288 ;; Hardware stack levels required when called: 3
  2289 ;; This function calls:
  2290 ;;		Nothing
  2291 ;; This function is called by:
  2292 ;;		_SYSTEM_Initialize
  2293 ;; This function uses a non-reentrant model
  2294 ;;
  2295                           
  2296     016B                     _PIN_MANAGER_Initialize:	
  2297                           ;psect for function _PIN_MANAGER_Initialize
  2298                           
  2299     016B                     l813:	
  2300                           ;incstack = 0
  2301                           ; Regs used in _PIN_MANAGER_Initialize: [status,2]
  2302                           
  2303                           
  2304                           ;mcc_generated_files/system/src/pins.c: 43:     LATA = 0x0;
  2305     016B  0140               	movlb	0	; select bank0
  2306     016C  0198               	clrf	24	;volatile
  2307     016D                     l815:
  2308                           
  2309                           ;mcc_generated_files/system/src/pins.c: 48:     TRISA = 0x5;
  2310     016D  3005               	movlw	5
  2311     016E  0092               	movwf	18	;volatile
  2312     016F                     l817:
  2313                           
  2314                           ;mcc_generated_files/system/src/pins.c: 53:     ANSELA = 0x1;
  2315     016F  3001               	movlw	1
  2316     0170  017E               	movlb	62	; select bank62
  2317     0171  00B8               	movwf	56	;volatile
  2318     0172                     l819:
  2319                           
  2320                           ;mcc_generated_files/system/src/pins.c: 58:     WPUA = 0x4;
  2321     0172  3004               	movlw	4
  2322     0173  00B9               	movwf	57	;volatile
  2323                           
  2324                           ;mcc_generated_files/system/src/pins.c: 64:     ODCONA = 0x0;
  2325     0174  01BA               	clrf	58	;volatile
  2326     0175                     l821:
  2327                           
  2328                           ;mcc_generated_files/system/src/pins.c: 68:     SLRCONA = 0x37;
  2329     0175  3037               	movlw	55
  2330     0176  00BB               	movwf	59	;volatile
  2331     0177                     l823:
  2332                           
  2333                           ;mcc_generated_files/system/src/pins.c: 72:     INLVLA = 0x3F;
  2334     0177  303F               	movlw	63
  2335     0178  00BC               	movwf	60	;volatile
  2336                           
  2337                           ;mcc_generated_files/system/src/pins.c: 85:     IOCAP = 0x0;
  2338     0179  01BD               	clrf	61	;volatile
  2339                           
  2340                           ;mcc_generated_files/system/src/pins.c: 86:     IOCAN = 0x0;
  2341     017A  01BE               	clrf	62	;volatile
  2342                           
  2343                           ;mcc_generated_files/system/src/pins.c: 87:     IOCAF = 0x0;
  2344     017B  01BF               	clrf	63	;volatile
  2345     017C                     l88:
  2346     017C  0008               	return
  2347     017D                     __end_of_PIN_MANAGER_Initialize:
  2348                           
  2349                           	psect	text5
  2350     018A                     __ptext5:	
  2351 ;; *************** function _INTERRUPT_Initialize *****************
  2352 ;; Defined at:
  2353 ;;		line 40 in file "mcc_generated_files/system/src/interrupt.c"
  2354 ;; Parameters:    Size  Location     Type
  2355 ;;		None
  2356 ;; Auto vars:     Size  Location     Type
  2357 ;;		None
  2358 ;; Return value:  Size  Location     Type
  2359 ;;                  1    wreg      void 
  2360 ;; Registers used:
  2361 ;;		wreg, status,2, status,0, pclath, cstack
  2362 ;; Tracked objects:
  2363 ;;		On entry : 0/0
  2364 ;;		On exit  : 0/0
  2365 ;;		Unchanged: 0/0
  2366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2367 ;;      Params:         0       0       0       0
  2368 ;;      Locals:         0       0       0       0
  2369 ;;      Temps:          0       0       0       0
  2370 ;;      Totals:         0       0       0       0
  2371 ;;Total ram usage:        0 bytes
  2372 ;; Hardware stack levels used: 1
  2373 ;; Hardware stack levels required when called: 4
  2374 ;; This function calls:
  2375 ;;		_INT_SetInterruptHandler
  2376 ;; This function is called by:
  2377 ;;		_SYSTEM_Initialize
  2378 ;; This function uses a non-reentrant model
  2379 ;;
  2380                           
  2381     018A                     _INTERRUPT_Initialize:	
  2382                           ;psect for function _INTERRUPT_Initialize
  2383                           
  2384     018A                     l1061:	
  2385                           ;incstack = 0
  2386                           ; Regs used in _INTERRUPT_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2387                           
  2388                           
  2389                           ;mcc_generated_files/system/src/interrupt.c: 43:     (PIR0bits.INTF = 0);
  2390     018A  014E               	movlb	14	; select bank14
  2391     018B  100C               	bcf	12,0	;volatile
  2392     018C                     l1063:
  2393                           
  2394                           ;mcc_generated_files/system/src/interrupt.c: 45:     INT_SetInterruptHandler(INT_Default
      +                          InterruptHandler);
  2395     018C  3000               	movlw	0
  2396     018D  00FB               	movwf	INT_SetInterruptHandler@InterruptHandler
  2397     018E  3000               	movlw	0
  2398     018F  00FC               	movwf	INT_SetInterruptHandler@InterruptHandler+1
  2399     0190  3181  21A3  3181   	fcall	_INT_SetInterruptHandler
  2400     0193                     l32:
  2401     0193  0008               	return
  2402     0194                     __end_of_INTERRUPT_Initialize:
  2403                           
  2404                           	psect	text6
  2405     01A3                     __ptext6:	
  2406 ;; *************** function _INT_SetInterruptHandler *****************
  2407 ;; Defined at:
  2408 ;;		line 95 in file "mcc_generated_files/system/src/interrupt.c"
  2409 ;; Parameters:    Size  Location     Type
  2410 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
  2411 ;;		 -> INT_DefaultInterruptHandler(1), 
  2412 ;; Auto vars:     Size  Location     Type
  2413 ;;		None
  2414 ;; Return value:  Size  Location     Type
  2415 ;;                  1    wreg      void 
  2416 ;; Registers used:
  2417 ;;		wreg
  2418 ;; Tracked objects:
  2419 ;;		On entry : 0/0
  2420 ;;		On exit  : 0/0
  2421 ;;		Unchanged: 0/0
  2422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2423 ;;      Params:         2       0       0       0
  2424 ;;      Locals:         0       0       0       0
  2425 ;;      Temps:          0       0       0       0
  2426 ;;      Totals:         2       0       0       0
  2427 ;;Total ram usage:        2 bytes
  2428 ;; Hardware stack levels used: 1
  2429 ;; Hardware stack levels required when called: 3
  2430 ;; This function calls:
  2431 ;;		Nothing
  2432 ;; This function is called by:
  2433 ;;		_INTERRUPT_Initialize
  2434 ;; This function uses a non-reentrant model
  2435 ;;
  2436                           
  2437     01A3                     _INT_SetInterruptHandler:	
  2438                           ;psect for function _INT_SetInterruptHandler
  2439                           
  2440     01A3                     l1059:	
  2441                           ;incstack = 0
  2442                           ; Regs used in _INT_SetInterruptHandler: [wreg]
  2443                           
  2444                           
  2445                           ;mcc_generated_files/system/src/interrupt.c: 96:     INT_InterruptHandler = InterruptHan
      +                          dler;
  2446     01A3  087C               	movf	INT_SetInterruptHandler@InterruptHandler+1,w
  2447     01A4  0140               	movlb	0	; select bank0
  2448     01A5  00A3               	movwf	_INT_InterruptHandler+1
  2449     01A6  087B               	movf	INT_SetInterruptHandler@InterruptHandler,w
  2450     01A7  00A2               	movwf	_INT_InterruptHandler
  2451     01A8                     l51:
  2452     01A8  0008               	return
  2453     01A9                     __end_of_INT_SetInterruptHandler:
  2454                           
  2455                           	psect	text7
  2456     0194                     __ptext7:	
  2457 ;; *************** function _CLOCK_Initialize *****************
  2458 ;; Defined at:
  2459 ;;		line 39 in file "mcc_generated_files/system/src/clock.c"
  2460 ;; Parameters:    Size  Location     Type
  2461 ;;		None
  2462 ;; Auto vars:     Size  Location     Type
  2463 ;;		None
  2464 ;; Return value:  Size  Location     Type
  2465 ;;                  1    wreg      void 
  2466 ;; Registers used:
  2467 ;;		status,2
  2468 ;; Tracked objects:
  2469 ;;		On entry : 0/0
  2470 ;;		On exit  : 0/0
  2471 ;;		Unchanged: 0/0
  2472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2473 ;;      Params:         0       0       0       0
  2474 ;;      Locals:         0       0       0       0
  2475 ;;      Temps:          0       0       0       0
  2476 ;;      Totals:         0       0       0       0
  2477 ;;Total ram usage:        0 bytes
  2478 ;; Hardware stack levels used: 1
  2479 ;; Hardware stack levels required when called: 3
  2480 ;; This function calls:
  2481 ;;		Nothing
  2482 ;; This function is called by:
  2483 ;;		_SYSTEM_Initialize
  2484 ;; This function uses a non-reentrant model
  2485 ;;
  2486                           
  2487     0194                     _CLOCK_Initialize:	
  2488                           ;psect for function _CLOCK_Initialize
  2489                           
  2490     0194                     l803:	
  2491                           ;incstack = 0
  2492                           ; Regs used in _CLOCK_Initialize: [status,2]
  2493                           
  2494                           
  2495                           ;mcc_generated_files/system/src/clock.c: 42:     OSCCON1 = (0 << 0x0)
  2496     0194  3060               	movlw	96
  2497     0195  0151               	movlb	17	; select bank17
  2498     0196  008D               	movwf	13	;volatile
  2499     0197                     l805:
  2500                           
  2501                           ;mcc_generated_files/system/src/clock.c: 44:     OSCCON3 = (0 << 0x7);
  2502     0197  018F               	clrf	15	;volatile
  2503                           
  2504                           ;mcc_generated_files/system/src/clock.c: 45:     OSCEN = (0 << 0x7)
  2505     0198  0191               	clrf	17	;volatile
  2506     0199                     l807:
  2507                           
  2508                           ;mcc_generated_files/system/src/clock.c: 50:     OSCFRQ = (6 << 0x0);
  2509     0199  3006               	movlw	6
  2510     019A  0093               	movwf	19	;volatile
  2511                           
  2512                           ;mcc_generated_files/system/src/clock.c: 51:     OSCTUNE = (0 << 0x0);
  2513     019B  0192               	clrf	18	;volatile
  2514     019C                     l13:
  2515     019C  0008               	return
  2516     019D                     __end_of_CLOCK_Initialize:
  2517                           
  2518                           	psect	text8
  2519     0142                     __ptext8:	
  2520 ;; *************** function _PerformSWTimer *****************
  2521 ;; Defined at:
  2522 ;;		line 54 in file "main.c"
  2523 ;; Parameters:    Size  Location     Type
  2524 ;;		None
  2525 ;; Auto vars:     Size  Location     Type
  2526 ;;		None
  2527 ;; Return value:  Size  Location     Type
  2528 ;;                  1    wreg      void 
  2529 ;; Registers used:
  2530 ;;		wreg, status,2, status,0
  2531 ;; Tracked objects:
  2532 ;;		On entry : 0/0
  2533 ;;		On exit  : 0/0
  2534 ;;		Unchanged: 0/0
  2535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2536 ;;      Params:         0       0       0       0
  2537 ;;      Locals:         0       0       0       0
  2538 ;;      Temps:          0       0       0       0
  2539 ;;      Totals:         0       0       0       0
  2540 ;;Total ram usage:        0 bytes
  2541 ;; Hardware stack levels used: 1
  2542 ;; Hardware stack levels required when called: 3
  2543 ;; This function calls:
  2544 ;;		Nothing
  2545 ;; This function is called by:
  2546 ;;		_main
  2547 ;; This function uses a non-reentrant model
  2548 ;;
  2549                           
  2550     0142                     _PerformSWTimer:	
  2551                           ;psect for function _PerformSWTimer
  2552                           
  2553     0142                     l891:	
  2554                           ;incstack = 0
  2555                           ; Regs used in _PerformSWTimer: [wreg+status,2+status,0]
  2556                           
  2557                           
  2558                           ;main.c: 56:   if (0 != SwTimer1_u16) SwTimer1_u16--;
  2559     0142  0872               	movf	_SwTimer1_u16,w
  2560     0143  0473               	iorwf	_SwTimer1_u16+1,w
  2561     0144  1903               	btfsc	3,2
  2562     0145  2947               	goto	u41
  2563     0146  2948               	goto	u40
  2564     0147                     u41:
  2565     0147  294C               	goto	l895
  2566     0148                     u40:
  2567     0148                     l893:
  2568     0148  3001               	movlw	1
  2569     0149  02F2               	subwf	_SwTimer1_u16,f
  2570     014A  3000               	movlw	0
  2571     014B  3BF3               	subwfb	_SwTimer1_u16+1,f
  2572     014C                     l895:
  2573                           
  2574                           ;main.c: 57:   if (0 != SwTimer2_u16) SwTimer2_u16--;
  2575     014C  0870               	movf	_SwTimer2_u16,w
  2576     014D  0471               	iorwf	_SwTimer2_u16+1,w
  2577     014E  1903               	btfsc	3,2
  2578     014F  2951               	goto	u51
  2579     0150  2952               	goto	u50
  2580     0151                     u51:
  2581     0151  2956               	goto	l224
  2582     0152                     u50:
  2583     0152                     l897:
  2584     0152  3001               	movlw	1
  2585     0153  02F0               	subwf	_SwTimer2_u16,f
  2586     0154  3000               	movlw	0
  2587     0155  3BF1               	subwfb	_SwTimer2_u16+1,f
  2588     0156                     l224:
  2589     0156  0008               	return
  2590     0157                     __end_of_PerformSWTimer:
  2591                           
  2592                           	psect	text9
  2593     0094                     __ptext9:	
  2594 ;; *************** function _PerformPowerFSM *****************
  2595 ;; Defined at:
  2596 ;;		line 140 in file "main.c"
  2597 ;; Parameters:    Size  Location     Type
  2598 ;;		None
  2599 ;; Auto vars:     Size  Location     Type
  2600 ;;		None
  2601 ;; Return value:  Size  Location     Type
  2602 ;;                  1    wreg      void 
  2603 ;; Registers used:
  2604 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2605 ;; Tracked objects:
  2606 ;;		On entry : 0/0
  2607 ;;		On exit  : 0/0
  2608 ;;		Unchanged: 0/0
  2609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2610 ;;      Params:         0       0       0       0
  2611 ;;      Locals:         0       0       0       0
  2612 ;;      Temps:          2       0       0       0
  2613 ;;      Totals:         2       0       0       0
  2614 ;;Total ram usage:        2 bytes
  2615 ;; Hardware stack levels used: 1
  2616 ;; Hardware stack levels required when called: 3
  2617 ;; This function calls:
  2618 ;;		Nothing
  2619 ;; This function is called by:
  2620 ;;		_main
  2621 ;; This function uses a non-reentrant model
  2622 ;;
  2623                           
  2624     0094                     _PerformPowerFSM:	
  2625                           ;psect for function _PerformPowerFSM
  2626                           
  2627     0094                     l941:	
  2628                           ;incstack = 0
  2629                           ; Regs used in _PerformPowerFSM: [wreg-fsr0h+status,2+status,0+pclath]
  2630                           
  2631                           
  2632                           ;main.c: 142:   switch (PowerFSM)
  2633     0094  28AC               	goto	l951
  2634     0095                     l256:	
  2635                           ;main.c: 143:   {;main.c: 144:     case Power_Init:
  2636                           
  2637                           
  2638                           ;main.c: 145:       PowerFSM = Power_Low;
  2639     0095  3001               	movlw	1
  2640     0096  00F6               	movwf	_PowerFSM
  2641                           
  2642                           ;main.c: 146:       break;
  2643     0097  28BF               	goto	l953
  2644     0098                     l943:
  2645                           
  2646                           ;main.c: 149:     if ((0 != MinOnCycles_u08) && (0 != PORTAbits.RA2))
  2647     0098  087D               	movf	_MinOnCycles_u08,w
  2648     0099  1903               	btfsc	3,2
  2649     009A  289C               	goto	u111
  2650     009B  289D               	goto	u110
  2651     009C                     u111:
  2652     009C  28BF               	goto	l953
  2653     009D                     u110:
  2654     009D                     l945:
  2655     009D  0140               	movlb	0	; select bank0
  2656     009E  1D0C               	btfss	12,2	;volatile
  2657     009F  28A1               	goto	u121
  2658     00A0  28A2               	goto	u120
  2659     00A1                     u121:
  2660     00A1  28BF               	goto	l953
  2661     00A2                     u120:
  2662     00A2                     l947:
  2663                           
  2664                           ;main.c: 150:       {;main.c: 151:         MinOnCycles_u08 = 5u;
  2665     00A2  3005               	movlw	5
  2666     00A3  00FD               	movwf	_MinOnCycles_u08
  2667                           
  2668                           ;main.c: 152:         PowerFSM = Power_High;
  2669     00A4  3002               	movlw	2
  2670     00A5  00F6               	movwf	_PowerFSM
  2671     00A6  28BF               	goto	l953
  2672     00A7                     l260:	
  2673                           ;main.c: 156:     case Power_High:
  2674                           
  2675                           
  2676                           ;main.c: 158:       PowerFSM = Power_High;
  2677     00A7  3002               	movlw	2
  2678     00A8  00F6               	movwf	_PowerFSM
  2679                           
  2680                           ;main.c: 159:       break;
  2681     00A9  28BF               	goto	l953
  2682     00AA                     l949:
  2683                           
  2684                           ;main.c: 162:       PowerFSM = Power_Init;
  2685     00AA  01F6               	clrf	_PowerFSM
  2686                           
  2687                           ;main.c: 163:   }
  2688     00AB  28BF               	goto	l953
  2689     00AC                     l951:
  2690     00AC  0876               	movf	_PowerFSM,w
  2691     00AD  00FB               	movwf	??_PerformPowerFSM
  2692     00AE  01FC               	clrf	??_PerformPowerFSM+1
  2693                           
  2694                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2695                           ; Switch size 1, requested type "simple"
  2696                           ; Number of cases is 1, Range of values is 0 to 0
  2697                           ; switch strategies available:
  2698                           ; Name         Instructions Cycles
  2699                           ; simple_byte            4     3 (average)
  2700                           ; direct_byte            8     6 (fixed)
  2701                           ; jumptable            260     6 (fixed)
  2702                           ;	Chosen strategy is simple_byte
  2703     00AF  087C               	movf	??_PerformPowerFSM+1,w
  2704     00B0  3A00               	xorlw	0	; case 0
  2705     00B1  1903               	skipnz
  2706     00B2  28B4               	goto	l1175
  2707     00B3  28AA               	goto	l949
  2708     00B4                     l1175:
  2709                           
  2710                           ; Switch size 1, requested type "simple"
  2711                           ; Number of cases is 3, Range of values is 0 to 2
  2712                           ; switch strategies available:
  2713                           ; Name         Instructions Cycles
  2714                           ; simple_byte           10     6 (average)
  2715                           ; direct_byte           12     6 (fixed)
  2716                           ; jumptable            260     6 (fixed)
  2717                           ;	Chosen strategy is simple_byte
  2718     00B4  087B               	movf	??_PerformPowerFSM,w
  2719     00B5  3A00               	xorlw	0	; case 0
  2720     00B6  1903               	skipnz
  2721     00B7  2895               	goto	l256
  2722     00B8  3A01               	xorlw	1	; case 1
  2723     00B9  1903               	skipnz
  2724     00BA  2898               	goto	l943
  2725     00BB  3A03               	xorlw	3	; case 2
  2726     00BC  1903               	skipnz
  2727     00BD  28A7               	goto	l260
  2728     00BE  28AA               	goto	l949
  2729     00BF                     l953:
  2730                           
  2731                           ;main.c: 164:   GreenOnTime_u08 = GreenTimes[PowerFSM];
  2732     00BF  0876               	movf	_PowerFSM,w
  2733     00C0  3EAC               	addlw	low (_GreenTimes| (0+32768))
  2734     00C1  0084               	movwf	4
  2735     00C2  3081               	movlw	high (_GreenTimes| (0+32768))
  2736     00C3  1803               	skipnc
  2737     00C4  3E01               	addlw	1
  2738     00C5  0085               	movwf	5
  2739     00C6  0800               	movf	0,w	;code access
  2740     00C7  00F9               	movwf	_GreenOnTime_u08
  2741                           
  2742                           ;main.c: 165:   RedOnTime_u08 = RedTimes[PowerFSM];
  2743     00C8  0876               	movf	_PowerFSM,w
  2744     00C9  3EA9               	addlw	low (_RedTimes| (0+32768))
  2745     00CA  0084               	movwf	4
  2746     00CB  3081               	movlw	high (_RedTimes| (0+32768))
  2747     00CC  1803               	skipnc
  2748     00CD  3E01               	addlw	1
  2749     00CE  0085               	movwf	5
  2750     00CF  0800               	movf	0,w	;code access
  2751     00D0  00F8               	movwf	_RedOnTime_u08
  2752     00D1                     l262:
  2753     00D1  0008               	return
  2754     00D2                     __end_of_PerformPowerFSM:
  2755                           
  2756                           	psect	text10
  2757     002B                     __ptext10:	
  2758 ;; *************** function _PerformBlinkFSM *****************
  2759 ;; Defined at:
  2760 ;;		line 87 in file "main.c"
  2761 ;; Parameters:    Size  Location     Type
  2762 ;;		None
  2763 ;; Auto vars:     Size  Location     Type
  2764 ;;		None
  2765 ;; Return value:  Size  Location     Type
  2766 ;;                  1    wreg      void 
  2767 ;; Registers used:
  2768 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2769 ;; Tracked objects:
  2770 ;;		On entry : 0/0
  2771 ;;		On exit  : 0/0
  2772 ;;		Unchanged: 0/0
  2773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2774 ;;      Params:         0       0       0       0
  2775 ;;      Locals:         0       0       0       0
  2776 ;;      Temps:          2       0       0       0
  2777 ;;      Totals:         2       0       0       0
  2778 ;;Total ram usage:        2 bytes
  2779 ;; Hardware stack levels used: 1
  2780 ;; Hardware stack levels required when called: 5
  2781 ;; This function calls:
  2782 ;;		_HandlePowerOff
  2783 ;; This function is called by:
  2784 ;;		_main
  2785 ;; This function uses a non-reentrant model
  2786 ;;
  2787                           
  2788     002B                     _PerformBlinkFSM:	
  2789                           ;psect for function _PerformBlinkFSM
  2790                           
  2791     002B                     l899:	
  2792                           ;incstack = 0
  2793                           ; Regs used in _PerformBlinkFSM: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2794                           
  2795                           
  2796                           ;main.c: 89:   switch (BlinkFSM)
  2797     002B  287A               	goto	l935
  2798     002C                     l901:
  2799                           
  2800                           ;main.c: 92:       if ((0 != MinOnCycles_u08))
  2801     002C  087D               	movf	_MinOnCycles_u08,w
  2802     002D  1903               	btfsc	3,2
  2803     002E  2830               	goto	u61
  2804     002F  2831               	goto	u60
  2805     0030                     u61:
  2806     0030  2833               	goto	l905
  2807     0031                     u60:
  2808     0031                     l903:
  2809                           
  2810                           ;main.c: 93:         MinOnCycles_u08--;
  2811     0031  3001               	movlw	1
  2812     0032  02FD               	subwf	_MinOnCycles_u08,f
  2813     0033                     l905:
  2814                           
  2815                           ;main.c: 94:       {SwTimer1_u16=2000u;};
  2816     0033  30D0               	movlw	208
  2817     0034  00F2               	movwf	_SwTimer1_u16
  2818     0035  3007               	movlw	7
  2819     0036  00F3               	movwf	_SwTimer1_u16+1
  2820     0037                     l907:
  2821                           
  2822                           ;main.c: 95:       BlinkFSM = Blink_WaitOffTime;
  2823     0037  3001               	movlw	1
  2824     0038  00F7               	movwf	_BlinkFSM
  2825                           
  2826                           ;main.c: 96:       break;
  2827     0039  2893               	goto	l252
  2828     003A                     l909:
  2829                           
  2830                           ;main.c: 99:       HandlePowerOff();
  2831     003A  3180  20D2  3180   	fcall	_HandlePowerOff
  2832     003D                     l911:
  2833                           
  2834                           ;main.c: 100:       if (0==SwTimer1_u16)
  2835     003D  0872               	movf	_SwTimer1_u16,w
  2836     003E  0473               	iorwf	_SwTimer1_u16+1,w
  2837     003F  1D03               	btfss	3,2
  2838     0040  2842               	goto	u71
  2839     0041  2843               	goto	u70
  2840     0042                     u71:
  2841     0042  2893               	goto	l252
  2842     0043                     u70:
  2843     0043                     l237:	
  2844                           ;main.c: 101:       {;main.c: 102:         do { LATAbits.LATA4 = 1; } while(0);
  2845                           
  2846     0043  0140               	movlb	0	; select bank0
  2847     0044  1618               	bsf	24,4	;volatile
  2848     0045                     l913:
  2849                           
  2850                           ;main.c: 103:         {SwTimer1_u16=GreenOnTime_u08;};
  2851     0045  0879               	movf	_GreenOnTime_u08,w
  2852     0046  00FB               	movwf	??_PerformBlinkFSM
  2853     0047  01FC               	clrf	??_PerformBlinkFSM+1
  2854     0048  087B               	movf	??_PerformBlinkFSM,w
  2855     0049  00F2               	movwf	_SwTimer1_u16
  2856     004A  087C               	movf	??_PerformBlinkFSM+1,w
  2857     004B  00F3               	movwf	_SwTimer1_u16+1
  2858     004C                     l915:
  2859                           
  2860                           ;main.c: 104:         BlinkFSM = Blink_GreenIsOn;
  2861     004C  3002               	movlw	2
  2862     004D  00F7               	movwf	_BlinkFSM
  2863     004E  2893               	goto	l252
  2864     004F                     l917:
  2865                           
  2866                           ;main.c: 109:       if (0==SwTimer1_u16)
  2867     004F  0872               	movf	_SwTimer1_u16,w
  2868     0050  0473               	iorwf	_SwTimer1_u16+1,w
  2869     0051  1D03               	btfss	3,2
  2870     0052  2854               	goto	u81
  2871     0053  2855               	goto	u80
  2872     0054                     u81:
  2873     0054  2893               	goto	l252
  2874     0055                     u80:
  2875     0055                     l241:	
  2876                           ;main.c: 110:       {;main.c: 111:         do { LATAbits.LATA4 = 0; } while(0);
  2877                           
  2878     0055  0140               	movlb	0	; select bank0
  2879     0056  1218               	bcf	24,4	;volatile
  2880     0057                     l919:
  2881                           
  2882                           ;main.c: 112:         {SwTimer1_u16=300u;};
  2883     0057  302C               	movlw	44
  2884     0058  00F2               	movwf	_SwTimer1_u16
  2885     0059  3001               	movlw	1
  2886     005A  00F3               	movwf	_SwTimer1_u16+1
  2887     005B                     l921:
  2888                           
  2889                           ;main.c: 113:         BlinkFSM = Blink_WaitBetweenGreenAndRed;
  2890     005B  3003               	movlw	3
  2891     005C  00F7               	movwf	_BlinkFSM
  2892     005D  2893               	goto	l252
  2893     005E                     l923:
  2894                           
  2895                           ;main.c: 118:       if (0==SwTimer1_u16)
  2896     005E  0872               	movf	_SwTimer1_u16,w
  2897     005F  0473               	iorwf	_SwTimer1_u16+1,w
  2898     0060  1D03               	btfss	3,2
  2899     0061  2863               	goto	u91
  2900     0062  2864               	goto	u90
  2901     0063                     u91:
  2902     0063  2893               	goto	l252
  2903     0064                     u90:
  2904     0064                     l245:	
  2905                           ;main.c: 119:       {;main.c: 120:         do { LATAbits.LATA5 = 1; } while(0);
  2906                           
  2907     0064  0140               	movlb	0	; select bank0
  2908     0065  1698               	bsf	24,5	;volatile
  2909     0066                     l925:
  2910                           
  2911                           ;main.c: 121:         {SwTimer1_u16=RedOnTime_u08;};
  2912     0066  0878               	movf	_RedOnTime_u08,w
  2913     0067  00FB               	movwf	??_PerformBlinkFSM
  2914     0068  01FC               	clrf	??_PerformBlinkFSM+1
  2915     0069  087B               	movf	??_PerformBlinkFSM,w
  2916     006A  00F2               	movwf	_SwTimer1_u16
  2917     006B  087C               	movf	??_PerformBlinkFSM+1,w
  2918     006C  00F3               	movwf	_SwTimer1_u16+1
  2919     006D                     l927:
  2920                           
  2921                           ;main.c: 122:         BlinkFSM = Blink_RedIsOn;
  2922     006D  3004               	movlw	4
  2923     006E  00F7               	movwf	_BlinkFSM
  2924     006F  2893               	goto	l252
  2925     0070                     l929:
  2926                           
  2927                           ;main.c: 127:       if (0==SwTimer1_u16)
  2928     0070  0872               	movf	_SwTimer1_u16,w
  2929     0071  0473               	iorwf	_SwTimer1_u16+1,w
  2930     0072  1D03               	btfss	3,2
  2931     0073  2875               	goto	u101
  2932     0074  2876               	goto	u100
  2933     0075                     u101:
  2934     0075  2893               	goto	l252
  2935     0076                     u100:
  2936     0076                     l249:	
  2937                           ;main.c: 128:       {;main.c: 129:         do { LATAbits.LATA5 = 0; } while(0);
  2938                           
  2939     0076  0140               	movlb	0	; select bank0
  2940     0077  1298               	bcf	24,5	;volatile
  2941     0078                     l931:
  2942                           
  2943                           ;main.c: 130:         BlinkFSM = Blink_Init;
  2944     0078  01F7               	clrf	_BlinkFSM
  2945     0079  2893               	goto	l252
  2946     007A                     l935:
  2947     007A  0877               	movf	_BlinkFSM,w
  2948     007B  00FB               	movwf	??_PerformBlinkFSM
  2949     007C  01FC               	clrf	??_PerformBlinkFSM+1
  2950                           
  2951                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2952                           ; Switch size 1, requested type "simple"
  2953                           ; Number of cases is 1, Range of values is 0 to 0
  2954                           ; switch strategies available:
  2955                           ; Name         Instructions Cycles
  2956                           ; simple_byte            4     3 (average)
  2957                           ; direct_byte            8     6 (fixed)
  2958                           ; jumptable            260     6 (fixed)
  2959                           ;	Chosen strategy is simple_byte
  2960     007D  087C               	movf	??_PerformBlinkFSM+1,w
  2961     007E  3A00               	xorlw	0	; case 0
  2962     007F  1903               	skipnz
  2963     0080  2882               	goto	l1177
  2964     0081  2878               	goto	l931
  2965     0082                     l1177:
  2966                           
  2967                           ; Switch size 1, requested type "simple"
  2968                           ; Number of cases is 5, Range of values is 0 to 4
  2969                           ; switch strategies available:
  2970                           ; Name         Instructions Cycles
  2971                           ; direct_byte           16     6 (fixed)
  2972                           ; simple_byte           16     9 (average)
  2973                           ; jumptable            260     6 (fixed)
  2974                           ;	Chosen strategy is simple_byte
  2975     0082  087B               	movf	??_PerformBlinkFSM,w
  2976     0083  3A00               	xorlw	0	; case 0
  2977     0084  1903               	skipnz
  2978     0085  282C               	goto	l901
  2979     0086  3A01               	xorlw	1	; case 1
  2980     0087  1903               	skipnz
  2981     0088  283A               	goto	l909
  2982     0089  3A03               	xorlw	3	; case 2
  2983     008A  1903               	skipnz
  2984     008B  284F               	goto	l917
  2985     008C  3A01               	xorlw	1	; case 3
  2986     008D  1903               	skipnz
  2987     008E  285E               	goto	l923
  2988     008F  3A07               	xorlw	7	; case 4
  2989     0090  1903               	skipnz
  2990     0091  2870               	goto	l929
  2991     0092  2878               	goto	l931
  2992     0093                     l252:
  2993     0093  0008               	return
  2994     0094                     __end_of_PerformBlinkFSM:
  2995                           
  2996                           	psect	text11
  2997     00D2                     __ptext11:	
  2998 ;; *************** function _HandlePowerOff *****************
  2999 ;; Defined at:
  3000 ;;		line 62 in file "main.c"
  3001 ;; Parameters:    Size  Location     Type
  3002 ;;		None
  3003 ;; Auto vars:     Size  Location     Type
  3004 ;;		None
  3005 ;; Return value:  Size  Location     Type
  3006 ;;                  1    wreg      void 
  3007 ;; Registers used:
  3008 ;;		wreg, status,2, status,0, pclath, cstack
  3009 ;; Tracked objects:
  3010 ;;		On entry : 0/0
  3011 ;;		On exit  : 0/0
  3012 ;;		Unchanged: 0/0
  3013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3014 ;;      Params:         0       0       0       0
  3015 ;;      Locals:         0       0       0       0
  3016 ;;      Temps:          0       0       0       0
  3017 ;;      Totals:         0       0       0       0
  3018 ;;Total ram usage:        0 bytes
  3019 ;; Hardware stack levels used: 1
  3020 ;; Hardware stack levels required when called: 4
  3021 ;; This function calls:
  3022 ;;		_TMR0_Start
  3023 ;;		_TMR0_Stop
  3024 ;; This function is called by:
  3025 ;;		_PerformBlinkFSM
  3026 ;; This function uses a non-reentrant model
  3027 ;;
  3028                           
  3029     00D2                     _HandlePowerOff:	
  3030                           ;psect for function _HandlePowerOff
  3031                           
  3032     00D2                     l843:	
  3033                           ;incstack = 0
  3034                           ; Regs used in _HandlePowerOff: [wreg+status,2+status,0+pclath+cstack]
  3035                           
  3036                           
  3037                           ;main.c: 64:   if ((0 != PORTAbits.RA2) && (0 == MinOnCycles_u08))
  3038     00D2  0140               	movlb	0	; select bank0
  3039     00D3  1D0C               	btfss	12,2	;volatile
  3040     00D4  28D6               	goto	u11
  3041     00D5  28D7               	goto	u10
  3042     00D6                     u11:
  3043     00D6  28F5               	goto	l228
  3044     00D7                     u10:
  3045     00D7                     l845:
  3046     00D7  087D               	movf	_MinOnCycles_u08,w
  3047     00D8  1D03               	btfss	3,2
  3048     00D9  28DB               	goto	u21
  3049     00DA  28DC               	goto	u20
  3050     00DB                     u21:
  3051     00DB  28F5               	goto	l228
  3052     00DC                     u20:
  3053     00DC                     l847:
  3054                           
  3055                           ;main.c: 65:   {;main.c: 67:     TMR0_Stop();
  3056     00DC  3181  21AF  3180   	fcall	_TMR0_Stop
  3057     00DF                     l849:
  3058                           
  3059                           ;main.c: 68:     GIE = 0;
  3060     00DF  138B               	bcf	11,7	;volatile
  3061     00E0                     l851:
  3062                           
  3063                           ;main.c: 69:     PORTA;
  3064     00E0  0140               	movlb	0	; select bank0
  3065     00E1  080C               	movf	12,w	;volatile
  3066     00E2                     l853:
  3067                           
  3068                           ;main.c: 70:     IOCAF = 0;
  3069     00E2  017E               	movlb	62	; select bank62
  3070     00E3  01BF               	clrf	63	;volatile
  3071     00E4                     l855:
  3072                           
  3073                           ;main.c: 71:     IOCAN2 = 1;
  3074     00E4  153E               	bsf	62,2	;volatile
  3075     00E5                     l857:
  3076                           
  3077                           ;main.c: 72:     IOCIE = 1;
  3078     00E5  014E               	movlb	14	; select bank14
  3079     00E6  1616               	bsf	22,4	;volatile
  3080     00E7  0063               	sleep	;# 
  3081     00E8                     l859:
  3082                           
  3083                           ;main.c: 74:     __nop();
  3084     00E8  0000               	nop
  3085     00E9                     l861:
  3086                           
  3087                           ;main.c: 77:     IOCAN2 = 0;
  3088     00E9  017E               	movlb	62	; select bank62
  3089     00EA  113E               	bcf	62,2	;volatile
  3090     00EB                     l863:
  3091                           
  3092                           ;main.c: 78:     IOCIE = 0;
  3093     00EB  014E               	movlb	14	; select bank14
  3094     00EC  1216               	bcf	22,4	;volatile
  3095     00ED                     l865:
  3096                           
  3097                           ;main.c: 79:     IOCAF = 0;
  3098     00ED  017E               	movlb	62	; select bank62
  3099     00EE  01BF               	clrf	63	;volatile
  3100     00EF                     l867:
  3101                           
  3102                           ;main.c: 80:     GIE = 1;
  3103     00EF  178B               	bsf	11,7	;volatile
  3104     00F0                     l869:
  3105                           
  3106                           ;main.c: 81:     TMR0_Start();
  3107     00F0  3181  21B2  3180   	fcall	_TMR0_Start
  3108     00F3                     l871:
  3109                           
  3110                           ;main.c: 82:     MinOnCycles_u08 = 5u;
  3111     00F3  3005               	movlw	5
  3112     00F4  00FD               	movwf	_MinOnCycles_u08
  3113     00F5                     l228:
  3114     00F5  0008               	return
  3115     00F6                     __end_of_HandlePowerOff:
  3116                           
  3117                           	psect	text12
  3118     01AF                     __ptext12:	
  3119 ;; *************** function _TMR0_Stop *****************
  3120 ;; Defined at:
  3121 ;;		line 99 in file "mcc_generated_files/timer/src/tmr0.c"
  3122 ;; Parameters:    Size  Location     Type
  3123 ;;		None
  3124 ;; Auto vars:     Size  Location     Type
  3125 ;;		None
  3126 ;; Return value:  Size  Location     Type
  3127 ;;                  1    wreg      void 
  3128 ;; Registers used:
  3129 ;;		None
  3130 ;; Tracked objects:
  3131 ;;		On entry : 0/0
  3132 ;;		On exit  : 0/0
  3133 ;;		Unchanged: 0/0
  3134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3135 ;;      Params:         0       0       0       0
  3136 ;;      Locals:         0       0       0       0
  3137 ;;      Temps:          0       0       0       0
  3138 ;;      Totals:         0       0       0       0
  3139 ;;Total ram usage:        0 bytes
  3140 ;; Hardware stack levels used: 1
  3141 ;; Hardware stack levels required when called: 3
  3142 ;; This function calls:
  3143 ;;		Nothing
  3144 ;; This function is called by:
  3145 ;;		_HandlePowerOff
  3146 ;; This function uses a non-reentrant model
  3147 ;;
  3148                           
  3149     01AF                     _TMR0_Stop:	
  3150                           ;psect for function _TMR0_Stop
  3151                           
  3152     01AF                     l801:	
  3153                           ;incstack = 0
  3154                           ; Regs used in _TMR0_Stop: []
  3155                           
  3156                           
  3157                           ;mcc_generated_files/timer/src/tmr0.c: 101:     T0CON0bits.T0EN = 0;
  3158     01AF  014B               	movlb	11	; select bank11
  3159     01B0  139E               	bcf	30,7	;volatile
  3160     01B1                     l145:
  3161     01B1  0008               	return
  3162     01B2                     __end_of_TMR0_Stop:
  3163                           
  3164                           	psect	text13
  3165     01B2                     __ptext13:	
  3166 ;; *************** function _TMR0_Start *****************
  3167 ;; Defined at:
  3168 ;;		line 94 in file "mcc_generated_files/timer/src/tmr0.c"
  3169 ;; Parameters:    Size  Location     Type
  3170 ;;		None
  3171 ;; Auto vars:     Size  Location     Type
  3172 ;;		None
  3173 ;; Return value:  Size  Location     Type
  3174 ;;                  1    wreg      void 
  3175 ;; Registers used:
  3176 ;;		None
  3177 ;; Tracked objects:
  3178 ;;		On entry : 0/0
  3179 ;;		On exit  : 0/0
  3180 ;;		Unchanged: 0/0
  3181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3182 ;;      Params:         0       0       0       0
  3183 ;;      Locals:         0       0       0       0
  3184 ;;      Temps:          0       0       0       0
  3185 ;;      Totals:         0       0       0       0
  3186 ;;Total ram usage:        0 bytes
  3187 ;; Hardware stack levels used: 1
  3188 ;; Hardware stack levels required when called: 3
  3189 ;; This function calls:
  3190 ;;		Nothing
  3191 ;; This function is called by:
  3192 ;;		_HandlePowerOff
  3193 ;;		_main
  3194 ;; This function uses a non-reentrant model
  3195 ;;
  3196                           
  3197     01B2                     _TMR0_Start:	
  3198                           ;psect for function _TMR0_Start
  3199                           
  3200     01B2                     l799:	
  3201                           ;incstack = 0
  3202                           ; Regs used in _TMR0_Start: []
  3203                           
  3204                           
  3205                           ;mcc_generated_files/timer/src/tmr0.c: 96:     T0CON0bits.T0EN = 1;
  3206     01B2  014B               	movlb	11	; select bank11
  3207     01B3  179E               	bsf	30,7	;volatile
  3208     01B4                     l142:
  3209     01B4  0008               	return
  3210     01B5                     __end_of_TMR0_Start:
  3211                           
  3212                           	psect	intentry
  3213     0004                     __pintentry:	
  3214 ;; *************** function _INTERRUPT_InterruptManager *****************
  3215 ;; Defined at:
  3216 ;;		line 57 in file "mcc_generated_files/system/src/interrupt.c"
  3217 ;; Parameters:    Size  Location     Type
  3218 ;;		None
  3219 ;; Auto vars:     Size  Location     Type
  3220 ;;		None
  3221 ;; Return value:  Size  Location     Type
  3222 ;;                  1    wreg      void 
  3223 ;; Registers used:
  3224 ;;		wreg, status,2, status,0, pclath, cstack
  3225 ;; Tracked objects:
  3226 ;;		On entry : 0/0
  3227 ;;		On exit  : 0/0
  3228 ;;		Unchanged: 0/0
  3229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3230 ;;      Params:         0       0       0       0
  3231 ;;      Locals:         0       0       0       0
  3232 ;;      Temps:          0       0       0       0
  3233 ;;      Totals:         0       0       0       0
  3234 ;;Total ram usage:        0 bytes
  3235 ;; Hardware stack levels used: 1
  3236 ;; Hardware stack levels required when called: 2
  3237 ;; This function calls:
  3238 ;;		_TMR0_ISR
  3239 ;; This function is called by:
  3240 ;;		Interrupt level 1
  3241 ;; This function uses a non-reentrant model
  3242 ;;
  3243                           
  3244     0004                     _INTERRUPT_InterruptManager:
  3245                           
  3246                           ;incstack = 0
  3247     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  3248                           
  3249                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  3250     0005  3180               	pagesel	$
  3251     0006                     i1l1101:
  3252                           
  3253                           ;mcc_generated_files/system/src/interrupt.c: 60:     if(INTCONbits.PEIE == 1)
  3254     0006  1F0B               	btfss	11,6	;volatile
  3255     0007  2809               	goto	u20_21
  3256     0008  280A               	goto	u20_20
  3257     0009                     u20_21:
  3258     0009  2816               	goto	i1l41
  3259     000A                     u20_20:
  3260     000A                     i1l1103:
  3261                           
  3262                           ;mcc_generated_files/system/src/interrupt.c: 61:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 62:         if(PIE0bits.TMR0IE == 1 && PIR0bits.TMR0IF == 1)
  3263     000A  014E               	movlb	14	; select bank14
  3264     000B  1E96               	btfss	22,5	;volatile
  3265     000C  280E               	goto	u21_21
  3266     000D  280F               	goto	u21_20
  3267     000E                     u21_21:
  3268     000E  2816               	goto	i1l41
  3269     000F                     u21_20:
  3270     000F                     i1l1105:
  3271     000F  1E8C               	btfss	12,5	;volatile
  3272     0010  2812               	goto	u22_21
  3273     0011  2813               	goto	u22_20
  3274     0012                     u22_21:
  3275     0012  2816               	goto	i1l41
  3276     0013                     u22_20:
  3277     0013                     i1l1107:
  3278                           
  3279                           ;mcc_generated_files/system/src/interrupt.c: 63:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 64:             TMR0_ISR();
  3280     0013  3181  2157  3180   	fcall	_TMR0_ISR
  3281     0016                     i1l41:	
  3282                           ;mcc_generated_files/system/src/interrupt.c: 65:         }
  3283                           
  3284     0016  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3285     0017  0009               	retfie
  3286     0018                     __end_of_INTERRUPT_InterruptManager:
  3287                           
  3288                           	psect	text15
  3289     0157                     __ptext15:	
  3290 ;; *************** function _TMR0_ISR *****************
  3291 ;; Defined at:
  3292 ;;		line 141 in file "mcc_generated_files/timer/src/tmr0.c"
  3293 ;; Parameters:    Size  Location     Type
  3294 ;;		None
  3295 ;; Auto vars:     Size  Location     Type
  3296 ;;		None
  3297 ;; Return value:  Size  Location     Type
  3298 ;;                  1    wreg      void 
  3299 ;; Registers used:
  3300 ;;		wreg, status,2, status,0, pclath, cstack
  3301 ;; Tracked objects:
  3302 ;;		On entry : 0/0
  3303 ;;		On exit  : 0/0
  3304 ;;		Unchanged: 0/0
  3305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3306 ;;      Params:         0       0       0       0
  3307 ;;      Locals:         0       0       0       0
  3308 ;;      Temps:          0       0       0       0
  3309 ;;      Totals:         0       0       0       0
  3310 ;;Total ram usage:        0 bytes
  3311 ;; Hardware stack levels used: 1
  3312 ;; Hardware stack levels required when called: 1
  3313 ;; This function calls:
  3314 ;;		NULL
  3315 ;;		_MyTmr0
  3316 ;;		_TMR0_DefaultOverflowCallback
  3317 ;; This function is called by:
  3318 ;;		_INTERRUPT_InterruptManager
  3319 ;; This function uses a non-reentrant model
  3320 ;;
  3321                           
  3322     0157                     _TMR0_ISR:	
  3323                           ;psect for function _TMR0_ISR
  3324                           
  3325     0157                     i1l1083:	
  3326                           ;incstack = 0
  3327                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  3328                           
  3329                           
  3330                           ;mcc_generated_files/timer/src/tmr0.c: 143:     TMR0H = (uint8_t)(tmr0PeriodCount >> 8);
  3331     0157  0875               	movf	_tmr0PeriodCount+1,w	;volatile
  3332     0158  014B               	movlb	11	; select bank11
  3333     0159  009D               	movwf	29	;volatile
  3334     015A                     i1l1085:
  3335                           
  3336                           ;mcc_generated_files/timer/src/tmr0.c: 144:     TMR0L = (uint8_t)(tmr0PeriodCount);
  3337     015A  0874               	movf	_tmr0PeriodCount,w	;volatile
  3338     015B  009C               	movwf	28	;volatile
  3339     015C                     i1l1087:
  3340                           
  3341                           ;mcc_generated_files/timer/src/tmr0.c: 146:     if(((void*)0) != TMR0_OverflowCallback)
  3342     015C  0140               	movlb	0	; select bank0
  3343     015D  0820               	movf	_TMR0_OverflowCallback,w
  3344     015E  0421               	iorwf	_TMR0_OverflowCallback+1,w
  3345     015F  1903               	btfsc	3,2
  3346     0160  2962               	goto	u19_21
  3347     0161  2963               	goto	u19_20
  3348     0162                     u19_21:
  3349     0162  2968               	goto	i1l1091
  3350     0163                     u19_20:
  3351     0163                     i1l1089:
  3352                           
  3353                           ;mcc_generated_files/timer/src/tmr0.c: 147:     {;mcc_generated_files/timer/src/tmr0.c: 
      +                          148:         TMR0_OverflowCallback();
  3354     0163  0821               	movf	_TMR0_OverflowCallback+1,w
  3355     0164  008A               	movwf	10
  3356     0165  0820               	movf	_TMR0_OverflowCallback,w
  3357     0166  000A               	callw
  3358     0167  3181               	pagesel	$
  3359     0168                     i1l1091:
  3360                           
  3361                           ;mcc_generated_files/timer/src/tmr0.c: 150:     PIR0bits.TMR0IF = 0;
  3362     0168  014E               	movlb	14	; select bank14
  3363     0169  128C               	bcf	12,5	;volatile
  3364     016A                     i1l164:
  3365     016A  0008               	return
  3366     016B                     __end_of_TMR0_ISR:
  3367                           
  3368                           	psect	text16
  3369     01B5                     __ptext16:	
  3370 ;; *************** function _MyTmr0 *****************
  3371 ;; Defined at:
  3372 ;;		line 48 in file "main.c"
  3373 ;; Parameters:    Size  Location     Type
  3374 ;;		None
  3375 ;; Auto vars:     Size  Location     Type
  3376 ;;		None
  3377 ;; Return value:  Size  Location     Type
  3378 ;;                  1    wreg      void 
  3379 ;; Registers used:
  3380 ;;		None
  3381 ;; Tracked objects:
  3382 ;;		On entry : 0/0
  3383 ;;		On exit  : 0/0
  3384 ;;		Unchanged: 0/0
  3385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3386 ;;      Params:         0       0       0       0
  3387 ;;      Locals:         0       0       0       0
  3388 ;;      Temps:          0       0       0       0
  3389 ;;      Totals:         0       0       0       0
  3390 ;;Total ram usage:        0 bytes
  3391 ;; Hardware stack levels used: 1
  3392 ;; This function calls:
  3393 ;;		Nothing
  3394 ;; This function is called by:
  3395 ;;		_main
  3396 ;;		_TMR0_ISR
  3397 ;; This function uses a non-reentrant model
  3398 ;;
  3399                           
  3400     01B5                     _MyTmr0:	
  3401                           ;psect for function _MyTmr0
  3402                           
  3403     01B5                     i1l1081:	
  3404                           ;incstack = 0
  3405                           ; Regs used in _MyTmr0: []
  3406                           
  3407                           
  3408                           ;main.c: 50:   TimerFlag_u08 = 1;
  3409     01B5  3001               	movlw	1
  3410     01B6  00FA               	movwf	_TimerFlag_u08
  3411     01B7                     i1l219:
  3412     01B7  0008               	return
  3413     01B8                     __end_of_MyTmr0:
  3414                           
  3415                           	psect	text17
  3416     01B9                     __ptext17:	
  3417 ;; *************** function _TMR0_DefaultOverflowCallback *****************
  3418 ;; Defined at:
  3419 ;;		line 158 in file "mcc_generated_files/timer/src/tmr0.c"
  3420 ;; Parameters:    Size  Location     Type
  3421 ;;		None
  3422 ;; Auto vars:     Size  Location     Type
  3423 ;;		None
  3424 ;; Return value:  Size  Location     Type
  3425 ;;                  1    wreg      void 
  3426 ;; Registers used:
  3427 ;;		None
  3428 ;; Tracked objects:
  3429 ;;		On entry : 0/0
  3430 ;;		On exit  : 0/0
  3431 ;;		Unchanged: 0/0
  3432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3433 ;;      Params:         0       0       0       0
  3434 ;;      Locals:         0       0       0       0
  3435 ;;      Temps:          0       0       0       0
  3436 ;;      Totals:         0       0       0       0
  3437 ;;Total ram usage:        0 bytes
  3438 ;; Hardware stack levels used: 1
  3439 ;; This function calls:
  3440 ;;		Nothing
  3441 ;; This function is called by:
  3442 ;;		_TMR0_Initialize
  3443 ;;		_TMR0_ISR
  3444 ;; This function uses a non-reentrant model
  3445 ;;
  3446                           
  3447     01B9                     _TMR0_DefaultOverflowCallback:	
  3448                           ;psect for function _TMR0_DefaultOverflowCallback
  3449                           
  3450     01B9                     i1l170:	
  3451                           ;incstack = 0
  3452                           ; Regs used in _TMR0_DefaultOverflowCallback: []
  3453                           
  3454     01B9  0008               	return
  3455     01BA                     __end_of_TMR0_DefaultOverflowCallback:
  3456     0000                     ___latbits      equ	0
  3457     007E                     btemp           set	126	;btemp
  3458     007E                     int$flags       set	126
  3459     007E                     wtemp0          set	126
  3460                           
  3461                           	psect	config
  3462                           
  3463                           ;Config register CONFIG1 @ 0x8007
  3464                           ;	External Oscillator mode selection bits
  3465                           ;	FEXTOSC = OFF, Oscillator not enabled
  3466                           ;	Power-up default value for COSC bits
  3467                           ;	RSTOSC = HFINT32, HFINTOSC with OSCFRQ= 32 MHz and CDIV = 1:1
  3468                           ;	Clock Out Enable bit
  3469                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
  3470                           ;	Clock Switch Enable bit
  3471                           ;	CSWEN = OFF, The NOSC and NDIV bits cannot be changed by user software
  3472                           ;	Fail-Safe Clock Monitor Enable bit
  3473                           ;	FCMEN = OFF, FSCM timer disabled
  3474     8007                     	org	32775
  3475     8007  178C               	dw	6028
  3476                           
  3477                           ;Config register CONFIG2 @ 0x8008
  3478                           ;	Master Clear Enable bit
  3479                           ;	MCLRE = ON, MCLR pin is Master Clear function
  3480                           ;	Power-up Timer Enable bit
  3481                           ;	PWRTE = 0x1, unprogrammed default
  3482                           ;	Low-Power BOR enable bit
  3483                           ;	LPBOREN = OFF, ULPBOR disabled
  3484                           ;	Brown-out reset enable bits
  3485                           ;	BOREN = OFF, Brown-out reset disabled
  3486                           ;	Brown-out Reset Voltage Selection
  3487                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
  3488                           ;	Zero-cross detect disable
  3489                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
  3490                           ;	Peripheral Pin Select one-way control
  3491                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
  3492                           ;	Stack Overflow/Underflow Reset Enable bit
  3493                           ;	STVREN = OFF, Stack Overflow or Underflow will not cause a reset
  3494     8008                     	org	32776
  3495     8008  2F3F               	dw	12095
  3496                           
  3497                           ;Config register CONFIG3 @ 0x8009
  3498                           ;	WDT Period Select bits
  3499                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3500                           ;	WDT operating mode
  3501                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
  3502                           ;	WDT Window Select bits
  3503                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  3504                           ;	WDT input clock selector
  3505                           ;	WDTCCS = SC, Software Control
  3506     8009                     	org	32777
  3507     8009  3F9F               	dw	16287
  3508                           
  3509                           ;Config register CONFIG4 @ 0x800A
  3510                           ;	Boot Block Size Selection bits
  3511                           ;	BBSIZE = BB512, 512 words boot block size
  3512                           ;	Boot Block Enable bit
  3513                           ;	BBEN = OFF, Boot Block disabled
  3514                           ;	SAF Enable bit
  3515                           ;	SAFEN = OFF, SAF disabled
  3516                           ;	Application Block Write Protection bit
  3517                           ;	WRTAPP = OFF, Application Block not write protected
  3518                           ;	Boot Block Write Protection bit
  3519                           ;	WRTB = OFF, Boot Block not write protected
  3520                           ;	Configuration Register Write Protection bit
  3521                           ;	WRTC = OFF, Configuration Register not write protected
  3522                           ;	Storage Area Flash Write Protection bit
  3523                           ;	WRTSAF = OFF, SAF not write protected
  3524                           ;	Low Voltage Programming Enable bit
  3525                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
  3526     800A                     	org	32778
  3527     800A  3FFF               	dw	16383
  3528                           
  3529                           ;Config register CONFIG5 @ 0x800B
  3530                           ;	UserNVM Program memory code protection bit
  3531                           ;	CP = OFF, UserNVM code protection disabled
  3532     800B                     	org	32779
  3533     800B  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    28
    Data        1
    BSS         11
    Persistent  36
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2      14
    BANK0            80      0       4
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), NULL(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), 

    MainTimer$CounterGet	PTR FTN()unsigned long  size(2) Largest target is 4
		 -> TMR0_CounterGet(), 

    MainTimer$CounterSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> TMR0_CounterSet(), 

    MainTimer$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Deinitialize(), 

    MainTimer$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Initialize(), 

    MainTimer$MaxCountGet	PTR FTN()unsigned long  size(2) Largest target is 4
		 -> TMR0_MaxCountGet(), 

    MainTimer$PeriodGet	PTR FTN()unsigned long  size(2) Largest target is 4
		 -> TMR0_PeriodGet(), 

    MainTimer$PeriodSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> TMR0_PeriodSet(), 

    MainTimer$Start	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Start(), 

    MainTimer$Stop	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Stop(), 

    MainTimer$Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    MainTimer$TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> TMR0_OverflowCallbackRegister(), 

    S155$9$0	PTR FTN()void  size(2) Largest target is 1
		 -> MyTmr0(), 

    S155TIMER_INTERFACE$CounterGet	PTR FTN()unsigned long  size(2) Largest target is 4
		 -> TMR0_CounterGet(), 

    S155TIMER_INTERFACE$CounterSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> TMR0_CounterSet(), 

    S155TIMER_INTERFACE$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Deinitialize(), 

    S155TIMER_INTERFACE$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Initialize(), 

    S155TIMER_INTERFACE$MaxCountGet	PTR FTN()unsigned long  size(2) Largest target is 4
		 -> TMR0_MaxCountGet(), 

    S155TIMER_INTERFACE$PeriodGet	PTR FTN()unsigned long  size(2) Largest target is 4
		 -> TMR0_PeriodGet(), 

    S155TIMER_INTERFACE$PeriodSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> TMR0_PeriodSet(), 

    S155TIMER_INTERFACE$Start	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Start(), 

    S155TIMER_INTERFACE$Stop	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Stop(), 

    S155TIMER_INTERFACE$Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S155TIMER_INTERFACE$TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> TMR0_OverflowCallbackRegister(), 

    TMR0_OverflowCallback	PTR FTN()void  size(2) Largest target is 1
		 -> MyTmr0(), TMR0_DefaultOverflowCallback(), NULL(), 

    TMR0_OverflowCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> MyTmr0(), 


Critical Paths under _main in COMMON

    _main->_PerformBlinkFSM
    _main->_PerformPowerFSM
    _main->_TMR0_OverflowCallbackRegister
    _INTERRUPT_Initialize->_INT_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      46
                    _PerformBlinkFSM
                    _PerformPowerFSM
                     _PerformSWTimer
                  _SYSTEM_Initialize
      _TMR0_OverflowCallbackRegister
                         _TMR0_Start
 ---------------------------------------------------------------------------------
 (1) _TMR0_OverflowCallbackRegister                        2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      23
                   _CLOCK_Initialize
               _INTERRUPT_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0      23
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PerformSWTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PerformPowerFSM                                      2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _PerformBlinkFSM                                      2     2      0       0
                                              0 COMMON     2     2      0
                     _HandlePowerOff
 ---------------------------------------------------------------------------------
 (2) _HandlePowerOff                                       0     0      0       0
                         _TMR0_Start
                          _TMR0_Stop
 ---------------------------------------------------------------------------------
 (3) _TMR0_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0       0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
                                NULL *
                             _MyTmr0 *
       _TMR0_DefaultOverflowCallback *
 ---------------------------------------------------------------------------------
 (6) _TMR0_DefaultOverflowCallback                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _MyTmr0                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (6) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PerformBlinkFSM
     _HandlePowerOff
       _TMR0_Start
       _TMR0_Stop
   _PerformPowerFSM
   _PerformSWTimer
   _SYSTEM_Initialize
     _CLOCK_Initialize
     _INTERRUPT_Initialize
       _INT_SetInterruptHandler
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
   _TMR0_OverflowCallbackRegister
   _TMR0_Start

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     NULL(Fake) *
     _MyTmr0 *
     _TMR0_DefaultOverflowCallback *

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BIGRAM             240      0       0      0.0%
COMMON              14      2      14    100.0%
BANK0               80      0       4      5.0%
BANK1               80      0       0      0.0%
BANK2               80      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      18      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Sat May 10 22:48:58 2025

                                          l13 019C                                            l32 0193  
                                          l51 01A8                                            l65 0189  
                                          l88 017C                                            u10 00D7  
                                          u11 00D6                                            u20 00DC  
                                          u21 00DB                                            u40 0148  
                                          u41 0147                                            u50 0152  
                                          u51 0151                                            u60 0031  
                                          u61 0030                                            u70 0043  
                                          u71 0042                                            u80 0055  
                                          u81 0054                                            u90 0064  
                                          u91 0063                                           l142 01B4  
                                         l224 0156                                           l136 0141  
                                         l145 01B1                                           l241 0055  
                                         l228 00F5                                           l252 0093  
                                         l260 00A7                                           l245 0064  
                                         l237 0043                                           l262 00D1  
                                         l167 01A2                                           l256 0095  
                                         l249 0076                                           l801 01AF  
                                         l803 0194                                           l901 002C  
                                         l805 0197                                           l821 0175  
                                         l813 016B                                           l911 003D  
                                         l903 0031                                           l807 0199  
                                         l823 0177                                           l815 016D  
                                         l921 005B                                           l913 0045  
                                         l905 0033                                           l817 016F  
                                         l851 00E0                                           l843 00D2  
                                         l931 0078                                           l923 005E  
                                         l915 004C                                           l907 0037  
                                         l819 0172                                           l861 00E9  
                                         l853 00E2                                           l845 00D7  
                                         l925 0066                                           l917 004F  
                                         l909 003A                                           l941 0094  
                                         l871 00F3                                           l863 00EB  
                                         l855 00E4                                           l847 00DC  
                                         l927 006D                                           l919 0057  
                                         l935 007A                                           l943 0098  
                                         l951 00AC                                           l865 00ED  
                                         l857 00E5                                           l849 00DF  
                                         l929 0070                                           l945 009D  
                                         l953 00BF                                           l867 00EF  
                                         l859 00E8                                           l947 00A2  
                                         l891 0142                                           l869 00F0  
                                         l949 00AA                                           l893 0148  
                                         l799 01B2                                           l895 014C  
                                         l897 0152                                           l899 002B  
                                         _GIE 005F                                           u100 0076  
                                         u101 0075                                           u110 009D  
                                         u111 009C                                           u120 00A2  
                                         u121 00A1                                           u240 010A  
                                         u241 0109                               _MinOnCycles_u08 007D  
                                        l1121 0101                                          l1131 010E  
                                        l1123 0102                                          l1061 018A  
                                        l1133 0111                                          l1125 0105  
                                        l1117 00F6                                          l1063 018C  
                                        l1071 0132                                          l1127 010A  
                                        l1119 0100                                          l1073 0136  
                                        l1065 012C                                          l1129 010B  
                                        l1059 01A3                                          l1075 013B  
                                        l1067 012F                                          l1077 013D  
                                        l1069 0130                                          l1093 017D  
                                        l1175 00B4                                          l1079 013E  
                                        l1095 0183                                          l1177 0082  
                                        l1097 0186                                          l1099 019D  
                                        _LATA 0018                                          i1l41 0016  
                                        _WPUA 1F39                                          _main 00F6  
                                        fsr0h 0005                                          indf0 0000  
                                        fsr0l 0004                                          btemp 007E  
                 _INT_DefaultInterruptHandler 0000                                          start 0018  
                               _RedOnTime_u08 0078               __end_of_INT_SetInterruptHandler 01A9  
                     __end_of_TMR0_Initialize 0142                                         ?_main 007B  
                                       _IOCAF 1F3F                                         _IOCAN 1F3E  
                                       _IOCAP 1F3D                                         _IOCIE 38B4  
                                       i1l170 01B9                                         i1l219 01B7  
                                       i1l164 016A                                         _OSCEN 0891  
                                       u20_20 000A                                         u20_21 0009  
                                       u21_20 000F                                         u21_21 000E  
                                       u22_20 0013                                         u22_21 0012  
                                       _TMR0H 059D                                         _TMR0L 059C  
                                       u19_20 0163                                         u19_21 0162  
                                       _PORTA 000C                                         _TRISA 0012  
                            __end_of_TMR0_ISR 016B                                   ?_TMR0_Start 007B  
                                       pclath 000A                               _tmr0PeriodCount 0074  
                                       status 0003                                         wtemp0 007E  
                                  _GreenTimes 01AC                               __initialization 0019  
                                __end_of_main 0116                              __end_of_RedTimes 01AC  
                 ?_INTERRUPT_InterruptManager 007B                                        ??_main 007D  
TMR0_OverflowCallbackRegister@callbackHandler 007B                                        _ANSELA 1F38  
                                      _T0CON0 059E                                        _T0CON1 059F  
                                      _IOCAN2 F9F2                                        i1l1101 0006  
                                      i1l1103 000A                                        i1l1105 000F  
                                      i1l1107 0013                                        i1l1081 01B5  
                                      i1l1091 0168                                        i1l1083 0157  
                                      i1l1085 015A                                        i1l1087 015C  
                                      i1l1089 0163                                        _ODCONA 1F3A  
                                      _INLVLA 1F3C                                        _OSCFRQ 0893  
                                      _MyTmr0 01B5                              ??_PerformSWTimer 007B  
                           __end_of_TMR0_Stop 01B2                                _HandlePowerOff 00D2  
                            ?_TMR0_Initialize 007B                             ?_CLOCK_Initialize 007B  
                                __pdataCOMMON 007D                            ??_CLOCK_Initialize 007B  
     INT_SetInterruptHandler@InterruptHandler 007B                             _SYSTEM_Initialize 017D  
                     __end_of__initialization 0028                            ?_SYSTEM_Initialize 007B  
                      __end_of_HandlePowerOff 00F6                                __pcstackCOMMON 007B  
                         ??_SYSTEM_Initialize 007D                                     ?_TMR0_ISR 007B  
                           __end_of_MainTimer 012C                     __end_of_SYSTEM_Initialize 018A  
                       _TMR0_OverflowCallback 0020                                       ?_MyTmr0 007B  
                                  __pmaintext 00F6                               ?_HandlePowerOff 007B  
                                  ??_TMR0_ISR 007B                                    __pintentry 0004  
                                     _OSCCON1 088D                                       _OSCCON3 088F  
                                     _OSCTUNE 0892                                  ??_TMR0_Start 007B  
                                     _SLRCONA 1F3B                             ??_PerformBlinkFSM 007B  
                          __end_of_TMR0_Start 01B5                                       __ptext1 019D  
                                     __ptext2 017D                                       __ptext3 012C  
                                     __ptext4 016B                                       __ptext5 018A  
                                     __ptext6 01A3                                       __ptext7 0194  
                                     __ptext8 0142                                       __ptext9 0094  
                    ??_PIN_MANAGER_Initialize 007B                       _INT_SetInterruptHandler 01A3  
                           ??_PerformPowerFSM 007B                          end_of_initialization 0028  
                                   _PORTAbits 000C                                     _TMR0_Stop 01AF  
       __end_of_TMR0_OverflowCallbackRegister 01A3                 _TMR0_OverflowCallbackRegister 019D  
                              _TMR0_PeriodGet 0000                                _TMR0_PeriodSet 0000  
                           _TMR0_Deinitialize 0000          __end_of_TMR0_DefaultOverflowCallback 01BA  
                _TMR0_DefaultOverflowCallback 01B9                                __end_of_MyTmr0 01B8  
                __end_of_INTERRUPT_Initialize 0194                                 __pidataCOMMON 01B8  
                                  ?_TMR0_Stop 007B                                     _MainTimer 0116  
                   ??_INT_SetInterruptHandler 007D                            __end_of_GreenTimes 01AF  
                         start_initialization 0019                              ??_HandlePowerOff 007B  
               ?_TMR0_DefaultOverflowCallback 007B                                      ??_MyTmr0 007B  
                                 __pbssCOMMON 0070                                     ___latbits 0000  
              ?_TMR0_OverflowCallbackRegister 007B                               _PerformBlinkFSM 002B  
                               _TimerFlag_u08 007A                                     __pnvBANK0 0020  
                      _PIN_MANAGER_Initialize 016B                               _PerformPowerFSM 0094  
                ??_INTERRUPT_InterruptManager 007B                                   ??_TMR0_Stop 007B  
                        _INTERRUPT_Initialize 018A                              _CLOCK_Initialize 0194  
                           ??_TMR0_Initialize 007B                                      _LATAbits 0018  
                                    _PIE0bits 0716                                      _PIR0bits 070C  
                                    _TMR0_ISR 0157                ??_TMR0_DefaultOverflowCallback 007B  
                     __end_of_PerformBlinkFSM 0094                                      _BlinkFSM 0077  
                       ?_INTERRUPT_Initialize 007B                               _GreenOnTime_u08 0079  
                                    _RedTimes 01A9                       __end_of_PerformPowerFSM 00D2  
                                    _PowerFSM 0076                                _PerformSWTimer 0142  
                                  _T0CON0bits 059E                                      __ptext10 002B  
                                    __ptext11 00D2                                      __ptext12 01AF  
                                    __ptext13 01B2                                      __ptext15 0157  
                                    __ptext16 01B5                                      __ptext17 01B9  
                                _SwTimer1_u16 0072                                  _SwTimer2_u16 0070  
                            _TMR0_MaxCountGet 0000                                      int$flags 007E  
          __end_of_INTERRUPT_InterruptManager 0018                    _INTERRUPT_InterruptManager 0004  
                      __end_of_PerformSWTimer 0157                                    _INTCONbits 000B  
                            ?_PerformBlinkFSM 007B                          _INT_InterruptHandler 0022  
                      ??_INTERRUPT_Initialize 007D                                      intlevel1 0000  
                     ?_PIN_MANAGER_Initialize 007B               ??_TMR0_OverflowCallbackRegister 007D  
                            ?_PerformPowerFSM 007B                               _TMR0_CounterGet 0000  
                             _TMR0_CounterSet 0000                      ?_INT_SetInterruptHandler 007B  
                    __end_of_CLOCK_Initialize 019D                               ?_PerformSWTimer 007B  
                               __pstringtext1 0116                                 __pstringtext2 01A9  
                               __pstringtext3 01AC                               _TMR0_Initialize 012C  
                                  _TMR0_Start 01B2                __end_of_PIN_MANAGER_Initialize 017D  
